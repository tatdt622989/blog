{"meta":{"version":1,"warehouse":"4.0.2"},"models":{"Asset":[{"_id":"themes/light/source/fancybox/blank.gif","path":"fancybox/blank.gif","modified":0,"renderable":1},{"_id":"themes/light/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/light/source/fancybox/fancybox_loading.gif","path":"fancybox/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/light/source/fancybox/fancybox_loading@2x.gif","path":"fancybox/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/light/source/fancybox/fancybox_overlay.png","path":"fancybox/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/light/source/fancybox/fancybox_sprite.png","path":"fancybox/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/light/source/fancybox/fancybox_sprite@2x.png","path":"fancybox/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/light/source/fancybox/jquery.fancybox.css","path":"fancybox/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/light/source/fancybox/jquery.fancybox.pack.js","path":"fancybox/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/light/source/img/logo.png","path":"img/logo.png","modified":0,"renderable":1},{"_id":"themes/light/source/img/logo.svg","path":"img/logo.svg","modified":0,"renderable":1},{"_id":"themes/light/source/js/custom.js","path":"js/custom.js","modified":0,"renderable":1},{"_id":"themes/light/source/js/jquery-3.4.1.min.js","path":"js/jquery-3.4.1.min.js","modified":0,"renderable":1},{"_id":"themes/light/source/js/jquery.imagesloaded.min.js","path":"js/jquery.imagesloaded.min.js","modified":0,"renderable":1},{"_id":"themes/light/source/js/gallery.js","path":"js/gallery.js","modified":0,"renderable":1},{"_id":"themes/light/source/css/font/fontawesome-webfont.eot","path":"css/font/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/light/source/css/font/fontawesome-webfont.svg","path":"css/font/fontawesome-webfont.svg","modified":0,"renderable":1},{"_id":"themes/light/source/css/font/fontawesome-webfont.ttf","path":"css/font/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/light/source/css/font/fontawesome-webfont.woff","path":"css/font/fontawesome-webfont.woff","modified":0,"renderable":1}],"Cache":[{"_id":"source/_posts/2022-02-05-1.md","hash":"1e1411efa78333b982ba99fcf068d9dc7e7e68cb","modified":1645627150068},{"_id":"source/_posts/2022-02-05-2.md","hash":"3001e9eaf68cc9b01cada4e0624a56946bb988d7","modified":1688746710823},{"_id":"source/_posts/2022-02-05-4.md","hash":"19c2263b63445e0ea78805231508c7a8695f976a","modified":1688746717148},{"_id":"source/_posts/2022-02-05-3.md","hash":"f9e768fa7a1a7b35a872982ce8bcb841d1b7f83d","modified":1688746714010},{"_id":"source/_posts/2022-02-06-2.md","hash":"e63b437c3a4baf0fc641a20234b57bff5a646d71","modified":1644240612298},{"_id":"source/_posts/2022-02-06-1.md","hash":"23380a6780664b81b12c5624995cd4340941e387","modified":1644240612298},{"_id":"source/_posts/2022-02-06-3.md","hash":"d6b041270a4f74fda3bc650d48fe7f4825dc9b06","modified":1646236307694},{"_id":"source/_posts/2022-02-06-4.md","hash":"38fc1d462ca46b36b49c61ef8c8ab3a674a3244d","modified":1646236310501},{"_id":"source/_posts/2022-02-06-5.md","hash":"9405dd5f01f941daa66b9ee8ff1ec3b313a2ec80","modified":1688746722095},{"_id":"source/_posts/2022-03-01-1.md","hash":"95834dd143d658b7dfca0f15a3fc8ae3bbe5f5a7","modified":1646155126052},{"_id":"source/_posts/2022-03-02-1.md","hash":"5604b788ade0185f05f854671883626f6a165b6f","modified":1646755885725},{"_id":"source/_posts/2022-03-14-1.md","hash":"36864f05eb3969b6b653be97cad4113351486e16","modified":1688746727175},{"_id":"source/_posts/2023-03-05-TypeScript入門：什麼是TypeScript？.md","hash":"c33dc689cc7ce79c903c54679550a229c47ed13e","modified":1688746731882},{"_id":"source/_posts/2022-03-16-1.md","hash":"79a30aaeb83a781f819fdd3bdb7e690b9648f253","modified":1672069812660},{"_id":"source/_posts/2023-10-02-什麼是-GPT-Function-calling.md","hash":"cd9782ea044779349a4a8aee95ef7d68c6643d4b","modified":1696490996821},{"_id":"source/_posts/2023-07-08-使用-Firebase-Cloud-Functions-創建網頁後端API.md","hash":"541cc0a68940e434ced5a03dad67e020763966d8","modified":1688839539653},{"_id":"source/_posts/2022-02-05-4/blender-3.jpg","hash":"affe7eebf7f3535686bca77564a861cd98c56a7a","modified":1644240612296},{"_id":"source/_posts/2022-02-05-4/blender-2.jpg","hash":"1b527c6ec72169f1c65af533feed6b748947488e","modified":1644240612296},{"_id":"source/_posts/2022-03-01-1/cover.jpg","hash":"4dc4435e35c65cdf4c1c736f23374d38bc6c8c04","modified":1646150226153},{"_id":"source/_posts/2022-02-06-5/cover.jpg","hash":"6d9cddfafc3cfec573c2187612d2bf115a78a620","modified":1645983234522},{"_id":"source/_posts/2022-03-14-1/cover.jpg","hash":"f273dd093ab4d52a198365682bac9edb6d43798c","modified":1647273198457},{"_id":"source/_posts/2023-07-08-使用-Firebase-Cloud-Functions-創建網頁後端API/firebase1.png","hash":"3b3bbe4a7fbfde2ad6bcf28894721834db84e3b3","modified":1688801503372},{"_id":"source/_posts/2022-02-05-4/blender-4.jpg","hash":"58bb0355bfd807ee00bf131736e6daf5ce944aa8","modified":1644240612297},{"_id":"source/_posts/2023-07-08-使用-Firebase-Cloud-Functions-創建網頁後端API/firebase10.png","hash":"2cf646eaf36b5f4a7a2195f22e5cc46c5a383abd","modified":1688838254263},{"_id":"source/_posts/2023-07-08-使用-Firebase-Cloud-Functions-創建網頁後端API/firebase3.png","hash":"4d508c2b5e0b42bf8b49219980b940bc759a1b58","modified":1688829797297},{"_id":"source/_posts/2023-07-08-使用-Firebase-Cloud-Functions-創建網頁後端API/firebase2.png","hash":"3905fbcb640dba87ca79b3f580c98d7ba6867ac8","modified":1688819420997},{"_id":"source/_posts/2023-07-08-使用-Firebase-Cloud-Functions-創建網頁後端API/firebase7.png","hash":"3a7764530ef78a66c3d40d2c0632440f8fed7720","modified":1688833734142},{"_id":"source/_posts/2023-07-08-使用-Firebase-Cloud-Functions-創建網頁後端API/firebase6.png","hash":"61d72afa03ca88ab3f8e45715210bc0d68948404","modified":1688831588488},{"_id":"source/_posts/2023-07-08-使用-Firebase-Cloud-Functions-創建網頁後端API/firebase8.png","hash":"26ba209083028e4f09e2b5f264e3a006d84c3423","modified":1688836818057},{"_id":"source/_posts/2023-07-08-使用-Firebase-Cloud-Functions-創建網頁後端API/firebase9.png","hash":"7e6e57a3826b77b60f5e81abc0b13aca96910a6e","modified":1688836999955},{"_id":"source/_posts/2022-02-05-3/cover.jpg","hash":"838c734f705098edb2f58307e5f6fbac75804000","modified":1645627089421},{"_id":"source/_posts/2022-02-05-4/blender-1.jpg","hash":"fa3cd4e658c09e918a666885a960429004943540","modified":1644240612296},{"_id":"source/_posts/2022-03-02-1/cover.jpg","hash":"e17371881e4bd40790b7aad0e679b31aa47b6af8","modified":1646240402288},{"_id":"source/_posts/2023-07-08-使用-Firebase-Cloud-Functions-創建網頁後端API/firebase4.png","hash":"d3ba0c781ac6454586dba27a82c48ff955a72995","modified":1688830737523},{"_id":"source/_posts/2023-07-08-使用-Firebase-Cloud-Functions-創建網頁後端API/firebase5.png","hash":"768f278bd9052d4551d15801e16bc8d5319ecdb9","modified":1688831738209},{"_id":"source/_posts/2023-10-02-什麼是-GPT-Function-calling/cover.jpg","hash":"530ba6333f465aed6168968deaa3b14f891606df","modified":1696259230853},{"_id":"source/_posts/2022-02-05-4/cover.jpg","hash":"7bab968d9b5421b7121e9a0e583031d7b224b523","modified":1645627159183},{"_id":"source/_posts/2022-02-06-4/cover.jpg","hash":"fc1131f05bcc1356774e6be6664c9ce0f15411da","modified":1645627168932},{"_id":"source/_posts/2023-07-08-使用-Firebase-Cloud-Functions-創建網頁後端API/cover.jpg","hash":"c303a2224d9effab6154c861dd22a38c6b243f39","modified":1688748239136},{"_id":"source/_posts/2022-02-05-1/cover.jpg","hash":"17497489f8cba1d955ca8247dfed5bff4242f90b","modified":1645627071550},{"_id":"source/_posts/2023-03-05-TypeScript入門：什麼是TypeScript？/cover.jpg","hash":"f5d0bfff4d6ef91d9f8f151afd0519cf95e2017e","modified":1678031440164},{"_id":"themes/light/source/css/_base/utils.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1644065685524},{"_id":"themes/light/README.md","hash":"a4f127a5d8c58b88b13c7bbe5e54a926bd3861d5","modified":1644240847391},{"_id":"themes/light/languages/de-DE.yml","hash":"d29d1c4256b7ed9df42f511c2ff0a23ad5fd6c1f","modified":1644240847391},{"_id":"themes/light/_config.yml","hash":"aa5b46c380d6b99fd2c3fbbf6492dd6208475e4c","modified":1644086959710},{"_id":"themes/light/.gitignore","hash":"eaa3d84cb77d92a21b111fd1e37f53edc1ff9de0","modified":1644240847390},{"_id":"themes/light/LICENSE","hash":"17d3ed51d6d6962155f7dacd4f101f4969ad0bbe","modified":1644240847390},{"_id":"themes/light/languages/default.yml","hash":"ea5e6aee4cb14510793ac4593a3bddffe23e530c","modified":1644240847392},{"_id":"themes/light/languages/en-GB.yml","hash":"ea5e6aee4cb14510793ac4593a3bddffe23e530c","modified":1644240847392},{"_id":"themes/light/languages/de.yml","hash":"1ebe2d4f1b48c84e004c933bec65731fb54c9998","modified":1644240847391},{"_id":"themes/light/languages/en-US.yml","hash":"ea5e6aee4cb14510793ac4593a3bddffe23e530c","modified":1644240847392},{"_id":"themes/light/languages/en.yml","hash":"feb1dd022dc8897d65baa5b927de2a3d4178d798","modified":1644240847392},{"_id":"themes/light/languages/ja-JP.yml","hash":"08481267e0c112e1f6855620f2837ec4c4a98bbd","modified":1644240847393},{"_id":"themes/light/languages/es-ES.yml","hash":"7008a8fc91f18d2a735864817b8ebda30c7a2c66","modified":1644240847393},{"_id":"themes/light/languages/ja.yml","hash":"3b43fc314265c1260a41d1600598cd2f0ab9d087","modified":1644240847393},{"_id":"themes/light/languages/lt-LT.yml","hash":"0b51f65a5e5059eee74c219f3dd8ec501a28c891","modified":1644240847393},{"_id":"themes/light/languages/lt.yml","hash":"f84b72c94b2b6beb84df9e36e88037e74d3e3c7b","modified":1644240847394},{"_id":"themes/light/languages/pl-PL.yml","hash":"8a7089a3e060b5d159de3ca519f190231c6ccf53","modified":1644240847394},{"_id":"themes/light/languages/no.yml","hash":"d9a1b34d590f94ab5c03809754e62bc4cf0e8d0f","modified":1644240847394},{"_id":"themes/light/languages/ru.yml","hash":"37161bb9b6cc2dae1f53837185be32e7a0b8abfa","modified":1644240847395},{"_id":"themes/light/languages/pl.yml","hash":"19313b4c80c50196c364afe932dad3a975782817","modified":1644240847394},{"_id":"themes/light/languages/ru-RU.yml","hash":"360d11a28bb768afb1dd15f63fa7fd3a8cc547ee","modified":1644240847394},{"_id":"themes/light/languages/zh-TW.yml","hash":"b2474b775a8fa0fa3e9e3c58ddb11b20cf65dbc5","modified":1644240847395},{"_id":"themes/light/languages/es.yml","hash":"727707b95580bbe9773edef4c84a9735fd537742","modified":1644240847393},{"_id":"themes/light/languages/zh-CN.yml","hash":"751f1a2bbfb6736c71e846493ae0fb7ef7dc778d","modified":1644240847395},{"_id":"themes/light/layout/archive.ejs","hash":"a18842e3d719fe3ca9b977a6995f8facc75c8673","modified":1644065685521},{"_id":"themes/light/layout/index.ejs","hash":"c7cf84c84c26f1adfc249bc9a7605206fa245f73","modified":1644065685522},{"_id":"themes/light/layout/tag.ejs","hash":"45150a2365768b6b67880193c9264ad2bb4814db","modified":1644065685523},{"_id":"themes/light/layout/layout.ejs","hash":"dd4b0fce0c49cd6282527b89583ecceaf3ce6ab3","modified":1644065685522},{"_id":"themes/light/layout/_widget/category.ejs","hash":"a5a21f584477103fc872a3e6ab8aaea1406b7d3b","modified":1644065685489},{"_id":"themes/light/layout/category.ejs","hash":"9b740fc33f6f028df60f0bc4312bf3ebd03aa8ea","modified":1644065685522},{"_id":"themes/light/layout/_widget/recent_posts.ejs","hash":"ae6056d6e9423cd8ebd7c4ae5aafd576638e4992","modified":1644065685521},{"_id":"themes/light/layout/post.ejs","hash":"70cbc9854655773cc6ba84eecaaf330fed430465","modified":1644065685523},{"_id":"themes/light/layout/page.ejs","hash":"70cbc9854655773cc6ba84eecaaf330fed430465","modified":1644065685523},{"_id":"themes/light/layout/_widget/search.ejs","hash":"7d102ee25a9bf0e9c7a621c5cdb4ceedaddad177","modified":1644065685521},{"_id":"themes/light/layout/_widget/tagcloud.ejs","hash":"139e91b1e6abcc1e3883bcc03a9a1a7f1d891d7a","modified":1644065685521},{"_id":"themes/light/layout/_widget/tag.ejs","hash":"9f212961ebe21c442d47dbe5bbaa7a60d26195c6","modified":1644065685521},{"_id":"themes/light/layout/_partial/after_footer.ejs","hash":"416d9cf25a79e24c04b3323365930753f1e30df0","modified":1688874763656},{"_id":"themes/light/layout/_partial/comment.ejs","hash":"75059952ae78e29e3a001cf7dc48a6a1a670e9bd","modified":1688871994835},{"_id":"themes/light/layout/_partial/article.ejs","hash":"6320e860b016c574108bf6afe328383b79183949","modified":1644066613667},{"_id":"themes/light/layout/_partial/archive.ejs","hash":"050980921a95327e593c42dc08bc80de08f240e0","modified":1644066609830},{"_id":"themes/light/layout/_partial/facebook_comment.ejs","hash":"49ee54e84fe2b70bd9540e2eeba5a85f744941b0","modified":1644065685485},{"_id":"themes/light/layout/_partial/google_analytics.ejs","hash":"f73d8de209cb3fddc3aa33d6a4ac56caa18a79af","modified":1644065685486},{"_id":"themes/light/layout/_partial/footer.ejs","hash":"9efc038c310e49bf85561bd3cedd39adea2ac9b6","modified":1688874069559},{"_id":"themes/light/layout/_partial/head.ejs","hash":"41b98d5df12965ee6db031f71ffdc4342350ae26","modified":1699780532524},{"_id":"themes/light/source/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1644065685531},{"_id":"themes/light/layout/_partial/pagination.ejs","hash":"2dd06ecc75f5ac4d7cfd427ec0262899977e4865","modified":1644065685487},{"_id":"themes/light/layout/_partial/header.ejs","hash":"457c6422684fbbd32ec26f089ef25655edbe6fdd","modified":1688872423968},{"_id":"themes/light/source/css/style.styl","hash":"8e8458e78717c49c4ff278b741258d77301f6be4","modified":1644065685530},{"_id":"themes/light/layout/_partial/sidebar.ejs","hash":"016441ca9534769d8e151cffe4027686e9c86f18","modified":1644065685489},{"_id":"themes/light/source/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1644065685531},{"_id":"themes/light/source/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1644065685532},{"_id":"themes/light/source/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1644065685531},{"_id":"themes/light/source/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1644065685531},{"_id":"themes/light/source/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1644065685532},{"_id":"themes/light/source/fancybox/jquery.fancybox.css","hash":"82f33ad0842aa9c154d029e0dada2497d4eb1d57","modified":1644065685532},{"_id":"themes/light/source/img/logo.svg","hash":"4c8c1b3cfed68c4b18c6244907701477c65bbb2f","modified":1699107105294},{"_id":"themes/light/source/fancybox/jquery.fancybox.pack.js","hash":"ae6318aeb62ad4ce7a7e9a4cdacd93ffb004f0fb","modified":1644065685534},{"_id":"themes/light/source/img/logo.png","hash":"89e78fb76b591bff67d6e7838883d2d3965df763","modified":1683442779977},{"_id":"themes/light/source/js/custom.js","hash":"6b221c27f4db094dc32ff1d4b497e22ee00edb62","modified":1699779510572},{"_id":"themes/light/source/js/jquery.imagesloaded.min.js","hash":"28ef4346743a60c896a9ae492a544c0854904350","modified":1644065685535},{"_id":"themes/light/layout/_partial/post/share.ejs","hash":"b4d48ed6a28ed90182704beb3041e8c6b36a04ac","modified":1644065685488},{"_id":"themes/light/source/js/gallery.js","hash":"bcebc50bdbd66735f1454a4fcf139e9ad0317813","modified":1688873650963},{"_id":"themes/light/layout/_partial/post/tag.ejs","hash":"5f55c1a802f65357d3398f64a07917beb2454498","modified":1644065685488},{"_id":"themes/light/layout/_partial/post/gallery.ejs","hash":"fc23ef9b5a412e05436f68ff47146b860d2d4225","modified":1644065685488},{"_id":"themes/light/layout/_partial/post/title.ejs","hash":"b64f7211b08e9e67aa42a9ee064d49002e1aa9a1","modified":1688872123802},{"_id":"themes/light/layout/_partial/post/category.ejs","hash":"3f5e13bf0f7161feb8cc1a5ca12e4df20594d1aa","modified":1644065685487},{"_id":"themes/light/source/css/_base/layout.styl","hash":"6e61a629b633ca050db4e4922796eff21a85585a","modified":1699779581491},{"_id":"themes/light/source/css/_base/variable.styl","hash":"af6b79084949cff936cafdd1ab6bc15452795bd0","modified":1699460325754},{"_id":"themes/light/source/css/_partial/comment.styl","hash":"673b6feba8aa4e25d50a04138d7708f103f7215d","modified":1688875611293},{"_id":"themes/light/source/css/_partial/article.styl","hash":"4f18deb6943937a579cbc8251ade61aa1fc9216d","modified":1699460325804},{"_id":"themes/light/source/css/_partial/archive.styl","hash":"da4eeece5b5a162acad06cdc2e002428695e3459","modified":1689003531412},{"_id":"themes/light/source/css/_partial/footer.styl","hash":"98bda1e45d0a5f0946d6177216a63516892ff0ef","modified":1688874124969},{"_id":"themes/light/source/css/_partial/header.styl","hash":"164d74040fdf816a8814b2b7b90d92d23d77caf8","modified":1699460325754},{"_id":"themes/light/source/css/_partial/syntax.styl","hash":"6a74bf016443727c508b65795d5d747f8733037c","modified":1696258259495},{"_id":"themes/light/source/css/_partial/index.styl","hash":"4d25a9d6bace6c70f456fcd012edc9dc036dd468","modified":1699460394971},{"_id":"themes/light/source/css/_partial/sidebar.styl","hash":"8bfaa3ed713e90a3428b306abfb7282f3d825485","modified":1699460325754},{"_id":"themes/light/source/css/font/fontawesome-webfont.eot","hash":"d775f599ff3f23be082e6a9604b4898718923a37","modified":1644065685528},{"_id":"themes/light/source/css/font/fontawesome-webfont.woff","hash":"0612cddf2f835cceffccc88fd194f97367d0b024","modified":1644065685530},{"_id":"themes/light/source/js/jquery-3.4.1.min.js","hash":"b15f7cfa79519756dff1ad22553fd0ed09024343","modified":1644065685535},{"_id":"themes/light/source/css/font/fontawesome-webfont.svg","hash":"ff51bbb11dfe58345f41cead2c425d6e8be28176","modified":1644065685529},{"_id":"themes/light/source/css/font/fontawesome-webfont.ttf","hash":"a9468f6a1fe965fbcaf5a1bd6c11705e2fc5f84c","modified":1644065685529},{"_id":"source/_posts/2022-02-06-3/cover.jpg","hash":"f3a075d1261467aa376648d0e043c82d8abcae43","modified":1645627165420},{"_id":"public/content.json","hash":"8bab5e567718f597e205e35bf507e9e12fc6496f","modified":1699783303434},{"_id":"public/2023/03/05/TypeScript入門：什麼是TypeScript？/index.html","hash":"964e8882277a593bb33d7cb03fb241e767ac5cdf","modified":1699780545568},{"_id":"public/2022/03/02/1/index.html","hash":"2041c1cbb8e25b82ced58ac602e7881c664638d0","modified":1699780545568},{"_id":"public/2022/03/01/1/index.html","hash":"82593c782755fde5c7d6a77fd97b8ca5d30e2a37","modified":1699780545568},{"_id":"public/2022/02/06/4/index.html","hash":"eae195cbc4d8545567456e36b3027c515c7d5485","modified":1699780545568},{"_id":"public/2022/02/06/3/index.html","hash":"fe95f7b5f2de9735bbe8a25e5187db97202a4709","modified":1699780545568},{"_id":"public/2022/02/06/2/index.html","hash":"ef37a9346646976cc686680029d544113ea39cf7","modified":1699780545568},{"_id":"public/2022/02/05/4/index.html","hash":"48d76c3dde840442e38e2d3a86c05e0b6628d1b3","modified":1699780545568},{"_id":"public/2022/02/05/2/index.html","hash":"3f2badb76b65dfd7ed8c1f959806481b8f5a9c7b","modified":1699780545568},{"_id":"public/2022/02/05/1/index.html","hash":"98b293ec913ee196d5399e56e84fdea7e2e5a6c9","modified":1699780545568},{"_id":"public/2022/03/16/1/index.html","hash":"181ef6f997aeb14aaa099bb24a7d9071095a22c8","modified":1699780545568},{"_id":"public/archives/index.html","hash":"405d34db4eaa0edc7793670c5ac791bb100e9654","modified":1699780545568},{"_id":"public/archives/page/2/index.html","hash":"cf09db83851500cb1a2169445e3000c14143d16c","modified":1699780545568},{"_id":"public/archives/2022/index.html","hash":"e26b9076014f514cb61235e25bcb718937151c64","modified":1699780545568},{"_id":"public/archives/2022/page/2/index.html","hash":"3c4442459ec621dc47ae5b4dc25ffb9407ea8c15","modified":1699780545568},{"_id":"public/archives/2022/02/index.html","hash":"54768801709ae7f872108140939c433ae3f290f7","modified":1699780545568},{"_id":"public/archives/2022/03/index.html","hash":"d7824c32ab39f7afab9cbc8440ffa902857b80a4","modified":1699780545568},{"_id":"public/archives/2023/index.html","hash":"9d36bd41e152da49feeb16eb54886d69e2aab909","modified":1699780545568},{"_id":"public/archives/2023/03/index.html","hash":"055f44ba0200adc50a91e424aa1c8948e7363df6","modified":1699780545568},{"_id":"public/archives/2023/07/index.html","hash":"267f6652384db56934c5f154063e836854e6ee3c","modified":1699780545568},{"_id":"public/archives/2023/10/index.html","hash":"5f91a9a5cf4caec45875e04fc5addb45380a1e10","modified":1699780545568},{"_id":"public/page/2/index.html","hash":"a22f947d953de4e1b7818290b54d54e4649245a3","modified":1699780545568},{"_id":"public/tags/other/index.html","hash":"0bb76eeed4073feeb93657efd2f481a1edba1d29","modified":1699780545568},{"_id":"public/tags/React/index.html","hash":"abe23fcc19073fd4cb57ab41c3d3e04dffab4afe","modified":1699780545568},{"_id":"public/tags/framework/index.html","hash":"911c6dd4a4642c85a3f9fcf3625dba13b412c0ef","modified":1699780545568},{"_id":"public/tags/JavaScript/index.html","hash":"0623bc382443d06f9554ca91758610f712d98962","modified":1699780545568},{"_id":"public/tags/plugin/index.html","hash":"df8ffe1e310da0ca612fb190e2e6054f4ec02b46","modified":1699780545568},{"_id":"public/tags/Three-js/index.html","hash":"b092063dc748ea3c6b5f8df2a954a9a1e826d512","modified":1699780545568},{"_id":"public/tags/3d/index.html","hash":"912701ccb51a8d63637d276e5607d074d61b61c1","modified":1699780545568},{"_id":"public/tags/Blender/index.html","hash":"040d6297eafcf55d3aef9d285920a6236ea4be62","modified":1699780545568},{"_id":"public/tags/scss/index.html","hash":"6eebc70f636e13bf9428d02fcd9b939828be533f","modified":1699780545568},{"_id":"public/tags/front-end/index.html","hash":"8729e1cdf79ba04f6d807823ba472fb4559fc47a","modified":1699780545568},{"_id":"public/tags/share/index.html","hash":"0206f69727cd1f62d50043d6a216b9b789f7a64a","modified":1699780545568},{"_id":"public/tags/design/index.html","hash":"cf4e1f288c27dca93664891e1d11c0a33619d48c","modified":1699780545568},{"_id":"public/tags/interview/index.html","hash":"505868d2bbee40c5fd7e1cad991617475af1c1f3","modified":1699780545568},{"_id":"public/tags/Japanese/index.html","hash":"f9c642d36d663bc30bb7a0bdc66ba94e00a8a0b1","modified":1699780545568},{"_id":"public/tags/tween-js/index.html","hash":"7f2d90046989be5cb2cdfc1fbb184931af75c583","modified":1699780545568},{"_id":"public/tags/Google-Map/index.html","hash":"9ed14c06622958828afeb1bba04b3098fac9ae2e","modified":1699780545568},{"_id":"public/tags/TypeScript/index.html","hash":"e4abe57ca98a695fe0584a32b63def8c55dfd844","modified":1699780545568},{"_id":"public/tags/Firebase/index.html","hash":"90fb617bbac36ac01dd5430ee3e12e194d47e045","modified":1699780545568},{"_id":"public/tags/GPT/index.html","hash":"aca455900d1b1a5acb736ef2a64920726adf847f","modified":1699780545568},{"_id":"public/tags/Node-js/index.html","hash":"cb862c72a5d0d8de75242ebf5b3a4f876c402987","modified":1699780545568},{"_id":"public/tags/AI/index.html","hash":"d5373e5e2037cd72eb2a4f0cb958f9f237a7183b","modified":1699780545568},{"_id":"public/2023/10/02/什麼是-GPT-Function-calling/index.html","hash":"9ce7eda616c2fed64fc13b67340960147d654feb","modified":1699780545568},{"_id":"public/2023/07/08/使用-Firebase-Cloud-Functions-創建網頁後端API/index.html","hash":"4e78ab79abf4629d97dfe7e4f4ce85478e073f9f","modified":1699780545568},{"_id":"public/2022/03/14/1/index.html","hash":"acb5be1aabe9d4b6a292909c8fb0b0b6d15d08f3","modified":1699780545568},{"_id":"public/2022/02/06/5/index.html","hash":"a8725c7dea6a2754846eac500c9f911f06892589","modified":1699780545568},{"_id":"public/2022/02/06/1/index.html","hash":"d69e5581d6495aacf740625cd1f54b595bd2a7f6","modified":1699780545568},{"_id":"public/2022/02/05/3/index.html","hash":"6b8ce6950005118b6dd99e6516120ec6d571da73","modified":1699780545568},{"_id":"public/index.html","hash":"4683fa0294f43062ddd23c1251cb9af8923a38ec","modified":1699780545568},{"_id":"public/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1699780545568},{"_id":"public/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1699780545568},{"_id":"public/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1699780545568},{"_id":"public/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1699780545568},{"_id":"public/img/logo.png","hash":"89e78fb76b591bff67d6e7838883d2d3965df763","modified":1699780545568},{"_id":"public/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1699780545568},{"_id":"public/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1699780545568},{"_id":"public/img/logo.svg","hash":"4c8c1b3cfed68c4b18c6244907701477c65bbb2f","modified":1699780545568},{"_id":"public/css/font/fontawesome-webfont.eot","hash":"d775f599ff3f23be082e6a9604b4898718923a37","modified":1699780545568},{"_id":"public/css/font/fontawesome-webfont.woff","hash":"0612cddf2f835cceffccc88fd194f97367d0b024","modified":1699780545568},{"_id":"public/2022/02/05/4/blender-2.jpg","hash":"1b527c6ec72169f1c65af533feed6b748947488e","modified":1699780545568},{"_id":"public/2022/02/05/4/blender-4.jpg","hash":"58bb0355bfd807ee00bf131736e6daf5ce944aa8","modified":1699780545568},{"_id":"public/2022/02/05/4/blender-3.jpg","hash":"affe7eebf7f3535686bca77564a861cd98c56a7a","modified":1699780545568},{"_id":"public/2022/02/06/5/cover.jpg","hash":"6d9cddfafc3cfec573c2187612d2bf115a78a620","modified":1699780545568},{"_id":"public/2022/03/01/1/cover.jpg","hash":"4dc4435e35c65cdf4c1c736f23374d38bc6c8c04","modified":1699780545568},{"_id":"public/2022/03/14/1/cover.jpg","hash":"f273dd093ab4d52a198365682bac9edb6d43798c","modified":1699780545568},{"_id":"public/2023/07/08/使用-Firebase-Cloud-Functions-創建網頁後端API/firebase1.png","hash":"3b3bbe4a7fbfde2ad6bcf28894721834db84e3b3","modified":1699780545568},{"_id":"public/2023/07/08/使用-Firebase-Cloud-Functions-創建網頁後端API/firebase10.png","hash":"2cf646eaf36b5f4a7a2195f22e5cc46c5a383abd","modified":1699780545568},{"_id":"public/2023/07/08/使用-Firebase-Cloud-Functions-創建網頁後端API/firebase2.png","hash":"3905fbcb640dba87ca79b3f580c98d7ba6867ac8","modified":1699780545568},{"_id":"public/2023/07/08/使用-Firebase-Cloud-Functions-創建網頁後端API/firebase3.png","hash":"4d508c2b5e0b42bf8b49219980b940bc759a1b58","modified":1699780545568},{"_id":"public/2023/07/08/使用-Firebase-Cloud-Functions-創建網頁後端API/firebase6.png","hash":"61d72afa03ca88ab3f8e45715210bc0d68948404","modified":1699780545568},{"_id":"public/2023/07/08/使用-Firebase-Cloud-Functions-創建網頁後端API/firebase7.png","hash":"3a7764530ef78a66c3d40d2c0632440f8fed7720","modified":1699780545568},{"_id":"public/2023/07/08/使用-Firebase-Cloud-Functions-創建網頁後端API/firebase8.png","hash":"26ba209083028e4f09e2b5f264e3a006d84c3423","modified":1699780545568},{"_id":"public/2023/07/08/使用-Firebase-Cloud-Functions-創建網頁後端API/firebase9.png","hash":"7e6e57a3826b77b60f5e81abc0b13aca96910a6e","modified":1699780545568},{"_id":"public/css/font/fontawesome-webfont.ttf","hash":"a9468f6a1fe965fbcaf5a1bd6c11705e2fc5f84c","modified":1699780545568},{"_id":"public/css/font/fontawesome-webfont.svg","hash":"ff51bbb11dfe58345f41cead2c425d6e8be28176","modified":1699780545568},{"_id":"public/2022/02/05/3/cover.jpg","hash":"838c734f705098edb2f58307e5f6fbac75804000","modified":1699780545568},{"_id":"public/2022/02/05/4/blender-1.jpg","hash":"fa3cd4e658c09e918a666885a960429004943540","modified":1699780545568},{"_id":"public/2022/03/02/1/cover.jpg","hash":"e17371881e4bd40790b7aad0e679b31aa47b6af8","modified":1699780545568},{"_id":"public/js/custom.js","hash":"e2f3309fdff81d8cf7127752ce2dc7d923141c68","modified":1699780545568},{"_id":"public/fancybox/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1699780545568},{"_id":"public/js/jquery.imagesloaded.min.js","hash":"4109837b1f6477bacc6b095a863b1b95b1b3693f","modified":1699780545568},{"_id":"public/js/gallery.js","hash":"ba26a1057ad0d415d18b36e84ca6d14726b4fea3","modified":1699780545568},{"_id":"public/css/style.css","hash":"992a18522f3005c680e23634182cb5007763554c","modified":1699780545568},{"_id":"public/fancybox/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1699780545568},{"_id":"public/js/jquery-3.4.1.min.js","hash":"88523924351bac0b5d560fe0c5781e2556e7693d","modified":1699780545568},{"_id":"public/2023/10/02/什麼是-GPT-Function-calling/cover.jpg","hash":"530ba6333f465aed6168968deaa3b14f891606df","modified":1699780545568},{"_id":"public/2023/07/08/使用-Firebase-Cloud-Functions-創建網頁後端API/firebase4.png","hash":"d3ba0c781ac6454586dba27a82c48ff955a72995","modified":1699780545568},{"_id":"public/2023/07/08/使用-Firebase-Cloud-Functions-創建網頁後端API/firebase5.png","hash":"768f278bd9052d4551d15801e16bc8d5319ecdb9","modified":1699780545568},{"_id":"public/2022/02/05/4/cover.jpg","hash":"7bab968d9b5421b7121e9a0e583031d7b224b523","modified":1699780545568},{"_id":"public/2022/02/06/4/cover.jpg","hash":"fc1131f05bcc1356774e6be6664c9ce0f15411da","modified":1699780545568},{"_id":"public/2023/07/08/使用-Firebase-Cloud-Functions-創建網頁後端API/cover.jpg","hash":"c303a2224d9effab6154c861dd22a38c6b243f39","modified":1699780545568},{"_id":"public/2022/02/05/1/cover.jpg","hash":"17497489f8cba1d955ca8247dfed5bff4242f90b","modified":1699780545568},{"_id":"public/2023/03/05/TypeScript入門：什麼是TypeScript？/cover.jpg","hash":"f5d0bfff4d6ef91d9f8f151afd0519cf95e2017e","modified":1699780545568},{"_id":"public/2022/02/06/3/cover.jpg","hash":"f3a075d1261467aa376648d0e043c82d8abcae43","modified":1699780545568},{"_id":"source/_posts/2023-11-07-日語自學也能高效，精選七款AI學習工具大公開.md","hash":"28b405f317d5c06227708765ac98b11a24da6eb2","modified":1699783297973},{"_id":"source/_posts/2023-11-07-日語自學也能高效，精選七款AI學習工具大公開/cover.jpg","hash":"5c5817c296366cd194585314ff2470728f8bb116","modified":1699371711906},{"_id":"source/_posts/2023-11-07-日語自學也能高效，精選七款AI學習工具大公開/imahanashitai.webp","hash":"5360e457c0979d43b302e5d62459c3f9d4000113","modified":1699458780040},{"_id":"source/_posts/2023-11-07-日語自學也能高效，精選七款AI學習工具大公開/voice_control.png","hash":"91b0ebd7625fe0333fa789558dc9acf10b18aa33","modified":1699461217890},{"_id":"source/_posts/2023-11-07-日語自學也能高效，精選七款AI學習工具大公開/app.talkberry.ai_.png","hash":"45d48cc3f16afe529dab92544d6aaddd139ead5c","modified":1699462257841},{"_id":"source/_posts/2023-11-07-日語自學也能高效，精選七款AI學習工具大公開/aoi.png","hash":"d8800bca9b84553ee8f605981b446b9d376597a0","modified":1699718683600},{"_id":"source/_posts/2023-11-07-日語自學也能高效，精選七款AI學習工具大公開/app.talkberry.ai.png","hash":"1fa3356c0ffdabbc2c73f2515d174fd044513a5f","modified":1699696903814},{"_id":"source/_posts/2023-11-07-日語自學也能高效，精選七款AI學習工具大公開/speakai.cc.png","hash":"045f1d831627d6ba41f95f7de65c79697b58aeb9","modified":1699696903814},{"_id":"source/_posts/2023-11-07-日語自學也能高效，精選七款AI學習工具大公開/www.langotalk.org_Lobby.png","hash":"a90cc74a98e3b99c7b92ed21209197cda561f3f5","modified":1699775605353},{"_id":"source/_posts/2023-11-07-日語自學也能高效，精選七款AI學習工具大公開/talkio.ai.png","hash":"ca82a82daf71b99b927673560094210591af529c","modified":1699772339171},{"_id":"public/archives/2023/11/index.html","hash":"d9e08e548dcb68cda94ebf0d391bad39ed11fd2b","modified":1699780545568},{"_id":"public/2023/11/07/日語自學也能高效，精選七款AI學習工具大公開/index.html","hash":"f6f57cf37308d59eaa4eb8e8c6f44013c1a18b2e","modified":1699783303434},{"_id":"public/2023/11/07/日語自學也能高效，精選七款AI學習工具大公開/imahanashitai.webp","hash":"5360e457c0979d43b302e5d62459c3f9d4000113","modified":1699780545568},{"_id":"public/2023/11/07/日語自學也能高效，精選七款AI學習工具大公開/www.langotalk.org_Lobby.png","hash":"a90cc74a98e3b99c7b92ed21209197cda561f3f5","modified":1699780545568},{"_id":"public/2023/11/07/日語自學也能高效，精選七款AI學習工具大公開/aoi.png","hash":"d8800bca9b84553ee8f605981b446b9d376597a0","modified":1699780545568},{"_id":"public/2023/11/07/日語自學也能高效，精選七款AI學習工具大公開/voice_control.png","hash":"91b0ebd7625fe0333fa789558dc9acf10b18aa33","modified":1699780545568},{"_id":"public/2023/11/07/日語自學也能高效，精選七款AI學習工具大公開/talkio.ai.png","hash":"ca82a82daf71b99b927673560094210591af529c","modified":1699780545568},{"_id":"public/2023/11/07/日語自學也能高效，精選七款AI學習工具大公開/cover.jpg","hash":"5c5817c296366cd194585314ff2470728f8bb116","modified":1699780545568},{"_id":"public/2023/11/07/日語自學也能高效，精選七款AI學習工具大公開/app.talkberry.ai.png","hash":"1fa3356c0ffdabbc2c73f2515d174fd044513a5f","modified":1699780545568},{"_id":"public/2023/11/07/日語自學也能高效，精選七款AI學習工具大公開/speakai.cc.png","hash":"045f1d831627d6ba41f95f7de65c79697b58aeb9","modified":1699780545568}],"Category":[],"Data":[],"Page":[],"Post":[{"title":"開始寫部落格啦！","date":"2022-02-05T14:30:16.000Z","_content":"\n![](cover.jpg)\n\n哈囉！首先歡迎來到六魚丸的部落格，讓我先自我介紹一下，我是六魚丸，設計科系畢業，在大二的時候開始學網頁逐漸踏入前端領域，畢業後的第一份工作是到資訊公司擔任前端工程師，目前雖然只是一個待九個月的菜鳥，但是也累積了一些經驗和知識，心想如果再不寫下來，就會忘記啦！所以建立了一個部落格平台，開始記錄一些工作上、知識上的內容！","source":"_posts/2022-02-05-1.md","raw":"---\ntitle: 開始寫部落格啦！\ndate: 2022-02-05 22:30:16\ntags:\n- other\n---\n\n![](cover.jpg)\n\n哈囉！首先歡迎來到六魚丸的部落格，讓我先自我介紹一下，我是六魚丸，設計科系畢業，在大二的時候開始學網頁逐漸踏入前端領域，畢業後的第一份工作是到資訊公司擔任前端工程師，目前雖然只是一個待九個月的菜鳥，但是也累積了一些經驗和知識，心想如果再不寫下來，就會忘記啦！所以建立了一個部落格平台，開始記錄一些工作上、知識上的內容！","slug":"1","published":1,"updated":"2022-02-23T14:39:10.068Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clok3v80h00001wva7izn47wz","content":"<p><img src=\"/2022/02/05/1/cover.jpg\"></p>\n<p>哈囉！首先歡迎來到六魚丸的部落格，讓我先自我介紹一下，我是六魚丸，設計科系畢業，在大二的時候開始學網頁逐漸踏入前端領域，畢業後的第一份工作是到資訊公司擔任前端工程師，目前雖然只是一個待九個月的菜鳥，但是也累積了一些經驗和知識，心想如果再不寫下來，就會忘記啦！所以建立了一個部落格平台，開始記錄一些工作上、知識上的內容！</p>\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"/2022/02/05/1/cover.jpg\"></p>\n<p>哈囉！首先歡迎來到六魚丸的部落格，讓我先自我介紹一下，我是六魚丸，設計科系畢業，在大二的時候開始學網頁逐漸踏入前端領域，畢業後的第一份工作是到資訊公司擔任前端工程師，目前雖然只是一個待九個月的菜鳥，但是也累積了一些經驗和知識，心想如果再不寫下來，就會忘記啦！所以建立了一個部落格平台，開始記錄一些工作上、知識上的內容！</p>\n"},{"title":"React與ReactDOM的區別","date":"2022-02-05T14:39:14.000Z","_content":"## React\n\nReact是在所有使用React的環境中共用的函式庫。\nReact 是 React 函式庫的進入點。 如果你使用script標籤載入 React,這些頂層 API 可以在 React 全域變數使用。如果你使用 ES6 撰寫並使用 npm，你可以寫成 import React from ‘react’ 。如果你使用 ES5 撰寫並使用 npm，你可以寫成 var React = require(‘react’) 。\n\n## ReactDOM\n\nReact可能不是使用於網頁環境，ReactDOM則是專門用於網頁環境的函示庫。<br>如果使用 script 標籤載入 React 這些頂層 API 就可以在全域 ReactDOM 上找到。如果你使用 ES6 和 npm，你可以寫成 import ReactDOM from ‘react-dom’。如果你使用 ES5 和 npm，你可以寫成 var ReactDOM = require(‘react-dom’)。","source":"_posts/2022-02-05-2.md","raw":"---\ntitle: React與ReactDOM的區別\ndate: 2022-02-05 22:39:14\ntags:\n- React\n- framework\n- JavaScript\n---\n## React\n\nReact是在所有使用React的環境中共用的函式庫。\nReact 是 React 函式庫的進入點。 如果你使用script標籤載入 React,這些頂層 API 可以在 React 全域變數使用。如果你使用 ES6 撰寫並使用 npm，你可以寫成 import React from ‘react’ 。如果你使用 ES5 撰寫並使用 npm，你可以寫成 var React = require(‘react’) 。\n\n## ReactDOM\n\nReact可能不是使用於網頁環境，ReactDOM則是專門用於網頁環境的函示庫。<br>如果使用 script 標籤載入 React 這些頂層 API 就可以在全域 ReactDOM 上找到。如果你使用 ES6 和 npm，你可以寫成 import ReactDOM from ‘react-dom’。如果你使用 ES5 和 npm，你可以寫成 var ReactDOM = require(‘react-dom’)。","slug":"2","published":1,"updated":"2023-07-07T16:18:30.823Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clok3v80l00011wvahy8vbhus","content":"<h2 id=\"React\"><a href=\"#React\" class=\"headerlink\" title=\"React\"></a>React</h2><p>React是在所有使用React的環境中共用的函式庫。<br>React 是 React 函式庫的進入點。 如果你使用script標籤載入 React,這些頂層 API 可以在 React 全域變數使用。如果你使用 ES6 撰寫並使用 npm，你可以寫成 import React from ‘react’ 。如果你使用 ES5 撰寫並使用 npm，你可以寫成 var React &#x3D; require(‘react’) 。</p>\n<h2 id=\"ReactDOM\"><a href=\"#ReactDOM\" class=\"headerlink\" title=\"ReactDOM\"></a>ReactDOM</h2><p>React可能不是使用於網頁環境，ReactDOM則是專門用於網頁環境的函示庫。<br>如果使用 script 標籤載入 React 這些頂層 API 就可以在全域 ReactDOM 上找到。如果你使用 ES6 和 npm，你可以寫成 import ReactDOM from ‘react-dom’。如果你使用 ES5 和 npm，你可以寫成 var ReactDOM &#x3D; require(‘react-dom’)。</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"React\"><a href=\"#React\" class=\"headerlink\" title=\"React\"></a>React</h2><p>React是在所有使用React的環境中共用的函式庫。<br>React 是 React 函式庫的進入點。 如果你使用script標籤載入 React,這些頂層 API 可以在 React 全域變數使用。如果你使用 ES6 撰寫並使用 npm，你可以寫成 import React from ‘react’ 。如果你使用 ES5 撰寫並使用 npm，你可以寫成 var React &#x3D; require(‘react’) 。</p>\n<h2 id=\"ReactDOM\"><a href=\"#ReactDOM\" class=\"headerlink\" title=\"ReactDOM\"></a>ReactDOM</h2><p>React可能不是使用於網頁環境，ReactDOM則是專門用於網頁環境的函示庫。<br>如果使用 script 標籤載入 React 這些頂層 API 就可以在全域 ReactDOM 上找到。如果你使用 ES6 和 npm，你可以寫成 import ReactDOM from ‘react-dom’。如果你使用 ES5 和 npm，你可以寫成 var ReactDOM &#x3D; require(‘react-dom’)。</p>\n"},{"title":"輕巧實用的圖表套件Chart.js","date":"2022-02-05T15:00:24.000Z","_content":"\n![](cover.jpg)\n\nChart.js是一款輕巧但又包含了豐富內容的圖表套件，它可以幫助我們快速的製作出各種美觀的圖表，種類包含了折線圖(Line Chart)、圓餅圖(Pie Chart)、甜甜圈圖(Doughnut Chart)、雷達圖(Radar Chart)等多種圖形，並且每種圖形都提供了高度的客製化功能，滿足各種不同需求，在這裡介紹快速上手的方法，若想知道更多關於Chart.js可以做到的事情可以看看他們的[官方文件](https://www.chartjs.org/docs/latest/)\n\n<!-- more -->\n\n## 安裝\n\n### npm\n\n``` javascript\nnpm install chart.js\n```\n\n### CDN\n\n``` html\n<script src=\"https://cdnjs.com/libraries/Chart.js\"></script>\n```\n\n## 引入方式\n\n### Script標籤\n\n``` html\n<script src=\"path/to/chartjs/dist/chart.js\"></script>\n<script>\n    const myChart = new Chart(ctx, {...});\n</script>\n```\n\n### Webpack\n\n``` javascript\nimport { Chart, registerables } from 'chart.js';\nChart.register(...registerables);\n\nconst myChart = new Chart(ctx, {...});\n```\n\n## 使用\n\n 先在html中建立畫布\n``` html\n<canvas id=\"myChart\" width=\"400\" height=\"400\"></canvas>\n```\n\n取得畫布元素\n``` javascript\nconst ctx = document.getElementById('myChart');\n```\n\n建立圖表\n``` javascript\nconst data = {\n  labels: [\n    'Red',\n    'Blue',\n    'Yellow'\n  ], // labels 為圖例的內容\n  datasets: [{\n    label: 'My First Dataset',\n    data: [300, 50, 100],\n    backgroundColor: [\n      'rgb(255, 99, 132)',\n      'rgb(54, 162, 235)',\n      'rgb(255, 205, 86)'\n    ],\n    hoverOffset: 4\n  }]\n};\nconst myChart = new Chart(ctx, {\n    type: 'pie', // 圖表種類\n    data,\n    options: {\n      plugins: {\n        legend: {\n          // legend 為圖例的設定\n          position: 'bottom',\n          labels: {\n            color: '#F8EBCF',\n            padding: 20,\n            boxHeight: 24,\n            font: {\n              size: 16,\n            },\n          },\n          maxWidth: 400,\n        },\n      },\n    },\n});\n```\n\n更新圖表\n``` javascript\nmyChart.data.datasets[0].data[2] = 50; // 先修改資料\nmyChart.update(); // 再調用更新\n```\n\n調整畫布尺寸\n``` javascript\nmyChart.resize(); // 根據父元素尺寸\nmyChart.resize(width, height); // 自訂尺寸\n```\n\n銷毀圖表\n``` javascript\nmyChart.destroy();\n```","source":"_posts/2022-02-05-3.md","raw":"---\ntitle: 輕巧實用的圖表套件Chart.js\ndate: 2022-02-05 23:00:24\ntags:\n- plugin\n- JavaScript\n---\n\n![](cover.jpg)\n\nChart.js是一款輕巧但又包含了豐富內容的圖表套件，它可以幫助我們快速的製作出各種美觀的圖表，種類包含了折線圖(Line Chart)、圓餅圖(Pie Chart)、甜甜圈圖(Doughnut Chart)、雷達圖(Radar Chart)等多種圖形，並且每種圖形都提供了高度的客製化功能，滿足各種不同需求，在這裡介紹快速上手的方法，若想知道更多關於Chart.js可以做到的事情可以看看他們的[官方文件](https://www.chartjs.org/docs/latest/)\n\n<!-- more -->\n\n## 安裝\n\n### npm\n\n``` javascript\nnpm install chart.js\n```\n\n### CDN\n\n``` html\n<script src=\"https://cdnjs.com/libraries/Chart.js\"></script>\n```\n\n## 引入方式\n\n### Script標籤\n\n``` html\n<script src=\"path/to/chartjs/dist/chart.js\"></script>\n<script>\n    const myChart = new Chart(ctx, {...});\n</script>\n```\n\n### Webpack\n\n``` javascript\nimport { Chart, registerables } from 'chart.js';\nChart.register(...registerables);\n\nconst myChart = new Chart(ctx, {...});\n```\n\n## 使用\n\n 先在html中建立畫布\n``` html\n<canvas id=\"myChart\" width=\"400\" height=\"400\"></canvas>\n```\n\n取得畫布元素\n``` javascript\nconst ctx = document.getElementById('myChart');\n```\n\n建立圖表\n``` javascript\nconst data = {\n  labels: [\n    'Red',\n    'Blue',\n    'Yellow'\n  ], // labels 為圖例的內容\n  datasets: [{\n    label: 'My First Dataset',\n    data: [300, 50, 100],\n    backgroundColor: [\n      'rgb(255, 99, 132)',\n      'rgb(54, 162, 235)',\n      'rgb(255, 205, 86)'\n    ],\n    hoverOffset: 4\n  }]\n};\nconst myChart = new Chart(ctx, {\n    type: 'pie', // 圖表種類\n    data,\n    options: {\n      plugins: {\n        legend: {\n          // legend 為圖例的設定\n          position: 'bottom',\n          labels: {\n            color: '#F8EBCF',\n            padding: 20,\n            boxHeight: 24,\n            font: {\n              size: 16,\n            },\n          },\n          maxWidth: 400,\n        },\n      },\n    },\n});\n```\n\n更新圖表\n``` javascript\nmyChart.data.datasets[0].data[2] = 50; // 先修改資料\nmyChart.update(); // 再調用更新\n```\n\n調整畫布尺寸\n``` javascript\nmyChart.resize(); // 根據父元素尺寸\nmyChart.resize(width, height); // 自訂尺寸\n```\n\n銷毀圖表\n``` javascript\nmyChart.destroy();\n```","slug":"3","published":1,"updated":"2023-07-07T16:18:34.010Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clok3v80p00031wva25yhf20x","content":"<p><img src=\"/2022/02/05/3/cover.jpg\"></p>\n<p>Chart.js是一款輕巧但又包含了豐富內容的圖表套件，它可以幫助我們快速的製作出各種美觀的圖表，種類包含了折線圖(Line Chart)、圓餅圖(Pie Chart)、甜甜圈圖(Doughnut Chart)、雷達圖(Radar Chart)等多種圖形，並且每種圖形都提供了高度的客製化功能，滿足各種不同需求，在這裡介紹快速上手的方法，若想知道更多關於Chart.js可以做到的事情可以看看他們的<a href=\"https://www.chartjs.org/docs/latest/\">官方文件</a></p>\n<span id=\"more\"></span>\n\n<h2 id=\"安裝\"><a href=\"#安裝\" class=\"headerlink\" title=\"安裝\"></a>安裝</h2><h3 id=\"npm\"><a href=\"#npm\" class=\"headerlink\" title=\"npm\"></a>npm</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install chart.<span class=\"property\">js</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"CDN\"><a href=\"#CDN\" class=\"headerlink\" title=\"CDN\"></a>CDN</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;https://cdnjs.com/libraries/Chart.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"引入方式\"><a href=\"#引入方式\" class=\"headerlink\" title=\"引入方式\"></a>引入方式</h2><h3 id=\"Script標籤\"><a href=\"#Script標籤\" class=\"headerlink\" title=\"Script標籤\"></a>Script標籤</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;path/to/chartjs/dist/chart.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">const</span> myChart = <span class=\"keyword\">new</span> <span class=\"title class_\">Chart</span>(ctx, &#123;...&#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Webpack\"><a href=\"#Webpack\" class=\"headerlink\" title=\"Webpack\"></a>Webpack</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; <span class=\"title class_\">Chart</span>, registerables &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;chart.js&#x27;</span>;</span><br><span class=\"line\"><span class=\"title class_\">Chart</span>.<span class=\"title function_\">register</span>(...registerables);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> myChart = <span class=\"keyword\">new</span> <span class=\"title class_\">Chart</span>(ctx, &#123;...&#125;);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h2><p> 先在html中建立畫布</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">canvas</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;myChart&quot;</span> <span class=\"attr\">width</span>=<span class=\"string\">&quot;400&quot;</span> <span class=\"attr\">height</span>=<span class=\"string\">&quot;400&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">canvas</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>取得畫布元素</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> ctx = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;myChart&#x27;</span>);</span><br></pre></td></tr></table></figure>\n\n<p>建立圖表</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> data = &#123;</span><br><span class=\"line\">  <span class=\"attr\">labels</span>: [</span><br><span class=\"line\">    <span class=\"string\">&#x27;Red&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;Blue&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;Yellow&#x27;</span></span><br><span class=\"line\">  ], <span class=\"comment\">// labels 為圖例的內容</span></span><br><span class=\"line\">  <span class=\"attr\">datasets</span>: [&#123;</span><br><span class=\"line\">    <span class=\"attr\">label</span>: <span class=\"string\">&#x27;My First Dataset&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">data</span>: [<span class=\"number\">300</span>, <span class=\"number\">50</span>, <span class=\"number\">100</span>],</span><br><span class=\"line\">    <span class=\"attr\">backgroundColor</span>: [</span><br><span class=\"line\">      <span class=\"string\">&#x27;rgb(255, 99, 132)&#x27;</span>,</span><br><span class=\"line\">      <span class=\"string\">&#x27;rgb(54, 162, 235)&#x27;</span>,</span><br><span class=\"line\">      <span class=\"string\">&#x27;rgb(255, 205, 86)&#x27;</span></span><br><span class=\"line\">    ],</span><br><span class=\"line\">    <span class=\"attr\">hoverOffset</span>: <span class=\"number\">4</span></span><br><span class=\"line\">  &#125;]</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">const</span> myChart = <span class=\"keyword\">new</span> <span class=\"title class_\">Chart</span>(ctx, &#123;</span><br><span class=\"line\">    <span class=\"attr\">type</span>: <span class=\"string\">&#x27;pie&#x27;</span>, <span class=\"comment\">// 圖表種類</span></span><br><span class=\"line\">    data,</span><br><span class=\"line\">    <span class=\"attr\">options</span>: &#123;</span><br><span class=\"line\">      <span class=\"attr\">plugins</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">legend</span>: &#123;</span><br><span class=\"line\">          <span class=\"comment\">// legend 為圖例的設定</span></span><br><span class=\"line\">          <span class=\"attr\">position</span>: <span class=\"string\">&#x27;bottom&#x27;</span>,</span><br><span class=\"line\">          <span class=\"attr\">labels</span>: &#123;</span><br><span class=\"line\">            <span class=\"attr\">color</span>: <span class=\"string\">&#x27;#F8EBCF&#x27;</span>,</span><br><span class=\"line\">            <span class=\"attr\">padding</span>: <span class=\"number\">20</span>,</span><br><span class=\"line\">            <span class=\"attr\">boxHeight</span>: <span class=\"number\">24</span>,</span><br><span class=\"line\">            <span class=\"attr\">font</span>: &#123;</span><br><span class=\"line\">              <span class=\"attr\">size</span>: <span class=\"number\">16</span>,</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">          <span class=\"attr\">maxWidth</span>: <span class=\"number\">400</span>,</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>更新圖表</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">myChart.<span class=\"property\">data</span>.<span class=\"property\">datasets</span>[<span class=\"number\">0</span>].<span class=\"property\">data</span>[<span class=\"number\">2</span>] = <span class=\"number\">50</span>; <span class=\"comment\">// 先修改資料</span></span><br><span class=\"line\">myChart.<span class=\"title function_\">update</span>(); <span class=\"comment\">// 再調用更新</span></span><br></pre></td></tr></table></figure>\n\n<p>調整畫布尺寸</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">myChart.<span class=\"title function_\">resize</span>(); <span class=\"comment\">// 根據父元素尺寸</span></span><br><span class=\"line\">myChart.<span class=\"title function_\">resize</span>(width, height); <span class=\"comment\">// 自訂尺寸</span></span><br></pre></td></tr></table></figure>\n\n<p>銷毀圖表</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">myChart.<span class=\"title function_\">destroy</span>();</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<p><img src=\"/2022/02/05/3/cover.jpg\"></p>\n<p>Chart.js是一款輕巧但又包含了豐富內容的圖表套件，它可以幫助我們快速的製作出各種美觀的圖表，種類包含了折線圖(Line Chart)、圓餅圖(Pie Chart)、甜甜圈圖(Doughnut Chart)、雷達圖(Radar Chart)等多種圖形，並且每種圖形都提供了高度的客製化功能，滿足各種不同需求，在這裡介紹快速上手的方法，若想知道更多關於Chart.js可以做到的事情可以看看他們的<a href=\"https://www.chartjs.org/docs/latest/\">官方文件</a></p>","more":"<h2 id=\"安裝\"><a href=\"#安裝\" class=\"headerlink\" title=\"安裝\"></a>安裝</h2><h3 id=\"npm\"><a href=\"#npm\" class=\"headerlink\" title=\"npm\"></a>npm</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install chart.<span class=\"property\">js</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"CDN\"><a href=\"#CDN\" class=\"headerlink\" title=\"CDN\"></a>CDN</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;https://cdnjs.com/libraries/Chart.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"引入方式\"><a href=\"#引入方式\" class=\"headerlink\" title=\"引入方式\"></a>引入方式</h2><h3 id=\"Script標籤\"><a href=\"#Script標籤\" class=\"headerlink\" title=\"Script標籤\"></a>Script標籤</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;path/to/chartjs/dist/chart.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">const</span> myChart = <span class=\"keyword\">new</span> <span class=\"title class_\">Chart</span>(ctx, &#123;...&#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Webpack\"><a href=\"#Webpack\" class=\"headerlink\" title=\"Webpack\"></a>Webpack</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; <span class=\"title class_\">Chart</span>, registerables &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;chart.js&#x27;</span>;</span><br><span class=\"line\"><span class=\"title class_\">Chart</span>.<span class=\"title function_\">register</span>(...registerables);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> myChart = <span class=\"keyword\">new</span> <span class=\"title class_\">Chart</span>(ctx, &#123;...&#125;);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h2><p> 先在html中建立畫布</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">canvas</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;myChart&quot;</span> <span class=\"attr\">width</span>=<span class=\"string\">&quot;400&quot;</span> <span class=\"attr\">height</span>=<span class=\"string\">&quot;400&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">canvas</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>取得畫布元素</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> ctx = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;myChart&#x27;</span>);</span><br></pre></td></tr></table></figure>\n\n<p>建立圖表</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> data = &#123;</span><br><span class=\"line\">  <span class=\"attr\">labels</span>: [</span><br><span class=\"line\">    <span class=\"string\">&#x27;Red&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;Blue&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;Yellow&#x27;</span></span><br><span class=\"line\">  ], <span class=\"comment\">// labels 為圖例的內容</span></span><br><span class=\"line\">  <span class=\"attr\">datasets</span>: [&#123;</span><br><span class=\"line\">    <span class=\"attr\">label</span>: <span class=\"string\">&#x27;My First Dataset&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">data</span>: [<span class=\"number\">300</span>, <span class=\"number\">50</span>, <span class=\"number\">100</span>],</span><br><span class=\"line\">    <span class=\"attr\">backgroundColor</span>: [</span><br><span class=\"line\">      <span class=\"string\">&#x27;rgb(255, 99, 132)&#x27;</span>,</span><br><span class=\"line\">      <span class=\"string\">&#x27;rgb(54, 162, 235)&#x27;</span>,</span><br><span class=\"line\">      <span class=\"string\">&#x27;rgb(255, 205, 86)&#x27;</span></span><br><span class=\"line\">    ],</span><br><span class=\"line\">    <span class=\"attr\">hoverOffset</span>: <span class=\"number\">4</span></span><br><span class=\"line\">  &#125;]</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">const</span> myChart = <span class=\"keyword\">new</span> <span class=\"title class_\">Chart</span>(ctx, &#123;</span><br><span class=\"line\">    <span class=\"attr\">type</span>: <span class=\"string\">&#x27;pie&#x27;</span>, <span class=\"comment\">// 圖表種類</span></span><br><span class=\"line\">    data,</span><br><span class=\"line\">    <span class=\"attr\">options</span>: &#123;</span><br><span class=\"line\">      <span class=\"attr\">plugins</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">legend</span>: &#123;</span><br><span class=\"line\">          <span class=\"comment\">// legend 為圖例的設定</span></span><br><span class=\"line\">          <span class=\"attr\">position</span>: <span class=\"string\">&#x27;bottom&#x27;</span>,</span><br><span class=\"line\">          <span class=\"attr\">labels</span>: &#123;</span><br><span class=\"line\">            <span class=\"attr\">color</span>: <span class=\"string\">&#x27;#F8EBCF&#x27;</span>,</span><br><span class=\"line\">            <span class=\"attr\">padding</span>: <span class=\"number\">20</span>,</span><br><span class=\"line\">            <span class=\"attr\">boxHeight</span>: <span class=\"number\">24</span>,</span><br><span class=\"line\">            <span class=\"attr\">font</span>: &#123;</span><br><span class=\"line\">              <span class=\"attr\">size</span>: <span class=\"number\">16</span>,</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">          <span class=\"attr\">maxWidth</span>: <span class=\"number\">400</span>,</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>更新圖表</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">myChart.<span class=\"property\">data</span>.<span class=\"property\">datasets</span>[<span class=\"number\">0</span>].<span class=\"property\">data</span>[<span class=\"number\">2</span>] = <span class=\"number\">50</span>; <span class=\"comment\">// 先修改資料</span></span><br><span class=\"line\">myChart.<span class=\"title function_\">update</span>(); <span class=\"comment\">// 再調用更新</span></span><br></pre></td></tr></table></figure>\n\n<p>調整畫布尺寸</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">myChart.<span class=\"title function_\">resize</span>(); <span class=\"comment\">// 根據父元素尺寸</span></span><br><span class=\"line\">myChart.<span class=\"title function_\">resize</span>(width, height); <span class=\"comment\">// 自訂尺寸</span></span><br></pre></td></tr></table></figure>\n\n<p>銷毀圖表</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">myChart.<span class=\"title function_\">destroy</span>();</span><br></pre></td></tr></table></figure>"},{"title":"使用Three.js載入外部模型及貼圖","date":"2022-02-05T15:57:10.000Z","_content":"\n![](cover.jpg)\n\nThree.js有很多種載入模型的方式，在本文中使用的是筆者常用的載入方式，若有更好的方式歡迎留言建議。\n在Three.js官方文件中有提到，建議使用.gltf格式的3D模型來進行外部模型的載入，可以得到更好的支援性及速度，所以若要載入的模型並非.gltf格式的檔案建議可以使用Blender來進行模型的製作以及模型的轉換(使用3D軟體轉換比較能夠確保轉出的結果接近自己想要的樣子，本文介紹主要以Blender為主，其他支援的3D軟體可以參考[官方文件](https://threejs.org/docs/index.html#manual/zh/introduction/Loading-3D-models))，再由Three.js的載入器將模型載入。\n\n<!-- more -->\n\n## Blender輸出成.gltf檔\n\n### 點選要輸出的模型\n\n![](blender-1.jpg)\n\n### 上方菜單中找到檔案->匯出->glTF2.0\n\n![](blender-2.jpg)\n\n### 在彈出的視窗右側的選單中將格式修改為[glTF Embedded (.gltf)]，並且勾選[所選的物體]選項\n\n![](blender-3.jpg)\n\n### 選取存檔位置後匯出 glTF2.0\n\n![](blender-4.jpg)\n\n## 使用Three.js載入glTF模型檔\n\n### 載入GLTFLoader\n\n``` javascript\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js';\n```\n\n### 使用GLTFLoader載入模型\n\n``` javascript\nconst loader = new GLTFLoader();\n\n// 壓縮模型的插件\nconst dracoLoader = new DRACOLoader();\ndracoLoader.setDecoderPath( '/examples/js/libs/draco/' ); // 路徑需指向此插件位置\nloader.setDRACOLoader( dracoLoader );\n\nloader.load(\n\t// 模型位置\n\t'models/gltf/test/test.gltf',\n\t// 模型非同步載入後的回調函式\n\t( gltf ) => {\n\t\tscene.add( gltf.scene ); // 將載入的模型加入場景\n\t},\n\t// 載入過程，可以用來製作進度條\n\t(xhr) => {\n\t\tconsole.log( ( xhr.loaded / xhr.total * 100 ) + '% loaded' );\n\t},\n\t// 錯誤時\n\t(error) => {\n\t\tconsole.log( 'An error happened' );\n\t}\n);\n```\n\n模型載入後，相關的模型資料都會在參數gltf內，比較需要注意的是模型是非同步載入，所以必須要留意一下render的時機。\n","source":"_posts/2022-02-05-4.md","raw":"---\ntitle: 使用Three.js載入外部模型及貼圖\ndate: 2022-02-05 23:57:10\ntags:\n- Three.js\n- plugin\n- 3d\n- JavaScript\n- Blender\n---\n\n![](cover.jpg)\n\nThree.js有很多種載入模型的方式，在本文中使用的是筆者常用的載入方式，若有更好的方式歡迎留言建議。\n在Three.js官方文件中有提到，建議使用.gltf格式的3D模型來進行外部模型的載入，可以得到更好的支援性及速度，所以若要載入的模型並非.gltf格式的檔案建議可以使用Blender來進行模型的製作以及模型的轉換(使用3D軟體轉換比較能夠確保轉出的結果接近自己想要的樣子，本文介紹主要以Blender為主，其他支援的3D軟體可以參考[官方文件](https://threejs.org/docs/index.html#manual/zh/introduction/Loading-3D-models))，再由Three.js的載入器將模型載入。\n\n<!-- more -->\n\n## Blender輸出成.gltf檔\n\n### 點選要輸出的模型\n\n![](blender-1.jpg)\n\n### 上方菜單中找到檔案->匯出->glTF2.0\n\n![](blender-2.jpg)\n\n### 在彈出的視窗右側的選單中將格式修改為[glTF Embedded (.gltf)]，並且勾選[所選的物體]選項\n\n![](blender-3.jpg)\n\n### 選取存檔位置後匯出 glTF2.0\n\n![](blender-4.jpg)\n\n## 使用Three.js載入glTF模型檔\n\n### 載入GLTFLoader\n\n``` javascript\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js';\n```\n\n### 使用GLTFLoader載入模型\n\n``` javascript\nconst loader = new GLTFLoader();\n\n// 壓縮模型的插件\nconst dracoLoader = new DRACOLoader();\ndracoLoader.setDecoderPath( '/examples/js/libs/draco/' ); // 路徑需指向此插件位置\nloader.setDRACOLoader( dracoLoader );\n\nloader.load(\n\t// 模型位置\n\t'models/gltf/test/test.gltf',\n\t// 模型非同步載入後的回調函式\n\t( gltf ) => {\n\t\tscene.add( gltf.scene ); // 將載入的模型加入場景\n\t},\n\t// 載入過程，可以用來製作進度條\n\t(xhr) => {\n\t\tconsole.log( ( xhr.loaded / xhr.total * 100 ) + '% loaded' );\n\t},\n\t// 錯誤時\n\t(error) => {\n\t\tconsole.log( 'An error happened' );\n\t}\n);\n```\n\n模型載入後，相關的模型資料都會在參數gltf內，比較需要注意的是模型是非同步載入，所以必須要留意一下render的時機。\n","slug":"4","published":1,"updated":"2023-07-07T16:18:37.148Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clok3v80p00041wva3dm58f0x","content":"<p><img src=\"/2022/02/05/4/cover.jpg\"></p>\n<p>Three.js有很多種載入模型的方式，在本文中使用的是筆者常用的載入方式，若有更好的方式歡迎留言建議。<br>在Three.js官方文件中有提到，建議使用.gltf格式的3D模型來進行外部模型的載入，可以得到更好的支援性及速度，所以若要載入的模型並非.gltf格式的檔案建議可以使用Blender來進行模型的製作以及模型的轉換(使用3D軟體轉換比較能夠確保轉出的結果接近自己想要的樣子，本文介紹主要以Blender為主，其他支援的3D軟體可以參考<a href=\"https://threejs.org/docs/index.html#manual/zh/introduction/Loading-3D-models\">官方文件</a>)，再由Three.js的載入器將模型載入。</p>\n<span id=\"more\"></span>\n\n<h2 id=\"Blender輸出成-gltf檔\"><a href=\"#Blender輸出成-gltf檔\" class=\"headerlink\" title=\"Blender輸出成.gltf檔\"></a>Blender輸出成.gltf檔</h2><h3 id=\"點選要輸出的模型\"><a href=\"#點選要輸出的模型\" class=\"headerlink\" title=\"點選要輸出的模型\"></a>點選要輸出的模型</h3><p><img src=\"/2022/02/05/4/blender-1.jpg\"></p>\n<h3 id=\"上方菜單中找到檔案-gt-匯出-gt-glTF2-0\"><a href=\"#上方菜單中找到檔案-gt-匯出-gt-glTF2-0\" class=\"headerlink\" title=\"上方菜單中找到檔案-&gt;匯出-&gt;glTF2.0\"></a>上方菜單中找到檔案-&gt;匯出-&gt;glTF2.0</h3><p><img src=\"/2022/02/05/4/blender-2.jpg\"></p>\n<h3 id=\"在彈出的視窗右側的選單中將格式修改為-glTF-Embedded-gltf-，並且勾選-所選的物體-選項\"><a href=\"#在彈出的視窗右側的選單中將格式修改為-glTF-Embedded-gltf-，並且勾選-所選的物體-選項\" class=\"headerlink\" title=\"在彈出的視窗右側的選單中將格式修改為[glTF Embedded (.gltf)]，並且勾選[所選的物體]選項\"></a>在彈出的視窗右側的選單中將格式修改為[glTF Embedded (.gltf)]，並且勾選[所選的物體]選項</h3><p><img src=\"/2022/02/05/4/blender-3.jpg\"></p>\n<h3 id=\"選取存檔位置後匯出-glTF2-0\"><a href=\"#選取存檔位置後匯出-glTF2-0\" class=\"headerlink\" title=\"選取存檔位置後匯出 glTF2.0\"></a>選取存檔位置後匯出 glTF2.0</h3><p><img src=\"/2022/02/05/4/blender-4.jpg\"></p>\n<h2 id=\"使用Three-js載入glTF模型檔\"><a href=\"#使用Three-js載入glTF模型檔\" class=\"headerlink\" title=\"使用Three.js載入glTF模型檔\"></a>使用Three.js載入glTF模型檔</h2><h3 id=\"載入GLTFLoader\"><a href=\"#載入GLTFLoader\" class=\"headerlink\" title=\"載入GLTFLoader\"></a>載入GLTFLoader</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; <span class=\"title class_\">GLTFLoader</span> &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;three/examples/jsm/loaders/GLTFLoader.js&#x27;</span>;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"使用GLTFLoader載入模型\"><a href=\"#使用GLTFLoader載入模型\" class=\"headerlink\" title=\"使用GLTFLoader載入模型\"></a>使用GLTFLoader載入模型</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> loader = <span class=\"keyword\">new</span> <span class=\"title class_\">GLTFLoader</span>();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 壓縮模型的插件</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> dracoLoader = <span class=\"keyword\">new</span> <span class=\"title class_\">DRACOLoader</span>();</span><br><span class=\"line\">dracoLoader.<span class=\"title function_\">setDecoderPath</span>( <span class=\"string\">&#x27;/examples/js/libs/draco/&#x27;</span> ); <span class=\"comment\">// 路徑需指向此插件位置</span></span><br><span class=\"line\">loader.<span class=\"title function_\">setDRACOLoader</span>( dracoLoader );</span><br><span class=\"line\"></span><br><span class=\"line\">loader.<span class=\"title function_\">load</span>(</span><br><span class=\"line\">\t<span class=\"comment\">// 模型位置</span></span><br><span class=\"line\">\t<span class=\"string\">&#x27;models/gltf/test/test.gltf&#x27;</span>,</span><br><span class=\"line\">\t<span class=\"comment\">// 模型非同步載入後的回調函式</span></span><br><span class=\"line\">\t<span class=\"function\">(<span class=\"params\"> gltf </span>) =&gt;</span> &#123;</span><br><span class=\"line\">\t\tscene.<span class=\"title function_\">add</span>( gltf.<span class=\"property\">scene</span> ); <span class=\"comment\">// 將載入的模型加入場景</span></span><br><span class=\"line\">\t&#125;,</span><br><span class=\"line\">\t<span class=\"comment\">// 載入過程，可以用來製作進度條</span></span><br><span class=\"line\">\t<span class=\"function\">(<span class=\"params\">xhr</span>) =&gt;</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>( ( xhr.<span class=\"property\">loaded</span> / xhr.<span class=\"property\">total</span> * <span class=\"number\">100</span> ) + <span class=\"string\">&#x27;% loaded&#x27;</span> );</span><br><span class=\"line\">\t&#125;,</span><br><span class=\"line\">\t<span class=\"comment\">// 錯誤時</span></span><br><span class=\"line\">\t<span class=\"function\">(<span class=\"params\">error</span>) =&gt;</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>( <span class=\"string\">&#x27;An error happened&#x27;</span> );</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure>\n\n<p>模型載入後，相關的模型資料都會在參數gltf內，比較需要注意的是模型是非同步載入，所以必須要留意一下render的時機。</p>\n","site":{"data":{}},"excerpt":"<p><img src=\"/2022/02/05/4/cover.jpg\"></p>\n<p>Three.js有很多種載入模型的方式，在本文中使用的是筆者常用的載入方式，若有更好的方式歡迎留言建議。<br>在Three.js官方文件中有提到，建議使用.gltf格式的3D模型來進行外部模型的載入，可以得到更好的支援性及速度，所以若要載入的模型並非.gltf格式的檔案建議可以使用Blender來進行模型的製作以及模型的轉換(使用3D軟體轉換比較能夠確保轉出的結果接近自己想要的樣子，本文介紹主要以Blender為主，其他支援的3D軟體可以參考<a href=\"https://threejs.org/docs/index.html#manual/zh/introduction/Loading-3D-models\">官方文件</a>)，再由Three.js的載入器將模型載入。</p>","more":"<h2 id=\"Blender輸出成-gltf檔\"><a href=\"#Blender輸出成-gltf檔\" class=\"headerlink\" title=\"Blender輸出成.gltf檔\"></a>Blender輸出成.gltf檔</h2><h3 id=\"點選要輸出的模型\"><a href=\"#點選要輸出的模型\" class=\"headerlink\" title=\"點選要輸出的模型\"></a>點選要輸出的模型</h3><p><img src=\"/2022/02/05/4/blender-1.jpg\"></p>\n<h3 id=\"上方菜單中找到檔案-gt-匯出-gt-glTF2-0\"><a href=\"#上方菜單中找到檔案-gt-匯出-gt-glTF2-0\" class=\"headerlink\" title=\"上方菜單中找到檔案-&gt;匯出-&gt;glTF2.0\"></a>上方菜單中找到檔案-&gt;匯出-&gt;glTF2.0</h3><p><img src=\"/2022/02/05/4/blender-2.jpg\"></p>\n<h3 id=\"在彈出的視窗右側的選單中將格式修改為-glTF-Embedded-gltf-，並且勾選-所選的物體-選項\"><a href=\"#在彈出的視窗右側的選單中將格式修改為-glTF-Embedded-gltf-，並且勾選-所選的物體-選項\" class=\"headerlink\" title=\"在彈出的視窗右側的選單中將格式修改為[glTF Embedded (.gltf)]，並且勾選[所選的物體]選項\"></a>在彈出的視窗右側的選單中將格式修改為[glTF Embedded (.gltf)]，並且勾選[所選的物體]選項</h3><p><img src=\"/2022/02/05/4/blender-3.jpg\"></p>\n<h3 id=\"選取存檔位置後匯出-glTF2-0\"><a href=\"#選取存檔位置後匯出-glTF2-0\" class=\"headerlink\" title=\"選取存檔位置後匯出 glTF2.0\"></a>選取存檔位置後匯出 glTF2.0</h3><p><img src=\"/2022/02/05/4/blender-4.jpg\"></p>\n<h2 id=\"使用Three-js載入glTF模型檔\"><a href=\"#使用Three-js載入glTF模型檔\" class=\"headerlink\" title=\"使用Three.js載入glTF模型檔\"></a>使用Three.js載入glTF模型檔</h2><h3 id=\"載入GLTFLoader\"><a href=\"#載入GLTFLoader\" class=\"headerlink\" title=\"載入GLTFLoader\"></a>載入GLTFLoader</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; <span class=\"title class_\">GLTFLoader</span> &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;three/examples/jsm/loaders/GLTFLoader.js&#x27;</span>;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"使用GLTFLoader載入模型\"><a href=\"#使用GLTFLoader載入模型\" class=\"headerlink\" title=\"使用GLTFLoader載入模型\"></a>使用GLTFLoader載入模型</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> loader = <span class=\"keyword\">new</span> <span class=\"title class_\">GLTFLoader</span>();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 壓縮模型的插件</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> dracoLoader = <span class=\"keyword\">new</span> <span class=\"title class_\">DRACOLoader</span>();</span><br><span class=\"line\">dracoLoader.<span class=\"title function_\">setDecoderPath</span>( <span class=\"string\">&#x27;/examples/js/libs/draco/&#x27;</span> ); <span class=\"comment\">// 路徑需指向此插件位置</span></span><br><span class=\"line\">loader.<span class=\"title function_\">setDRACOLoader</span>( dracoLoader );</span><br><span class=\"line\"></span><br><span class=\"line\">loader.<span class=\"title function_\">load</span>(</span><br><span class=\"line\">\t<span class=\"comment\">// 模型位置</span></span><br><span class=\"line\">\t<span class=\"string\">&#x27;models/gltf/test/test.gltf&#x27;</span>,</span><br><span class=\"line\">\t<span class=\"comment\">// 模型非同步載入後的回調函式</span></span><br><span class=\"line\">\t<span class=\"function\">(<span class=\"params\"> gltf </span>) =&gt;</span> &#123;</span><br><span class=\"line\">\t\tscene.<span class=\"title function_\">add</span>( gltf.<span class=\"property\">scene</span> ); <span class=\"comment\">// 將載入的模型加入場景</span></span><br><span class=\"line\">\t&#125;,</span><br><span class=\"line\">\t<span class=\"comment\">// 載入過程，可以用來製作進度條</span></span><br><span class=\"line\">\t<span class=\"function\">(<span class=\"params\">xhr</span>) =&gt;</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>( ( xhr.<span class=\"property\">loaded</span> / xhr.<span class=\"property\">total</span> * <span class=\"number\">100</span> ) + <span class=\"string\">&#x27;% loaded&#x27;</span> );</span><br><span class=\"line\">\t&#125;,</span><br><span class=\"line\">\t<span class=\"comment\">// 錯誤時</span></span><br><span class=\"line\">\t<span class=\"function\">(<span class=\"params\">error</span>) =&gt;</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>( <span class=\"string\">&#x27;An error happened&#x27;</span> );</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure>\n\n<p>模型載入後，相關的模型資料都會在參數gltf內，比較需要注意的是模型是非同步載入，所以必須要留意一下render的時機。</p>"},{"title":"前端常用scss整理","date":"2022-02-05T16:13:18.000Z","_content":"\n## 索引\n* [RWD](#rwd)\n* [置中](#center)\n* [淡入淡出](#fade)\n* [樣式變數](#style-var)\n\n<!-- more -->\n\n## mixin\n\n<a name=\"rwd\">RWD</a>\n\n``` scss\n@mixin desktop {\n  @media(max-width: 1440px) {\n    @content\n  }\n}\n\n@mixin tablet {\n  @media(max-width: 768px) {\n    @content\n  }\n}\n\n@mixin phone {\n  @media(max-width: 540px) {\n    @content\n  }\n}\n\n// 自訂寬度\n@mixin custom($width) {\n  @media(max-width: $width + 'px') {\n    @content\n  }\n}\n\n// 填入數字即可產生相應寬度的@media\n// 正數為max-width、負數為min-width\n// $w: int\n@mixin media($w) {\n    @if ($w < 0) {\n        @media (min-width: (-$w + px))  {\n            @content;\n        }\n    } @else {\n        @media (max-width: ($w + px))  {\n            @content;\n        }\n    }\n}\n```\n\n\n<a name=\"center\">置中</a>\n\n``` scss\n// $type(option): flex, transform, margin\n// $axis(option): x, y, all\n@mixin center($type: flex, $axis: all) {\n    @if ($type == flex) {\n        display: flex;\n        @if ($axis == x or $axis == all) {\n            justify-content: center;\n        }\n        @if ($axis == y or $axis == all) {\n            align-items: center;\n        }\n    }\n    @if ($type == transform) {\n        position: absolute;\n        @if ($axis == x) {\n            right: auto;\n            left: 50%;\n            transform: translateX(-50%);\n            @content;\n        }\n        @if ($axis == y) {\n            bottom: auto;\n            top: 50%;\n            transform: translateY(-50%);\n            @content;\n        }\n        @if ($axis == all) {\n            top: 50%;\n            bottom: auto;\n            left: 50%;\n            right: auto;\n            transform: translate(-50%, -50%);\n            @content;\n        }\n    }\n    @if ($type == margin) {\n        margin: 0 auto;\n    }\n}\n```\n\n<a name=\"fade\">淡入淡出</a>\n\n``` scss\n// $switch(option): in, out\n// $axis(option): x, y\n// $offset(option) int\n// $name(option) custom name\n@mixin fade($switch: out, $axis: x, $offset: 10, $name: fade) {\n    @keyframes #{$name} {\n        from {\n            @if ($switch == out) {\n                opacity: 1;\n            } @else {\n                opacity: 0;\n            }\n            @if ($axis == x) {\n                transform: translateX(0);\n            } @else {\n                transform: translateX($offset);\n            }\n        }\n        to {\n            @if ($switch == out) {\n                opacity: 0;\n            } @else {\n                opacity: 1;\n            }\n            @if ($axis == x) {\n                transform: translateX($offset);\n            } @else {\n                transform: translateX(0);\n            }\n        }\n    }\n}\n```\n\n## 變數\n\n<a name=\"style-var\">樣式變數</a>\n\n``` scss\n// 顏色\n$primary:  #449966 !default;\n$secondary:  #F8EBCF !default;\n$tertiary:  #F0E0B9 !default;\n// 過渡\n$transition-1:  all .2s ease-out;\n```\n","source":"_posts/2022-02-06-1.md","raw":"---\ntitle: 前端常用scss整理\ndate: 2022-02-06 00:13:18\ntags: \n- scss\n---\n\n## 索引\n* [RWD](#rwd)\n* [置中](#center)\n* [淡入淡出](#fade)\n* [樣式變數](#style-var)\n\n<!-- more -->\n\n## mixin\n\n<a name=\"rwd\">RWD</a>\n\n``` scss\n@mixin desktop {\n  @media(max-width: 1440px) {\n    @content\n  }\n}\n\n@mixin tablet {\n  @media(max-width: 768px) {\n    @content\n  }\n}\n\n@mixin phone {\n  @media(max-width: 540px) {\n    @content\n  }\n}\n\n// 自訂寬度\n@mixin custom($width) {\n  @media(max-width: $width + 'px') {\n    @content\n  }\n}\n\n// 填入數字即可產生相應寬度的@media\n// 正數為max-width、負數為min-width\n// $w: int\n@mixin media($w) {\n    @if ($w < 0) {\n        @media (min-width: (-$w + px))  {\n            @content;\n        }\n    } @else {\n        @media (max-width: ($w + px))  {\n            @content;\n        }\n    }\n}\n```\n\n\n<a name=\"center\">置中</a>\n\n``` scss\n// $type(option): flex, transform, margin\n// $axis(option): x, y, all\n@mixin center($type: flex, $axis: all) {\n    @if ($type == flex) {\n        display: flex;\n        @if ($axis == x or $axis == all) {\n            justify-content: center;\n        }\n        @if ($axis == y or $axis == all) {\n            align-items: center;\n        }\n    }\n    @if ($type == transform) {\n        position: absolute;\n        @if ($axis == x) {\n            right: auto;\n            left: 50%;\n            transform: translateX(-50%);\n            @content;\n        }\n        @if ($axis == y) {\n            bottom: auto;\n            top: 50%;\n            transform: translateY(-50%);\n            @content;\n        }\n        @if ($axis == all) {\n            top: 50%;\n            bottom: auto;\n            left: 50%;\n            right: auto;\n            transform: translate(-50%, -50%);\n            @content;\n        }\n    }\n    @if ($type == margin) {\n        margin: 0 auto;\n    }\n}\n```\n\n<a name=\"fade\">淡入淡出</a>\n\n``` scss\n// $switch(option): in, out\n// $axis(option): x, y\n// $offset(option) int\n// $name(option) custom name\n@mixin fade($switch: out, $axis: x, $offset: 10, $name: fade) {\n    @keyframes #{$name} {\n        from {\n            @if ($switch == out) {\n                opacity: 1;\n            } @else {\n                opacity: 0;\n            }\n            @if ($axis == x) {\n                transform: translateX(0);\n            } @else {\n                transform: translateX($offset);\n            }\n        }\n        to {\n            @if ($switch == out) {\n                opacity: 0;\n            } @else {\n                opacity: 1;\n            }\n            @if ($axis == x) {\n                transform: translateX($offset);\n            } @else {\n                transform: translateX(0);\n            }\n        }\n    }\n}\n```\n\n## 變數\n\n<a name=\"style-var\">樣式變數</a>\n\n``` scss\n// 顏色\n$primary:  #449966 !default;\n$secondary:  #F8EBCF !default;\n$tertiary:  #F0E0B9 !default;\n// 過渡\n$transition-1:  all .2s ease-out;\n```\n","slug":"1","published":1,"updated":"2022-02-07T13:30:12.298Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clok3v80q00051wvagn8r5fh2","content":"<h2 id=\"索引\"><a href=\"#索引\" class=\"headerlink\" title=\"索引\"></a>索引</h2><ul>\n<li><a href=\"#rwd\">RWD</a></li>\n<li><a href=\"#center\">置中</a></li>\n<li><a href=\"#fade\">淡入淡出</a></li>\n<li><a href=\"#style-var\">樣式變數</a></li>\n</ul>\n<span id=\"more\"></span>\n\n<h2 id=\"mixin\"><a href=\"#mixin\" class=\"headerlink\" title=\"mixin\"></a>mixin</h2><p><a name=\"rwd\">RWD</a></p>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">@mixin</span> desktop &#123;</span><br><span class=\"line\">  <span class=\"keyword\">@media</span>(<span class=\"attribute\">max-width</span>: <span class=\"number\">1440px</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">@content</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">@mixin</span> tablet &#123;</span><br><span class=\"line\">  <span class=\"keyword\">@media</span>(<span class=\"attribute\">max-width</span>: <span class=\"number\">768px</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">@content</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">@mixin</span> phone &#123;</span><br><span class=\"line\">  <span class=\"keyword\">@media</span>(<span class=\"attribute\">max-width</span>: <span class=\"number\">540px</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">@content</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">// 自訂寬度</span><br><span class=\"line\"><span class=\"keyword\">@mixin</span> custom(<span class=\"variable\">$width</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">@media</span>(<span class=\"attribute\">max-width</span>: <span class=\"variable\">$width</span> + <span class=\"string\">&#x27;px&#x27;</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">@content</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">// 填入數字即可產生相應寬度的<span class=\"keyword\">@media</span></span><br><span class=\"line\">// 正數為<span class=\"attribute\">max-width</span>、負數為<span class=\"attribute\">min-width</span></span><br><span class=\"line\">// <span class=\"variable\">$w</span>: int</span><br><span class=\"line\"><span class=\"keyword\">@mixin</span> media(<span class=\"variable\">$w</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">@if</span> (<span class=\"variable\">$w</span> &lt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">@media</span> (<span class=\"attribute\">min-width</span>: (-<span class=\"variable\">$w</span> + px))  &#123;</span><br><span class=\"line\">            <span class=\"keyword\">@content</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">@else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">@media</span> (<span class=\"attribute\">max-width</span>: (<span class=\"variable\">$w</span> + px))  &#123;</span><br><span class=\"line\">            <span class=\"keyword\">@content</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<p><a name=\"center\">置中</a></p>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// $type(option): flex, transform, margin</span></span><br><span class=\"line\"><span class=\"comment\">// $axis(option): x, y, all</span></span><br><span class=\"line\"><span class=\"keyword\">@mixin</span> center(<span class=\"variable\">$type</span>: flex, <span class=\"variable\">$axis</span>: all) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">@if</span> (<span class=\"variable\">$type</span> == flex) &#123;</span><br><span class=\"line\">        <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">        <span class=\"keyword\">@if</span> (<span class=\"variable\">$axis</span> == x <span class=\"keyword\">or</span> <span class=\"variable\">$axis</span> == all) &#123;</span><br><span class=\"line\">            <span class=\"attribute\">justify-content</span>: center;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">@if</span> (<span class=\"variable\">$axis</span> == y <span class=\"keyword\">or</span> <span class=\"variable\">$axis</span> == all) &#123;</span><br><span class=\"line\">            <span class=\"attribute\">align-items</span>: center;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">@if</span> (<span class=\"variable\">$type</span> == transform) &#123;</span><br><span class=\"line\">        <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">        <span class=\"keyword\">@if</span> (<span class=\"variable\">$axis</span> == x) &#123;</span><br><span class=\"line\">            <span class=\"attribute\">right</span>: auto;</span><br><span class=\"line\">            <span class=\"attribute\">left</span>: <span class=\"number\">50%</span>;</span><br><span class=\"line\">            <span class=\"attribute\">transform</span>: translateX(-<span class=\"number\">50%</span>);</span><br><span class=\"line\">            <span class=\"keyword\">@content</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">@if</span> (<span class=\"variable\">$axis</span> == y) &#123;</span><br><span class=\"line\">            <span class=\"attribute\">bottom</span>: auto;</span><br><span class=\"line\">            <span class=\"attribute\">top</span>: <span class=\"number\">50%</span>;</span><br><span class=\"line\">            <span class=\"attribute\">transform</span>: translateY(-<span class=\"number\">50%</span>);</span><br><span class=\"line\">            <span class=\"keyword\">@content</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">@if</span> (<span class=\"variable\">$axis</span> == all) &#123;</span><br><span class=\"line\">            <span class=\"attribute\">top</span>: <span class=\"number\">50%</span>;</span><br><span class=\"line\">            <span class=\"attribute\">bottom</span>: auto;</span><br><span class=\"line\">            <span class=\"attribute\">left</span>: <span class=\"number\">50%</span>;</span><br><span class=\"line\">            <span class=\"attribute\">right</span>: auto;</span><br><span class=\"line\">            <span class=\"attribute\">transform</span>: translate(-<span class=\"number\">50%</span>, -<span class=\"number\">50%</span>);</span><br><span class=\"line\">            <span class=\"keyword\">@content</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">@if</span> (<span class=\"variable\">$type</span> == margin) &#123;</span><br><span class=\"line\">        <span class=\"attribute\">margin</span>: <span class=\"number\">0</span> auto;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><a name=\"fade\">淡入淡出</a></p>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// $switch(option): in, out</span></span><br><span class=\"line\"><span class=\"comment\">// $axis(option): x, y</span></span><br><span class=\"line\"><span class=\"comment\">// $offset(option) int</span></span><br><span class=\"line\"><span class=\"comment\">// $name(option) custom name</span></span><br><span class=\"line\"><span class=\"keyword\">@mixin</span> fade(<span class=\"variable\">$switch</span>: out, <span class=\"variable\">$axis</span>: x, <span class=\"variable\">$offset</span>: <span class=\"number\">10</span>, <span class=\"variable\">$name</span>: fade) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">@keyframes</span> #&#123;<span class=\"variable\">$name</span>&#125; &#123;</span><br><span class=\"line\">        from &#123;</span><br><span class=\"line\">            <span class=\"keyword\">@if</span> (<span class=\"variable\">$switch</span> == out) &#123;</span><br><span class=\"line\">                <span class=\"attribute\">opacity</span>: <span class=\"number\">1</span>;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">@else</span> &#123;</span><br><span class=\"line\">                <span class=\"attribute\">opacity</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">@if</span> (<span class=\"variable\">$axis</span> == x) &#123;</span><br><span class=\"line\">                <span class=\"attribute\">transform</span>: translateX(<span class=\"number\">0</span>);</span><br><span class=\"line\">            &#125; <span class=\"keyword\">@else</span> &#123;</span><br><span class=\"line\">                <span class=\"attribute\">transform</span>: translateX(<span class=\"variable\">$offset</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        to &#123;</span><br><span class=\"line\">            <span class=\"keyword\">@if</span> (<span class=\"variable\">$switch</span> == out) &#123;</span><br><span class=\"line\">                <span class=\"attribute\">opacity</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">@else</span> &#123;</span><br><span class=\"line\">                <span class=\"attribute\">opacity</span>: <span class=\"number\">1</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">@if</span> (<span class=\"variable\">$axis</span> == x) &#123;</span><br><span class=\"line\">                <span class=\"attribute\">transform</span>: translateX(<span class=\"variable\">$offset</span>);</span><br><span class=\"line\">            &#125; <span class=\"keyword\">@else</span> &#123;</span><br><span class=\"line\">                <span class=\"attribute\">transform</span>: translateX(<span class=\"number\">0</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"變數\"><a href=\"#變數\" class=\"headerlink\" title=\"變數\"></a>變數</h2><p><a name=\"style-var\">樣式變數</a></p>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 顏色</span></span><br><span class=\"line\"><span class=\"variable\">$primary</span>:  <span class=\"number\">#449966</span> !default;</span><br><span class=\"line\"><span class=\"variable\">$secondary</span>:  <span class=\"number\">#F8EBCF</span> !default;</span><br><span class=\"line\"><span class=\"variable\">$tertiary</span>:  <span class=\"number\">#F0E0B9</span> !default;</span><br><span class=\"line\"><span class=\"comment\">// 過渡</span></span><br><span class=\"line\"><span class=\"variable\">$transition-1</span>:  all .<span class=\"number\">2s</span> ease-out;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<h2 id=\"索引\"><a href=\"#索引\" class=\"headerlink\" title=\"索引\"></a>索引</h2><ul>\n<li><a href=\"#rwd\">RWD</a></li>\n<li><a href=\"#center\">置中</a></li>\n<li><a href=\"#fade\">淡入淡出</a></li>\n<li><a href=\"#style-var\">樣式變數</a></li>\n</ul>","more":"<h2 id=\"mixin\"><a href=\"#mixin\" class=\"headerlink\" title=\"mixin\"></a>mixin</h2><p><a name=\"rwd\">RWD</a></p>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">@mixin</span> desktop &#123;</span><br><span class=\"line\">  <span class=\"keyword\">@media</span>(<span class=\"attribute\">max-width</span>: <span class=\"number\">1440px</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">@content</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">@mixin</span> tablet &#123;</span><br><span class=\"line\">  <span class=\"keyword\">@media</span>(<span class=\"attribute\">max-width</span>: <span class=\"number\">768px</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">@content</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">@mixin</span> phone &#123;</span><br><span class=\"line\">  <span class=\"keyword\">@media</span>(<span class=\"attribute\">max-width</span>: <span class=\"number\">540px</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">@content</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">// 自訂寬度</span><br><span class=\"line\"><span class=\"keyword\">@mixin</span> custom(<span class=\"variable\">$width</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">@media</span>(<span class=\"attribute\">max-width</span>: <span class=\"variable\">$width</span> + <span class=\"string\">&#x27;px&#x27;</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">@content</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">// 填入數字即可產生相應寬度的<span class=\"keyword\">@media</span></span><br><span class=\"line\">// 正數為<span class=\"attribute\">max-width</span>、負數為<span class=\"attribute\">min-width</span></span><br><span class=\"line\">// <span class=\"variable\">$w</span>: int</span><br><span class=\"line\"><span class=\"keyword\">@mixin</span> media(<span class=\"variable\">$w</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">@if</span> (<span class=\"variable\">$w</span> &lt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">@media</span> (<span class=\"attribute\">min-width</span>: (-<span class=\"variable\">$w</span> + px))  &#123;</span><br><span class=\"line\">            <span class=\"keyword\">@content</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">@else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">@media</span> (<span class=\"attribute\">max-width</span>: (<span class=\"variable\">$w</span> + px))  &#123;</span><br><span class=\"line\">            <span class=\"keyword\">@content</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<p><a name=\"center\">置中</a></p>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// $type(option): flex, transform, margin</span></span><br><span class=\"line\"><span class=\"comment\">// $axis(option): x, y, all</span></span><br><span class=\"line\"><span class=\"keyword\">@mixin</span> center(<span class=\"variable\">$type</span>: flex, <span class=\"variable\">$axis</span>: all) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">@if</span> (<span class=\"variable\">$type</span> == flex) &#123;</span><br><span class=\"line\">        <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">        <span class=\"keyword\">@if</span> (<span class=\"variable\">$axis</span> == x <span class=\"keyword\">or</span> <span class=\"variable\">$axis</span> == all) &#123;</span><br><span class=\"line\">            <span class=\"attribute\">justify-content</span>: center;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">@if</span> (<span class=\"variable\">$axis</span> == y <span class=\"keyword\">or</span> <span class=\"variable\">$axis</span> == all) &#123;</span><br><span class=\"line\">            <span class=\"attribute\">align-items</span>: center;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">@if</span> (<span class=\"variable\">$type</span> == transform) &#123;</span><br><span class=\"line\">        <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">        <span class=\"keyword\">@if</span> (<span class=\"variable\">$axis</span> == x) &#123;</span><br><span class=\"line\">            <span class=\"attribute\">right</span>: auto;</span><br><span class=\"line\">            <span class=\"attribute\">left</span>: <span class=\"number\">50%</span>;</span><br><span class=\"line\">            <span class=\"attribute\">transform</span>: translateX(-<span class=\"number\">50%</span>);</span><br><span class=\"line\">            <span class=\"keyword\">@content</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">@if</span> (<span class=\"variable\">$axis</span> == y) &#123;</span><br><span class=\"line\">            <span class=\"attribute\">bottom</span>: auto;</span><br><span class=\"line\">            <span class=\"attribute\">top</span>: <span class=\"number\">50%</span>;</span><br><span class=\"line\">            <span class=\"attribute\">transform</span>: translateY(-<span class=\"number\">50%</span>);</span><br><span class=\"line\">            <span class=\"keyword\">@content</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">@if</span> (<span class=\"variable\">$axis</span> == all) &#123;</span><br><span class=\"line\">            <span class=\"attribute\">top</span>: <span class=\"number\">50%</span>;</span><br><span class=\"line\">            <span class=\"attribute\">bottom</span>: auto;</span><br><span class=\"line\">            <span class=\"attribute\">left</span>: <span class=\"number\">50%</span>;</span><br><span class=\"line\">            <span class=\"attribute\">right</span>: auto;</span><br><span class=\"line\">            <span class=\"attribute\">transform</span>: translate(-<span class=\"number\">50%</span>, -<span class=\"number\">50%</span>);</span><br><span class=\"line\">            <span class=\"keyword\">@content</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">@if</span> (<span class=\"variable\">$type</span> == margin) &#123;</span><br><span class=\"line\">        <span class=\"attribute\">margin</span>: <span class=\"number\">0</span> auto;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><a name=\"fade\">淡入淡出</a></p>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// $switch(option): in, out</span></span><br><span class=\"line\"><span class=\"comment\">// $axis(option): x, y</span></span><br><span class=\"line\"><span class=\"comment\">// $offset(option) int</span></span><br><span class=\"line\"><span class=\"comment\">// $name(option) custom name</span></span><br><span class=\"line\"><span class=\"keyword\">@mixin</span> fade(<span class=\"variable\">$switch</span>: out, <span class=\"variable\">$axis</span>: x, <span class=\"variable\">$offset</span>: <span class=\"number\">10</span>, <span class=\"variable\">$name</span>: fade) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">@keyframes</span> #&#123;<span class=\"variable\">$name</span>&#125; &#123;</span><br><span class=\"line\">        from &#123;</span><br><span class=\"line\">            <span class=\"keyword\">@if</span> (<span class=\"variable\">$switch</span> == out) &#123;</span><br><span class=\"line\">                <span class=\"attribute\">opacity</span>: <span class=\"number\">1</span>;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">@else</span> &#123;</span><br><span class=\"line\">                <span class=\"attribute\">opacity</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">@if</span> (<span class=\"variable\">$axis</span> == x) &#123;</span><br><span class=\"line\">                <span class=\"attribute\">transform</span>: translateX(<span class=\"number\">0</span>);</span><br><span class=\"line\">            &#125; <span class=\"keyword\">@else</span> &#123;</span><br><span class=\"line\">                <span class=\"attribute\">transform</span>: translateX(<span class=\"variable\">$offset</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        to &#123;</span><br><span class=\"line\">            <span class=\"keyword\">@if</span> (<span class=\"variable\">$switch</span> == out) &#123;</span><br><span class=\"line\">                <span class=\"attribute\">opacity</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">@else</span> &#123;</span><br><span class=\"line\">                <span class=\"attribute\">opacity</span>: <span class=\"number\">1</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">@if</span> (<span class=\"variable\">$axis</span> == x) &#123;</span><br><span class=\"line\">                <span class=\"attribute\">transform</span>: translateX(<span class=\"variable\">$offset</span>);</span><br><span class=\"line\">            &#125; <span class=\"keyword\">@else</span> &#123;</span><br><span class=\"line\">                <span class=\"attribute\">transform</span>: translateX(<span class=\"number\">0</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"變數\"><a href=\"#變數\" class=\"headerlink\" title=\"變數\"></a>變數</h2><p><a name=\"style-var\">樣式變數</a></p>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 顏色</span></span><br><span class=\"line\"><span class=\"variable\">$primary</span>:  <span class=\"number\">#449966</span> !default;</span><br><span class=\"line\"><span class=\"variable\">$secondary</span>:  <span class=\"number\">#F8EBCF</span> !default;</span><br><span class=\"line\"><span class=\"variable\">$tertiary</span>:  <span class=\"number\">#F0E0B9</span> !default;</span><br><span class=\"line\"><span class=\"comment\">// 過渡</span></span><br><span class=\"line\"><span class=\"variable\">$transition-1</span>:  all .<span class=\"number\">2s</span> ease-out;</span><br></pre></td></tr></table></figure>"},{"title":"前端常用按鈕特效合輯","date":"2022-02-05T18:06:37.000Z","_content":"\n前端工程師在職場上常常會使用各種不同的按鈕特效，為了方便自己在工作時能迅速地套用，所以整理出一些常用的按鈕特效，也歡迎大家使用我撰寫的這些按鈕程式碼！\n<p style=\"color: blue\">※文章內的特效按鈕皆使用scss</p>\n\n## 漸層淡入按鈕\n\n<p class=\"codepen\" data-height=\"300\" data-default-tab=\"result\" data-slug-hash=\"zYwWbXK\" data-user=\"ecrjurxl\" style=\"height: 300px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;\">\n  <span>See the Pen <a href=\"https://codepen.io/ecrjurxl/pen/zYwWbXK\">\n  btn-1</a> by 劉育瑋 (<a href=\"https://codepen.io/ecrjurxl\">@ecrjurxl</a>)\n  on <a href=\"https://codepen.io\">CodePen</a>.</span>\n</p>\n<script async src=\"https://cpwebassets.codepen.io/assets/embed/ei.js\"></script>\n\n<!-- more -->\n\n## 線框位移按鈕\n\n<p class=\"codepen\" data-height=\"300\" data-default-tab=\"result\" data-slug-hash=\"xxdjeqd\" data-user=\"ecrjurxl\" style=\"height: 300px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;\">\n  <span>See the Pen <a href=\"https://codepen.io/ecrjurxl/pen/xxdjeqd\">\n  btn-2</a> by 劉育瑋 (<a href=\"https://codepen.io/ecrjurxl\">@ecrjurxl</a>)\n  on <a href=\"https://codepen.io\">CodePen</a>.</span>\n</p>\n<script async src=\"https://cpwebassets.codepen.io/assets/embed/ei.js\"></script>\n\n## 線框位移按鈕-2\n\n<p class=\"codepen\" data-height=\"300\" data-default-tab=\"result\" data-slug-hash=\"jOmxoKL\" data-user=\"ecrjurxl\" style=\"height: 300px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;\">\n  <span>See the Pen <a href=\"https://codepen.io/ecrjurxl/pen/jOmxoKL\">\n  btn-3</a> by 劉育瑋 (<a href=\"https://codepen.io/ecrjurxl\">@ecrjurxl</a>)\n  on <a href=\"https://codepen.io\">CodePen</a>.</span>\n</p>\n<script async src=\"https://cpwebassets.codepen.io/assets/embed/ei.js\"></script>\n\n## 進度條按鈕\n\n<p class=\"codepen\" data-height=\"300\" data-default-tab=\"result\" data-slug-hash=\"vYmjqLK\" data-user=\"ecrjurxl\" style=\"height: 300px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;\">\n  <span>See the Pen <a href=\"https://codepen.io/ecrjurxl/pen/vYmjqLK\">\n  btn-4</a> by 劉育瑋 (<a href=\"https://codepen.io/ecrjurxl\">@ecrjurxl</a>)\n  on <a href=\"https://codepen.io\">CodePen</a>.</span>\n</p>\n<script async src=\"https://cpwebassets.codepen.io/assets/embed/ei.js\"></script>\n\n## 縮放動畫按鈕\n\n<p class=\"codepen\" data-height=\"300\" data-default-tab=\"result\" data-slug-hash=\"dyWeBJp\" data-user=\"ecrjurxl\" style=\"height: 300px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;\">\n  <span>See the Pen <a href=\"https://codepen.io/ecrjurxl/pen/dyWeBJp\">\n  btn-5</a> by 劉育瑋 (<a href=\"https://codepen.io/ecrjurxl\">@ecrjurxl</a>)\n  on <a href=\"https://codepen.io\">CodePen</a>.</span>\n</p>\n<script async src=\"https://cpwebassets.codepen.io/assets/embed/ei.js\"></script>\n\n如果喜歡這些按鈕特效以及想看更多有關CSS特效的文章的話，請幫我分享文章給更多人知道，這些支持將會是我繼續創作的最大動力！","source":"_posts/2022-02-06-2.md","raw":"---\ntitle: 前端常用按鈕特效合輯\ndate: 2022-02-06 02:06:37\ntags:\n- scss\n---\n\n前端工程師在職場上常常會使用各種不同的按鈕特效，為了方便自己在工作時能迅速地套用，所以整理出一些常用的按鈕特效，也歡迎大家使用我撰寫的這些按鈕程式碼！\n<p style=\"color: blue\">※文章內的特效按鈕皆使用scss</p>\n\n## 漸層淡入按鈕\n\n<p class=\"codepen\" data-height=\"300\" data-default-tab=\"result\" data-slug-hash=\"zYwWbXK\" data-user=\"ecrjurxl\" style=\"height: 300px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;\">\n  <span>See the Pen <a href=\"https://codepen.io/ecrjurxl/pen/zYwWbXK\">\n  btn-1</a> by 劉育瑋 (<a href=\"https://codepen.io/ecrjurxl\">@ecrjurxl</a>)\n  on <a href=\"https://codepen.io\">CodePen</a>.</span>\n</p>\n<script async src=\"https://cpwebassets.codepen.io/assets/embed/ei.js\"></script>\n\n<!-- more -->\n\n## 線框位移按鈕\n\n<p class=\"codepen\" data-height=\"300\" data-default-tab=\"result\" data-slug-hash=\"xxdjeqd\" data-user=\"ecrjurxl\" style=\"height: 300px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;\">\n  <span>See the Pen <a href=\"https://codepen.io/ecrjurxl/pen/xxdjeqd\">\n  btn-2</a> by 劉育瑋 (<a href=\"https://codepen.io/ecrjurxl\">@ecrjurxl</a>)\n  on <a href=\"https://codepen.io\">CodePen</a>.</span>\n</p>\n<script async src=\"https://cpwebassets.codepen.io/assets/embed/ei.js\"></script>\n\n## 線框位移按鈕-2\n\n<p class=\"codepen\" data-height=\"300\" data-default-tab=\"result\" data-slug-hash=\"jOmxoKL\" data-user=\"ecrjurxl\" style=\"height: 300px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;\">\n  <span>See the Pen <a href=\"https://codepen.io/ecrjurxl/pen/jOmxoKL\">\n  btn-3</a> by 劉育瑋 (<a href=\"https://codepen.io/ecrjurxl\">@ecrjurxl</a>)\n  on <a href=\"https://codepen.io\">CodePen</a>.</span>\n</p>\n<script async src=\"https://cpwebassets.codepen.io/assets/embed/ei.js\"></script>\n\n## 進度條按鈕\n\n<p class=\"codepen\" data-height=\"300\" data-default-tab=\"result\" data-slug-hash=\"vYmjqLK\" data-user=\"ecrjurxl\" style=\"height: 300px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;\">\n  <span>See the Pen <a href=\"https://codepen.io/ecrjurxl/pen/vYmjqLK\">\n  btn-4</a> by 劉育瑋 (<a href=\"https://codepen.io/ecrjurxl\">@ecrjurxl</a>)\n  on <a href=\"https://codepen.io\">CodePen</a>.</span>\n</p>\n<script async src=\"https://cpwebassets.codepen.io/assets/embed/ei.js\"></script>\n\n## 縮放動畫按鈕\n\n<p class=\"codepen\" data-height=\"300\" data-default-tab=\"result\" data-slug-hash=\"dyWeBJp\" data-user=\"ecrjurxl\" style=\"height: 300px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;\">\n  <span>See the Pen <a href=\"https://codepen.io/ecrjurxl/pen/dyWeBJp\">\n  btn-5</a> by 劉育瑋 (<a href=\"https://codepen.io/ecrjurxl\">@ecrjurxl</a>)\n  on <a href=\"https://codepen.io\">CodePen</a>.</span>\n</p>\n<script async src=\"https://cpwebassets.codepen.io/assets/embed/ei.js\"></script>\n\n如果喜歡這些按鈕特效以及想看更多有關CSS特效的文章的話，請幫我分享文章給更多人知道，這些支持將會是我繼續創作的最大動力！","slug":"2","published":1,"updated":"2022-02-07T13:30:12.298Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clok3v80r00081wvahgry1x1z","content":"<p>前端工程師在職場上常常會使用各種不同的按鈕特效，為了方便自己在工作時能迅速地套用，所以整理出一些常用的按鈕特效，也歡迎大家使用我撰寫的這些按鈕程式碼！</p>\n<p style=\"color: blue\">※文章內的特效按鈕皆使用scss</p>\n\n<h2 id=\"漸層淡入按鈕\"><a href=\"#漸層淡入按鈕\" class=\"headerlink\" title=\"漸層淡入按鈕\"></a>漸層淡入按鈕</h2><p class=\"codepen\" data-height=\"300\" data-default-tab=\"result\" data-slug-hash=\"zYwWbXK\" data-user=\"ecrjurxl\" style=\"height: 300px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;\">\n  <span>See the Pen <a href=\"https://codepen.io/ecrjurxl/pen/zYwWbXK\">\n  btn-1</a> by 劉育瑋 (<a href=\"https://codepen.io/ecrjurxl\">@ecrjurxl</a>)\n  on <a href=\"https://codepen.io\">CodePen</a>.</span>\n</p>\n<script async src=\"https://cpwebassets.codepen.io/assets/embed/ei.js\"></script>\n\n<span id=\"more\"></span>\n\n<h2 id=\"線框位移按鈕\"><a href=\"#線框位移按鈕\" class=\"headerlink\" title=\"線框位移按鈕\"></a>線框位移按鈕</h2><p class=\"codepen\" data-height=\"300\" data-default-tab=\"result\" data-slug-hash=\"xxdjeqd\" data-user=\"ecrjurxl\" style=\"height: 300px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;\">\n  <span>See the Pen <a href=\"https://codepen.io/ecrjurxl/pen/xxdjeqd\">\n  btn-2</a> by 劉育瑋 (<a href=\"https://codepen.io/ecrjurxl\">@ecrjurxl</a>)\n  on <a href=\"https://codepen.io\">CodePen</a>.</span>\n</p>\n<script async src=\"https://cpwebassets.codepen.io/assets/embed/ei.js\"></script>\n\n<h2 id=\"線框位移按鈕-2\"><a href=\"#線框位移按鈕-2\" class=\"headerlink\" title=\"線框位移按鈕-2\"></a>線框位移按鈕-2</h2><p class=\"codepen\" data-height=\"300\" data-default-tab=\"result\" data-slug-hash=\"jOmxoKL\" data-user=\"ecrjurxl\" style=\"height: 300px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;\">\n  <span>See the Pen <a href=\"https://codepen.io/ecrjurxl/pen/jOmxoKL\">\n  btn-3</a> by 劉育瑋 (<a href=\"https://codepen.io/ecrjurxl\">@ecrjurxl</a>)\n  on <a href=\"https://codepen.io\">CodePen</a>.</span>\n</p>\n<script async src=\"https://cpwebassets.codepen.io/assets/embed/ei.js\"></script>\n\n<h2 id=\"進度條按鈕\"><a href=\"#進度條按鈕\" class=\"headerlink\" title=\"進度條按鈕\"></a>進度條按鈕</h2><p class=\"codepen\" data-height=\"300\" data-default-tab=\"result\" data-slug-hash=\"vYmjqLK\" data-user=\"ecrjurxl\" style=\"height: 300px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;\">\n  <span>See the Pen <a href=\"https://codepen.io/ecrjurxl/pen/vYmjqLK\">\n  btn-4</a> by 劉育瑋 (<a href=\"https://codepen.io/ecrjurxl\">@ecrjurxl</a>)\n  on <a href=\"https://codepen.io\">CodePen</a>.</span>\n</p>\n<script async src=\"https://cpwebassets.codepen.io/assets/embed/ei.js\"></script>\n\n<h2 id=\"縮放動畫按鈕\"><a href=\"#縮放動畫按鈕\" class=\"headerlink\" title=\"縮放動畫按鈕\"></a>縮放動畫按鈕</h2><p class=\"codepen\" data-height=\"300\" data-default-tab=\"result\" data-slug-hash=\"dyWeBJp\" data-user=\"ecrjurxl\" style=\"height: 300px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;\">\n  <span>See the Pen <a href=\"https://codepen.io/ecrjurxl/pen/dyWeBJp\">\n  btn-5</a> by 劉育瑋 (<a href=\"https://codepen.io/ecrjurxl\">@ecrjurxl</a>)\n  on <a href=\"https://codepen.io\">CodePen</a>.</span>\n</p>\n<script async src=\"https://cpwebassets.codepen.io/assets/embed/ei.js\"></script>\n\n<p>如果喜歡這些按鈕特效以及想看更多有關CSS特效的文章的話，請幫我分享文章給更多人知道，這些支持將會是我繼續創作的最大動力！</p>\n","site":{"data":{}},"excerpt":"<p>前端工程師在職場上常常會使用各種不同的按鈕特效，為了方便自己在工作時能迅速地套用，所以整理出一些常用的按鈕特效，也歡迎大家使用我撰寫的這些按鈕程式碼！</p>\n<p style=\"color: blue\">※文章內的特效按鈕皆使用scss</p>\n\n<h2 id=\"漸層淡入按鈕\"><a href=\"#漸層淡入按鈕\" class=\"headerlink\" title=\"漸層淡入按鈕\"></a>漸層淡入按鈕</h2><p class=\"codepen\" data-height=\"300\" data-default-tab=\"result\" data-slug-hash=\"zYwWbXK\" data-user=\"ecrjurxl\" style=\"height: 300px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;\">\n  <span>See the Pen <a href=\"https://codepen.io/ecrjurxl/pen/zYwWbXK\">\n  btn-1</a> by 劉育瑋 (<a href=\"https://codepen.io/ecrjurxl\">@ecrjurxl</a>)\n  on <a href=\"https://codepen.io\">CodePen</a>.</span>\n</p>\n<script async src=\"https://cpwebassets.codepen.io/assets/embed/ei.js\"></script>","more":"<h2 id=\"線框位移按鈕\"><a href=\"#線框位移按鈕\" class=\"headerlink\" title=\"線框位移按鈕\"></a>線框位移按鈕</h2><p class=\"codepen\" data-height=\"300\" data-default-tab=\"result\" data-slug-hash=\"xxdjeqd\" data-user=\"ecrjurxl\" style=\"height: 300px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;\">\n  <span>See the Pen <a href=\"https://codepen.io/ecrjurxl/pen/xxdjeqd\">\n  btn-2</a> by 劉育瑋 (<a href=\"https://codepen.io/ecrjurxl\">@ecrjurxl</a>)\n  on <a href=\"https://codepen.io\">CodePen</a>.</span>\n</p>\n<script async src=\"https://cpwebassets.codepen.io/assets/embed/ei.js\"></script>\n\n<h2 id=\"線框位移按鈕-2\"><a href=\"#線框位移按鈕-2\" class=\"headerlink\" title=\"線框位移按鈕-2\"></a>線框位移按鈕-2</h2><p class=\"codepen\" data-height=\"300\" data-default-tab=\"result\" data-slug-hash=\"jOmxoKL\" data-user=\"ecrjurxl\" style=\"height: 300px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;\">\n  <span>See the Pen <a href=\"https://codepen.io/ecrjurxl/pen/jOmxoKL\">\n  btn-3</a> by 劉育瑋 (<a href=\"https://codepen.io/ecrjurxl\">@ecrjurxl</a>)\n  on <a href=\"https://codepen.io\">CodePen</a>.</span>\n</p>\n<script async src=\"https://cpwebassets.codepen.io/assets/embed/ei.js\"></script>\n\n<h2 id=\"進度條按鈕\"><a href=\"#進度條按鈕\" class=\"headerlink\" title=\"進度條按鈕\"></a>進度條按鈕</h2><p class=\"codepen\" data-height=\"300\" data-default-tab=\"result\" data-slug-hash=\"vYmjqLK\" data-user=\"ecrjurxl\" style=\"height: 300px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;\">\n  <span>See the Pen <a href=\"https://codepen.io/ecrjurxl/pen/vYmjqLK\">\n  btn-4</a> by 劉育瑋 (<a href=\"https://codepen.io/ecrjurxl\">@ecrjurxl</a>)\n  on <a href=\"https://codepen.io\">CodePen</a>.</span>\n</p>\n<script async src=\"https://cpwebassets.codepen.io/assets/embed/ei.js\"></script>\n\n<h2 id=\"縮放動畫按鈕\"><a href=\"#縮放動畫按鈕\" class=\"headerlink\" title=\"縮放動畫按鈕\"></a>縮放動畫按鈕</h2><p class=\"codepen\" data-height=\"300\" data-default-tab=\"result\" data-slug-hash=\"dyWeBJp\" data-user=\"ecrjurxl\" style=\"height: 300px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;\">\n  <span>See the Pen <a href=\"https://codepen.io/ecrjurxl/pen/dyWeBJp\">\n  btn-5</a> by 劉育瑋 (<a href=\"https://codepen.io/ecrjurxl\">@ecrjurxl</a>)\n  on <a href=\"https://codepen.io\">CodePen</a>.</span>\n</p>\n<script async src=\"https://cpwebassets.codepen.io/assets/embed/ei.js\"></script>\n\n<p>如果喜歡這些按鈕特效以及想看更多有關CSS特效的文章的話，請幫我分享文章給更多人知道，這些支持將會是我繼續創作的最大動力！</p>"},{"title":"從設計系畢業到入職前端工程師(上)","date":"2022-02-05T18:14:30.000Z","_content":"\n![](cover.jpg)\n\n入行前端工程師到現在差不多一年左右，雖然還很菜，但是由於我是設計相關科系畢業後跨領域成為工程師的，應該可以給一些準備轉職的設計師或是設計科系的學生前端經驗的分享，但是由於我是台中人暫時沒有誇縣市找工作的打算，所以這些經驗分享主要都是以台中為主喔！\n\n<!-- more -->\n\n## 畢業前\n\n開始學前端時，是在大學快畢業的時候，那時學校的畢業製作要求每個組別要為自己的作品製作一個主視覺網站，而在組別中對資訊相對擅長的我自然就接下了這個作業，一開始我對網頁一竅不通，HTML和CSS都不太會寫更別說JavaScript，那時的我只會用Adobe Dreamweaver拉個一直跑版的網站，大概也是因為自己也不太會操作，找個跑版原因就讓我費盡心力，於是在做這個主視覺網站時，我簡單構思了主視覺網站的樣子，決定從基礎開始學程式，想辦法利用程式做出跟我的構思接近的網站，結果花了好幾個月的時間才好不容易做出一個充滿bug的網站((XD，但在這個過程中我也開始發現這個領域讓我很感興趣，也開始積極地投入研究！\n\n## 線上課程\n\n在自學一段時間之後，我遇到了一些瓶頸，於是就開始尋找一些教學資源，為了加快學習的腳步，我注意到了線上課程，對那時的我來說，線上課程的學習方式非常適合我，隨時隨地觀看，還有老師可以發問，甚至還可以產出一些獨一無二的作品，這讓我更確立了想要走前端這條路的念頭，在這學習的過程中我主要以做中學的方法來面對每個挑戰，每個課程中的作業都實際的去嘗試，學了一個段落，就發想一些有趣的作品，來實際驗收學習的成效，也能補足更多課程沒有提到的知識，最終扣掉兵役的時間我大概花了半年的時間，才達到我覺得可以找工作的狀態，關於學習前端的選擇，個人是蠻推薦以下幾個地方：\n\n1. ## **六角學院**\n這個平台不只有在youtube提供許多免費資源和時常直播外，還有許多免費的技術文章，付費課程的價格也不貴，對於學生的提問卻是有問必答，若是有考慮付費學習，可以考慮看看！\n\n2. ## **彭彭的課程**\n這個youtube頻道提供非常多網頁的技術資源，像是JavaScript、node.js等等，付費課程的部分我比較沒有接觸，歡迎有相關經驗的人分享！\n\n3. ## **CodePen**\n這裡雖然不是線上課程的平台，但是有許多有趣的前端作品，可以學到一些((奇特?，的前端知識！\n\n4. ## **進度條線上課程Progress Bar**\n這邊的線上課程雖然在價格上稍微貴一點，但是內容絕對超值，關於JavaScript、Webpack、React的課程，可以釐清很多觀念，不只如此，如果想要往後端發展，這個平台更是一個很好的選擇，PHP、MySQL、Laravel等時下後端的重點技能，在這個平台中都有非常詳盡的介紹。\n\n5. ## **官方文件**\n學習一門新技術，除了上課之外，自學也是很重要的事情，而最詳盡的教學，往往都是寫在官方文件中，但是也不用一條一條的看，我的作法是搭配作品學習，試著使用新的技術邊學邊做，這樣在製作的過程中學習，也會加深印象。\n\n**因為文章比較長，所以決定分成兩個部分，下一篇的主題是面試與就職的相關內容，希望大家不要錯過喔！**\n","source":"_posts/2022-02-06-3.md","raw":"---\ntitle: 從設計系畢業到入職前端工程師(上)\ndate: 2022-02-06 02:14:30\ntags:\n- front end\n- share\n- design\n---\n\n![](cover.jpg)\n\n入行前端工程師到現在差不多一年左右，雖然還很菜，但是由於我是設計相關科系畢業後跨領域成為工程師的，應該可以給一些準備轉職的設計師或是設計科系的學生前端經驗的分享，但是由於我是台中人暫時沒有誇縣市找工作的打算，所以這些經驗分享主要都是以台中為主喔！\n\n<!-- more -->\n\n## 畢業前\n\n開始學前端時，是在大學快畢業的時候，那時學校的畢業製作要求每個組別要為自己的作品製作一個主視覺網站，而在組別中對資訊相對擅長的我自然就接下了這個作業，一開始我對網頁一竅不通，HTML和CSS都不太會寫更別說JavaScript，那時的我只會用Adobe Dreamweaver拉個一直跑版的網站，大概也是因為自己也不太會操作，找個跑版原因就讓我費盡心力，於是在做這個主視覺網站時，我簡單構思了主視覺網站的樣子，決定從基礎開始學程式，想辦法利用程式做出跟我的構思接近的網站，結果花了好幾個月的時間才好不容易做出一個充滿bug的網站((XD，但在這個過程中我也開始發現這個領域讓我很感興趣，也開始積極地投入研究！\n\n## 線上課程\n\n在自學一段時間之後，我遇到了一些瓶頸，於是就開始尋找一些教學資源，為了加快學習的腳步，我注意到了線上課程，對那時的我來說，線上課程的學習方式非常適合我，隨時隨地觀看，還有老師可以發問，甚至還可以產出一些獨一無二的作品，這讓我更確立了想要走前端這條路的念頭，在這學習的過程中我主要以做中學的方法來面對每個挑戰，每個課程中的作業都實際的去嘗試，學了一個段落，就發想一些有趣的作品，來實際驗收學習的成效，也能補足更多課程沒有提到的知識，最終扣掉兵役的時間我大概花了半年的時間，才達到我覺得可以找工作的狀態，關於學習前端的選擇，個人是蠻推薦以下幾個地方：\n\n1. ## **六角學院**\n這個平台不只有在youtube提供許多免費資源和時常直播外，還有許多免費的技術文章，付費課程的價格也不貴，對於學生的提問卻是有問必答，若是有考慮付費學習，可以考慮看看！\n\n2. ## **彭彭的課程**\n這個youtube頻道提供非常多網頁的技術資源，像是JavaScript、node.js等等，付費課程的部分我比較沒有接觸，歡迎有相關經驗的人分享！\n\n3. ## **CodePen**\n這裡雖然不是線上課程的平台，但是有許多有趣的前端作品，可以學到一些((奇特?，的前端知識！\n\n4. ## **進度條線上課程Progress Bar**\n這邊的線上課程雖然在價格上稍微貴一點，但是內容絕對超值，關於JavaScript、Webpack、React的課程，可以釐清很多觀念，不只如此，如果想要往後端發展，這個平台更是一個很好的選擇，PHP、MySQL、Laravel等時下後端的重點技能，在這個平台中都有非常詳盡的介紹。\n\n5. ## **官方文件**\n學習一門新技術，除了上課之外，自學也是很重要的事情，而最詳盡的教學，往往都是寫在官方文件中，但是也不用一條一條的看，我的作法是搭配作品學習，試著使用新的技術邊學邊做，這樣在製作的過程中學習，也會加深印象。\n\n**因為文章比較長，所以決定分成兩個部分，下一篇的主題是面試與就職的相關內容，希望大家不要錯過喔！**\n","slug":"3","published":1,"updated":"2022-03-02T15:51:47.694Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clok3v80s00091wvaa2p2543d","content":"<p><img src=\"/2022/02/06/3/cover.jpg\"></p>\n<p>入行前端工程師到現在差不多一年左右，雖然還很菜，但是由於我是設計相關科系畢業後跨領域成為工程師的，應該可以給一些準備轉職的設計師或是設計科系的學生前端經驗的分享，但是由於我是台中人暫時沒有誇縣市找工作的打算，所以這些經驗分享主要都是以台中為主喔！</p>\n<span id=\"more\"></span>\n\n<h2 id=\"畢業前\"><a href=\"#畢業前\" class=\"headerlink\" title=\"畢業前\"></a>畢業前</h2><p>開始學前端時，是在大學快畢業的時候，那時學校的畢業製作要求每個組別要為自己的作品製作一個主視覺網站，而在組別中對資訊相對擅長的我自然就接下了這個作業，一開始我對網頁一竅不通，HTML和CSS都不太會寫更別說JavaScript，那時的我只會用Adobe Dreamweaver拉個一直跑版的網站，大概也是因為自己也不太會操作，找個跑版原因就讓我費盡心力，於是在做這個主視覺網站時，我簡單構思了主視覺網站的樣子，決定從基礎開始學程式，想辦法利用程式做出跟我的構思接近的網站，結果花了好幾個月的時間才好不容易做出一個充滿bug的網站((XD，但在這個過程中我也開始發現這個領域讓我很感興趣，也開始積極地投入研究！</p>\n<h2 id=\"線上課程\"><a href=\"#線上課程\" class=\"headerlink\" title=\"線上課程\"></a>線上課程</h2><p>在自學一段時間之後，我遇到了一些瓶頸，於是就開始尋找一些教學資源，為了加快學習的腳步，我注意到了線上課程，對那時的我來說，線上課程的學習方式非常適合我，隨時隨地觀看，還有老師可以發問，甚至還可以產出一些獨一無二的作品，這讓我更確立了想要走前端這條路的念頭，在這學習的過程中我主要以做中學的方法來面對每個挑戰，每個課程中的作業都實際的去嘗試，學了一個段落，就發想一些有趣的作品，來實際驗收學習的成效，也能補足更多課程沒有提到的知識，最終扣掉兵役的時間我大概花了半年的時間，才達到我覺得可以找工作的狀態，關於學習前端的選擇，個人是蠻推薦以下幾個地方：</p>\n<ol>\n<li><h2 id=\"六角學院\"><a href=\"#六角學院\" class=\"headerlink\" title=\"六角學院\"></a><strong>六角學院</strong></h2><p>這個平台不只有在youtube提供許多免費資源和時常直播外，還有許多免費的技術文章，付費課程的價格也不貴，對於學生的提問卻是有問必答，若是有考慮付費學習，可以考慮看看！</p>\n</li>\n<li><h2 id=\"彭彭的課程\"><a href=\"#彭彭的課程\" class=\"headerlink\" title=\"彭彭的課程\"></a><strong>彭彭的課程</strong></h2><p>這個youtube頻道提供非常多網頁的技術資源，像是JavaScript、node.js等等，付費課程的部分我比較沒有接觸，歡迎有相關經驗的人分享！</p>\n</li>\n<li><h2 id=\"CodePen\"><a href=\"#CodePen\" class=\"headerlink\" title=\"CodePen\"></a><strong>CodePen</strong></h2><p>這裡雖然不是線上課程的平台，但是有許多有趣的前端作品，可以學到一些((奇特?，的前端知識！</p>\n</li>\n<li><h2 id=\"進度條線上課程Progress-Bar\"><a href=\"#進度條線上課程Progress-Bar\" class=\"headerlink\" title=\"進度條線上課程Progress Bar\"></a><strong>進度條線上課程Progress Bar</strong></h2><p>這邊的線上課程雖然在價格上稍微貴一點，但是內容絕對超值，關於JavaScript、Webpack、React的課程，可以釐清很多觀念，不只如此，如果想要往後端發展，這個平台更是一個很好的選擇，PHP、MySQL、Laravel等時下後端的重點技能，在這個平台中都有非常詳盡的介紹。</p>\n</li>\n<li><h2 id=\"官方文件\"><a href=\"#官方文件\" class=\"headerlink\" title=\"官方文件\"></a><strong>官方文件</strong></h2><p>學習一門新技術，除了上課之外，自學也是很重要的事情，而最詳盡的教學，往往都是寫在官方文件中，但是也不用一條一條的看，我的作法是搭配作品學習，試著使用新的技術邊學邊做，這樣在製作的過程中學習，也會加深印象。</p>\n</li>\n</ol>\n<p><strong>因為文章比較長，所以決定分成兩個部分，下一篇的主題是面試與就職的相關內容，希望大家不要錯過喔！</strong></p>\n","site":{"data":{}},"excerpt":"<p><img src=\"/2022/02/06/3/cover.jpg\"></p>\n<p>入行前端工程師到現在差不多一年左右，雖然還很菜，但是由於我是設計相關科系畢業後跨領域成為工程師的，應該可以給一些準備轉職的設計師或是設計科系的學生前端經驗的分享，但是由於我是台中人暫時沒有誇縣市找工作的打算，所以這些經驗分享主要都是以台中為主喔！</p>","more":"<h2 id=\"畢業前\"><a href=\"#畢業前\" class=\"headerlink\" title=\"畢業前\"></a>畢業前</h2><p>開始學前端時，是在大學快畢業的時候，那時學校的畢業製作要求每個組別要為自己的作品製作一個主視覺網站，而在組別中對資訊相對擅長的我自然就接下了這個作業，一開始我對網頁一竅不通，HTML和CSS都不太會寫更別說JavaScript，那時的我只會用Adobe Dreamweaver拉個一直跑版的網站，大概也是因為自己也不太會操作，找個跑版原因就讓我費盡心力，於是在做這個主視覺網站時，我簡單構思了主視覺網站的樣子，決定從基礎開始學程式，想辦法利用程式做出跟我的構思接近的網站，結果花了好幾個月的時間才好不容易做出一個充滿bug的網站((XD，但在這個過程中我也開始發現這個領域讓我很感興趣，也開始積極地投入研究！</p>\n<h2 id=\"線上課程\"><a href=\"#線上課程\" class=\"headerlink\" title=\"線上課程\"></a>線上課程</h2><p>在自學一段時間之後，我遇到了一些瓶頸，於是就開始尋找一些教學資源，為了加快學習的腳步，我注意到了線上課程，對那時的我來說，線上課程的學習方式非常適合我，隨時隨地觀看，還有老師可以發問，甚至還可以產出一些獨一無二的作品，這讓我更確立了想要走前端這條路的念頭，在這學習的過程中我主要以做中學的方法來面對每個挑戰，每個課程中的作業都實際的去嘗試，學了一個段落，就發想一些有趣的作品，來實際驗收學習的成效，也能補足更多課程沒有提到的知識，最終扣掉兵役的時間我大概花了半年的時間，才達到我覺得可以找工作的狀態，關於學習前端的選擇，個人是蠻推薦以下幾個地方：</p>\n<ol>\n<li><h2 id=\"六角學院\"><a href=\"#六角學院\" class=\"headerlink\" title=\"六角學院\"></a><strong>六角學院</strong></h2><p>這個平台不只有在youtube提供許多免費資源和時常直播外，還有許多免費的技術文章，付費課程的價格也不貴，對於學生的提問卻是有問必答，若是有考慮付費學習，可以考慮看看！</p>\n</li>\n<li><h2 id=\"彭彭的課程\"><a href=\"#彭彭的課程\" class=\"headerlink\" title=\"彭彭的課程\"></a><strong>彭彭的課程</strong></h2><p>這個youtube頻道提供非常多網頁的技術資源，像是JavaScript、node.js等等，付費課程的部分我比較沒有接觸，歡迎有相關經驗的人分享！</p>\n</li>\n<li><h2 id=\"CodePen\"><a href=\"#CodePen\" class=\"headerlink\" title=\"CodePen\"></a><strong>CodePen</strong></h2><p>這裡雖然不是線上課程的平台，但是有許多有趣的前端作品，可以學到一些((奇特?，的前端知識！</p>\n</li>\n<li><h2 id=\"進度條線上課程Progress-Bar\"><a href=\"#進度條線上課程Progress-Bar\" class=\"headerlink\" title=\"進度條線上課程Progress Bar\"></a><strong>進度條線上課程Progress Bar</strong></h2><p>這邊的線上課程雖然在價格上稍微貴一點，但是內容絕對超值，關於JavaScript、Webpack、React的課程，可以釐清很多觀念，不只如此，如果想要往後端發展，這個平台更是一個很好的選擇，PHP、MySQL、Laravel等時下後端的重點技能，在這個平台中都有非常詳盡的介紹。</p>\n</li>\n<li><h2 id=\"官方文件\"><a href=\"#官方文件\" class=\"headerlink\" title=\"官方文件\"></a><strong>官方文件</strong></h2><p>學習一門新技術，除了上課之外，自學也是很重要的事情，而最詳盡的教學，往往都是寫在官方文件中，但是也不用一條一條的看，我的作法是搭配作品學習，試著使用新的技術邊學邊做，這樣在製作的過程中學習，也會加深印象。</p>\n</li>\n</ol>\n<p><strong>因為文章比較長，所以決定分成兩個部分，下一篇的主題是面試與就職的相關內容，希望大家不要錯過喔！</strong></p>"},{"title":"從設計系畢業到入職前端工程師(下)","date":"2022-02-05T18:23:07.000Z","_content":"\n![](cover.jpg)\n\n### 這篇文章是這個系列的下集，還沒有看過上一篇的朋友可以參考：[這裡](/2022/02/06/3/)\n\n## 面試\n\n當線上課程學習到一定程度以及個人作品的累積了幾個完整的作品後，我便開始了一連串的找工作行程，不過由於這時的我還沒有經驗，所以收到的面試通知並不多，我就抱持著盡量努力嘗試的想法，開始了這些面試之旅！\n\n<!-- more -->\n\n1. ## **台中市區內一間新創的工作室**\n\n這是我收到的第一個面試通知，這間公司比較偏向工作室，辦公區域不大，人數大概也只有五個人，面試過程很愉快，老闆娘人很好，從面試中得知這間公司接案是主要的業務，這對當時的我來說，是一個不錯的開始，讓在開始找工作的不安心情，穩定了不少。\n\n**結果：錄取 (後來找到更好的所以沒去)**\n\n2. ## **位於西區的公司**\n\n這間公司是網頁接案公司，位於一棟大樓內，經過面談後，說是還要經過測驗和二面，也發現這間公司的工作內容比較偏設計，除了基本的切版外，還需要設計banner，跟我想要找的工作內容方向不太一樣，所以後來主動拒絕了。\n\n**結果：主動拒絕**\n\n3. ## **位於北區的公司**\n\n這間公司規模比前面幾間大了許多，面試前有一個關於JavaScript的測驗，難度不高，但時間需要注意，這邊的職缺比較偏軟體開發，但在這時的我比較缺乏這方面的經驗，在面談時面試官為該公司的專案經理，所以談論的內容也比較偏技術取向，對於設計的成分是比較少的，算是比較符合當時的我想要成長的方向。\n\n**結果：感謝信**\n\n4. ## **位於文心路的資訊公司**\n\n這是間軟體開發公司，自產自銷，主要的工作內容就是開發產品，所以程式邏輯的部分占了大多數，切版較少，但正好是我那時候所缺乏想磨練的部分！整場面試聊得很愉快，主要就是介紹作品，還有了解公司的文化，讓我蠻驚訝的是，他們現場就給了offer！\n\n**結果：錄取**\n\n5. ## **位於彰化的公司**\n\n這間公司是接案公司，聽說主要接公部門的案子，因為人數少，面試的時候幾乎各個階層的人都面試過一輪了，技術的部份主要是了解作品中的程式碼如何運行或一些ajax等js的概念，這間公司因為比較偏僻，且距離我的位置較遠，通勤時間比較長，又有第二次面試，所以我就拒絕掉了\n\n**結果：主動拒絕**\n\n<br/>\n\n***\n\n以上這些大概就是我在第一份前端工作的求職狀況，至於下一份工作的狀況，那又是另一段故事了😅","source":"_posts/2022-02-06-4.md","raw":"---\ntitle: 從設計系畢業到入職前端工程師(下)\ndate: 2022-02-06 02:23:07\ntags:\n- front end\n- share\n- interview\n---\n\n![](cover.jpg)\n\n### 這篇文章是這個系列的下集，還沒有看過上一篇的朋友可以參考：[這裡](/2022/02/06/3/)\n\n## 面試\n\n當線上課程學習到一定程度以及個人作品的累積了幾個完整的作品後，我便開始了一連串的找工作行程，不過由於這時的我還沒有經驗，所以收到的面試通知並不多，我就抱持著盡量努力嘗試的想法，開始了這些面試之旅！\n\n<!-- more -->\n\n1. ## **台中市區內一間新創的工作室**\n\n這是我收到的第一個面試通知，這間公司比較偏向工作室，辦公區域不大，人數大概也只有五個人，面試過程很愉快，老闆娘人很好，從面試中得知這間公司接案是主要的業務，這對當時的我來說，是一個不錯的開始，讓在開始找工作的不安心情，穩定了不少。\n\n**結果：錄取 (後來找到更好的所以沒去)**\n\n2. ## **位於西區的公司**\n\n這間公司是網頁接案公司，位於一棟大樓內，經過面談後，說是還要經過測驗和二面，也發現這間公司的工作內容比較偏設計，除了基本的切版外，還需要設計banner，跟我想要找的工作內容方向不太一樣，所以後來主動拒絕了。\n\n**結果：主動拒絕**\n\n3. ## **位於北區的公司**\n\n這間公司規模比前面幾間大了許多，面試前有一個關於JavaScript的測驗，難度不高，但時間需要注意，這邊的職缺比較偏軟體開發，但在這時的我比較缺乏這方面的經驗，在面談時面試官為該公司的專案經理，所以談論的內容也比較偏技術取向，對於設計的成分是比較少的，算是比較符合當時的我想要成長的方向。\n\n**結果：感謝信**\n\n4. ## **位於文心路的資訊公司**\n\n這是間軟體開發公司，自產自銷，主要的工作內容就是開發產品，所以程式邏輯的部分占了大多數，切版較少，但正好是我那時候所缺乏想磨練的部分！整場面試聊得很愉快，主要就是介紹作品，還有了解公司的文化，讓我蠻驚訝的是，他們現場就給了offer！\n\n**結果：錄取**\n\n5. ## **位於彰化的公司**\n\n這間公司是接案公司，聽說主要接公部門的案子，因為人數少，面試的時候幾乎各個階層的人都面試過一輪了，技術的部份主要是了解作品中的程式碼如何運行或一些ajax等js的概念，這間公司因為比較偏僻，且距離我的位置較遠，通勤時間比較長，又有第二次面試，所以我就拒絕掉了\n\n**結果：主動拒絕**\n\n<br/>\n\n***\n\n以上這些大概就是我在第一份前端工作的求職狀況，至於下一份工作的狀況，那又是另一段故事了😅","slug":"4","published":1,"updated":"2022-03-02T15:51:50.501Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clok3v80t000b1wva3sxud53p","content":"<p><img src=\"/2022/02/06/4/cover.jpg\"></p>\n<h3 id=\"這篇文章是這個系列的下集，還沒有看過上一篇的朋友可以參考：這裡\"><a href=\"#這篇文章是這個系列的下集，還沒有看過上一篇的朋友可以參考：這裡\" class=\"headerlink\" title=\"這篇文章是這個系列的下集，還沒有看過上一篇的朋友可以參考：這裡\"></a>這篇文章是這個系列的下集，還沒有看過上一篇的朋友可以參考：<a href=\"/2022/02/06/3/\">這裡</a></h3><h2 id=\"面試\"><a href=\"#面試\" class=\"headerlink\" title=\"面試\"></a>面試</h2><p>當線上課程學習到一定程度以及個人作品的累積了幾個完整的作品後，我便開始了一連串的找工作行程，不過由於這時的我還沒有經驗，所以收到的面試通知並不多，我就抱持著盡量努力嘗試的想法，開始了這些面試之旅！</p>\n<span id=\"more\"></span>\n\n<ol>\n<li><h2 id=\"台中市區內一間新創的工作室\"><a href=\"#台中市區內一間新創的工作室\" class=\"headerlink\" title=\"台中市區內一間新創的工作室\"></a><strong>台中市區內一間新創的工作室</strong></h2></li>\n</ol>\n<p>這是我收到的第一個面試通知，這間公司比較偏向工作室，辦公區域不大，人數大概也只有五個人，面試過程很愉快，老闆娘人很好，從面試中得知這間公司接案是主要的業務，這對當時的我來說，是一個不錯的開始，讓在開始找工作的不安心情，穩定了不少。</p>\n<p><strong>結果：錄取 (後來找到更好的所以沒去)</strong></p>\n<ol start=\"2\">\n<li><h2 id=\"位於西區的公司\"><a href=\"#位於西區的公司\" class=\"headerlink\" title=\"位於西區的公司\"></a><strong>位於西區的公司</strong></h2></li>\n</ol>\n<p>這間公司是網頁接案公司，位於一棟大樓內，經過面談後，說是還要經過測驗和二面，也發現這間公司的工作內容比較偏設計，除了基本的切版外，還需要設計banner，跟我想要找的工作內容方向不太一樣，所以後來主動拒絕了。</p>\n<p><strong>結果：主動拒絕</strong></p>\n<ol start=\"3\">\n<li><h2 id=\"位於北區的公司\"><a href=\"#位於北區的公司\" class=\"headerlink\" title=\"位於北區的公司\"></a><strong>位於北區的公司</strong></h2></li>\n</ol>\n<p>這間公司規模比前面幾間大了許多，面試前有一個關於JavaScript的測驗，難度不高，但時間需要注意，這邊的職缺比較偏軟體開發，但在這時的我比較缺乏這方面的經驗，在面談時面試官為該公司的專案經理，所以談論的內容也比較偏技術取向，對於設計的成分是比較少的，算是比較符合當時的我想要成長的方向。</p>\n<p><strong>結果：感謝信</strong></p>\n<ol start=\"4\">\n<li><h2 id=\"位於文心路的資訊公司\"><a href=\"#位於文心路的資訊公司\" class=\"headerlink\" title=\"位於文心路的資訊公司\"></a><strong>位於文心路的資訊公司</strong></h2></li>\n</ol>\n<p>這是間軟體開發公司，自產自銷，主要的工作內容就是開發產品，所以程式邏輯的部分占了大多數，切版較少，但正好是我那時候所缺乏想磨練的部分！整場面試聊得很愉快，主要就是介紹作品，還有了解公司的文化，讓我蠻驚訝的是，他們現場就給了offer！</p>\n<p><strong>結果：錄取</strong></p>\n<ol start=\"5\">\n<li><h2 id=\"位於彰化的公司\"><a href=\"#位於彰化的公司\" class=\"headerlink\" title=\"位於彰化的公司\"></a><strong>位於彰化的公司</strong></h2></li>\n</ol>\n<p>這間公司是接案公司，聽說主要接公部門的案子，因為人數少，面試的時候幾乎各個階層的人都面試過一輪了，技術的部份主要是了解作品中的程式碼如何運行或一些ajax等js的概念，這間公司因為比較偏僻，且距離我的位置較遠，通勤時間比較長，又有第二次面試，所以我就拒絕掉了</p>\n<p><strong>結果：主動拒絕</strong></p>\n<br/>\n\n<hr>\n<p>以上這些大概就是我在第一份前端工作的求職狀況，至於下一份工作的狀況，那又是另一段故事了😅</p>\n","site":{"data":{}},"excerpt":"<p><img src=\"/2022/02/06/4/cover.jpg\"></p>\n<h3 id=\"這篇文章是這個系列的下集，還沒有看過上一篇的朋友可以參考：這裡\"><a href=\"#這篇文章是這個系列的下集，還沒有看過上一篇的朋友可以參考：這裡\" class=\"headerlink\" title=\"這篇文章是這個系列的下集，還沒有看過上一篇的朋友可以參考：這裡\"></a>這篇文章是這個系列的下集，還沒有看過上一篇的朋友可以參考：<a href=\"/2022/02/06/3/\">這裡</a></h3><h2 id=\"面試\"><a href=\"#面試\" class=\"headerlink\" title=\"面試\"></a>面試</h2><p>當線上課程學習到一定程度以及個人作品的累積了幾個完整的作品後，我便開始了一連串的找工作行程，不過由於這時的我還沒有經驗，所以收到的面試通知並不多，我就抱持著盡量努力嘗試的想法，開始了這些面試之旅！</p>","more":"<ol>\n<li><h2 id=\"台中市區內一間新創的工作室\"><a href=\"#台中市區內一間新創的工作室\" class=\"headerlink\" title=\"台中市區內一間新創的工作室\"></a><strong>台中市區內一間新創的工作室</strong></h2></li>\n</ol>\n<p>這是我收到的第一個面試通知，這間公司比較偏向工作室，辦公區域不大，人數大概也只有五個人，面試過程很愉快，老闆娘人很好，從面試中得知這間公司接案是主要的業務，這對當時的我來說，是一個不錯的開始，讓在開始找工作的不安心情，穩定了不少。</p>\n<p><strong>結果：錄取 (後來找到更好的所以沒去)</strong></p>\n<ol start=\"2\">\n<li><h2 id=\"位於西區的公司\"><a href=\"#位於西區的公司\" class=\"headerlink\" title=\"位於西區的公司\"></a><strong>位於西區的公司</strong></h2></li>\n</ol>\n<p>這間公司是網頁接案公司，位於一棟大樓內，經過面談後，說是還要經過測驗和二面，也發現這間公司的工作內容比較偏設計，除了基本的切版外，還需要設計banner，跟我想要找的工作內容方向不太一樣，所以後來主動拒絕了。</p>\n<p><strong>結果：主動拒絕</strong></p>\n<ol start=\"3\">\n<li><h2 id=\"位於北區的公司\"><a href=\"#位於北區的公司\" class=\"headerlink\" title=\"位於北區的公司\"></a><strong>位於北區的公司</strong></h2></li>\n</ol>\n<p>這間公司規模比前面幾間大了許多，面試前有一個關於JavaScript的測驗，難度不高，但時間需要注意，這邊的職缺比較偏軟體開發，但在這時的我比較缺乏這方面的經驗，在面談時面試官為該公司的專案經理，所以談論的內容也比較偏技術取向，對於設計的成分是比較少的，算是比較符合當時的我想要成長的方向。</p>\n<p><strong>結果：感謝信</strong></p>\n<ol start=\"4\">\n<li><h2 id=\"位於文心路的資訊公司\"><a href=\"#位於文心路的資訊公司\" class=\"headerlink\" title=\"位於文心路的資訊公司\"></a><strong>位於文心路的資訊公司</strong></h2></li>\n</ol>\n<p>這是間軟體開發公司，自產自銷，主要的工作內容就是開發產品，所以程式邏輯的部分占了大多數，切版較少，但正好是我那時候所缺乏想磨練的部分！整場面試聊得很愉快，主要就是介紹作品，還有了解公司的文化，讓我蠻驚訝的是，他們現場就給了offer！</p>\n<p><strong>結果：錄取</strong></p>\n<ol start=\"5\">\n<li><h2 id=\"位於彰化的公司\"><a href=\"#位於彰化的公司\" class=\"headerlink\" title=\"位於彰化的公司\"></a><strong>位於彰化的公司</strong></h2></li>\n</ol>\n<p>這間公司是接案公司，聽說主要接公部門的案子，因為人數少，面試的時候幾乎各個階層的人都面試過一輪了，技術的部份主要是了解作品中的程式碼如何運行或一些ajax等js的概念，這間公司因為比較偏僻，且距離我的位置較遠，通勤時間比較長，又有第二次面試，所以我就拒絕掉了</p>\n<p><strong>結果：主動拒絕</strong></p>\n<br/>\n\n<hr>\n<p>以上這些大概就是我在第一份前端工作的求職狀況，至於下一份工作的狀況，那又是另一段故事了😅</p>"},{"title":"網頁導引神器Shepherd.js","date":"2022-02-05T18:38:45.000Z","_content":"\n![](cover.jpg)\n\n我們在玩手機遊戲時，應該多少都有看過第一次遊玩時，一步一步教我們要點哪裡的那種導引功能吧！這次要來介紹的套件就是讓網頁能夠快速、簡易的加上這個功能的Shepherd.js套件！\n\n[Demo專案(登入後查看效果)](https://6yuwei.com/diary-box/)\n[官方Demo](https://shepherdjs.dev/)\n\n<!-- more -->\n\n## 安裝\n\n### NPM\n\n``` javascript\nnpm install shepherd.js --save\n```\n\n### CDN\n\n``` html\n<script src=\"https://cdn.jsdelivr.net/npm/shepherd.js@5.0.1/dist/js/shepherd.js\"></script>\n```\n\n## 使用\n\n### 載入套件\n\n``` javascript\nimport Shepherd from 'shepherd.js';\n```\n\n### 先實體化Shepherd套件\n\n``` javascript\nconst tour = new Shepherd.Tour({\n  useModalOverlay: true, // 背景黑幕\n  // 預設步驟設定\n  defaultStepOptions: {\n    classes: 'shadow-md bg-purple-dark', // 使用的主題或加入自訂的class\n    scrollTo: true, // 自動滾動到指定位置\n  }\n});\n```\n\n### 開始建立導引步驟\n\n``` javascript\ntour.addSteps([\n  // 步驟1\n  {\n    id: 'step-1', // 步驟id\n    text: '這是你持有的日記幣，透過寫日記或記帳可以獲得日記幣喔！', // 步驟標題\n    attachTo: {\n      element: '.status', // 目標元素設定，使用css選擇器的方式填寫\n      on: 'auto', // 位置安排，支援這些值 'auto', 'auto-start', 'auto-end', 'top', 'top-start', 'top-end', 'bottom', 'bottom-start', 'bottom-end', 'right', 'right-start', 'right-end', 'left', 'left-start', 'left-end'\n    },\n    canClickTarget: false, // 是否可以點擊目標元素\n    classes: 'custom-step', // 為該步驟加入額外的class\n    // 按鈕可以設定多組\n    buttons: [\n      {\n        text: '下一步',\n        action: tour.next, // 執行下一個動作\n      },\n    ],\n  },\n  // 步驟2\n  {\n    id: 'step-2',\n    text: '點擊+號開始寫日記或記帳吧！',\n    canClickTarget: false,\n    attachTo: {\n      element: '#addBtn',\n      on: 'top',\n    },\n    classes: 'custom-step',\n    buttons: [\n      {\n        text: '完成',\n        action: tour.complete, // 結束時記得完成\n      },\n    ],\n  },\n]);\n```\n\n### 執行安排好的步驟\n\n``` javascript\ntour.start();\n```\n\n### 移除指定步驟\n\n``` javascript\ntour.removeStep('步驟id');\n```\n\n### 註冊事件\n\n``` javascript\n// 這些為支援的事件complete、cancel、hide、show、start、active、inactive\n\n// 在安排的步驟完成之後，執行一些事件\ntour.on('complete', () => {\n  // 設定值進入localstorage中，用來辨別使用者已經閱讀過導引\n  localStorage.setItem('isGuide', '1');\n});\n```\n\n**以上為Shepherd.js的簡易介紹，希望可以幫助到一些需要做網頁導引的人！**","source":"_posts/2022-02-06-5.md","raw":"---\ntitle: 網頁導引神器Shepherd.js\ndate: 2022-02-06 02:38:45\ntags:\n- plugin\n- JavaScript\n---\n\n![](cover.jpg)\n\n我們在玩手機遊戲時，應該多少都有看過第一次遊玩時，一步一步教我們要點哪裡的那種導引功能吧！這次要來介紹的套件就是讓網頁能夠快速、簡易的加上這個功能的Shepherd.js套件！\n\n[Demo專案(登入後查看效果)](https://6yuwei.com/diary-box/)\n[官方Demo](https://shepherdjs.dev/)\n\n<!-- more -->\n\n## 安裝\n\n### NPM\n\n``` javascript\nnpm install shepherd.js --save\n```\n\n### CDN\n\n``` html\n<script src=\"https://cdn.jsdelivr.net/npm/shepherd.js@5.0.1/dist/js/shepherd.js\"></script>\n```\n\n## 使用\n\n### 載入套件\n\n``` javascript\nimport Shepherd from 'shepherd.js';\n```\n\n### 先實體化Shepherd套件\n\n``` javascript\nconst tour = new Shepherd.Tour({\n  useModalOverlay: true, // 背景黑幕\n  // 預設步驟設定\n  defaultStepOptions: {\n    classes: 'shadow-md bg-purple-dark', // 使用的主題或加入自訂的class\n    scrollTo: true, // 自動滾動到指定位置\n  }\n});\n```\n\n### 開始建立導引步驟\n\n``` javascript\ntour.addSteps([\n  // 步驟1\n  {\n    id: 'step-1', // 步驟id\n    text: '這是你持有的日記幣，透過寫日記或記帳可以獲得日記幣喔！', // 步驟標題\n    attachTo: {\n      element: '.status', // 目標元素設定，使用css選擇器的方式填寫\n      on: 'auto', // 位置安排，支援這些值 'auto', 'auto-start', 'auto-end', 'top', 'top-start', 'top-end', 'bottom', 'bottom-start', 'bottom-end', 'right', 'right-start', 'right-end', 'left', 'left-start', 'left-end'\n    },\n    canClickTarget: false, // 是否可以點擊目標元素\n    classes: 'custom-step', // 為該步驟加入額外的class\n    // 按鈕可以設定多組\n    buttons: [\n      {\n        text: '下一步',\n        action: tour.next, // 執行下一個動作\n      },\n    ],\n  },\n  // 步驟2\n  {\n    id: 'step-2',\n    text: '點擊+號開始寫日記或記帳吧！',\n    canClickTarget: false,\n    attachTo: {\n      element: '#addBtn',\n      on: 'top',\n    },\n    classes: 'custom-step',\n    buttons: [\n      {\n        text: '完成',\n        action: tour.complete, // 結束時記得完成\n      },\n    ],\n  },\n]);\n```\n\n### 執行安排好的步驟\n\n``` javascript\ntour.start();\n```\n\n### 移除指定步驟\n\n``` javascript\ntour.removeStep('步驟id');\n```\n\n### 註冊事件\n\n``` javascript\n// 這些為支援的事件complete、cancel、hide、show、start、active、inactive\n\n// 在安排的步驟完成之後，執行一些事件\ntour.on('complete', () => {\n  // 設定值進入localstorage中，用來辨別使用者已經閱讀過導引\n  localStorage.setItem('isGuide', '1');\n});\n```\n\n**以上為Shepherd.js的簡易介紹，希望可以幫助到一些需要做網頁導引的人！**","slug":"5","published":1,"updated":"2023-07-07T16:18:42.095Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clok3v80u000c1wva76z6b1s8","content":"<p><img src=\"/2022/02/06/5/cover.jpg\"></p>\n<p>我們在玩手機遊戲時，應該多少都有看過第一次遊玩時，一步一步教我們要點哪裡的那種導引功能吧！這次要來介紹的套件就是讓網頁能夠快速、簡易的加上這個功能的Shepherd.js套件！</p>\n<p><a href=\"https://6yuwei.com/diary-box/\">Demo專案(登入後查看效果)</a><br><a href=\"https://shepherdjs.dev/\">官方Demo</a></p>\n<span id=\"more\"></span>\n\n<h2 id=\"安裝\"><a href=\"#安裝\" class=\"headerlink\" title=\"安裝\"></a>安裝</h2><h3 id=\"NPM\"><a href=\"#NPM\" class=\"headerlink\" title=\"NPM\"></a>NPM</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install shepherd.<span class=\"property\">js</span> --save</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"CDN\"><a href=\"#CDN\" class=\"headerlink\" title=\"CDN\"></a>CDN</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;https://cdn.jsdelivr.net/npm/shepherd.js@5.0.1/dist/js/shepherd.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h2><h3 id=\"載入套件\"><a href=\"#載入套件\" class=\"headerlink\" title=\"載入套件\"></a>載入套件</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">Shepherd</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;shepherd.js&#x27;</span>;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"先實體化Shepherd套件\"><a href=\"#先實體化Shepherd套件\" class=\"headerlink\" title=\"先實體化Shepherd套件\"></a>先實體化Shepherd套件</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> tour = <span class=\"keyword\">new</span> <span class=\"title class_\">Shepherd</span>.<span class=\"title class_\">Tour</span>(&#123;</span><br><span class=\"line\">  <span class=\"attr\">useModalOverlay</span>: <span class=\"literal\">true</span>, <span class=\"comment\">// 背景黑幕</span></span><br><span class=\"line\">  <span class=\"comment\">// 預設步驟設定</span></span><br><span class=\"line\">  <span class=\"attr\">defaultStepOptions</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">classes</span>: <span class=\"string\">&#x27;shadow-md bg-purple-dark&#x27;</span>, <span class=\"comment\">// 使用的主題或加入自訂的class</span></span><br><span class=\"line\">    <span class=\"attr\">scrollTo</span>: <span class=\"literal\">true</span>, <span class=\"comment\">// 自動滾動到指定位置</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"開始建立導引步驟\"><a href=\"#開始建立導引步驟\" class=\"headerlink\" title=\"開始建立導引步驟\"></a>開始建立導引步驟</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tour.<span class=\"title function_\">addSteps</span>([</span><br><span class=\"line\">  <span class=\"comment\">// 步驟1</span></span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">id</span>: <span class=\"string\">&#x27;step-1&#x27;</span>, <span class=\"comment\">// 步驟id</span></span><br><span class=\"line\">    <span class=\"attr\">text</span>: <span class=\"string\">&#x27;這是你持有的日記幣，透過寫日記或記帳可以獲得日記幣喔！&#x27;</span>, <span class=\"comment\">// 步驟標題</span></span><br><span class=\"line\">    <span class=\"attr\">attachTo</span>: &#123;</span><br><span class=\"line\">      <span class=\"attr\">element</span>: <span class=\"string\">&#x27;.status&#x27;</span>, <span class=\"comment\">// 目標元素設定，使用css選擇器的方式填寫</span></span><br><span class=\"line\">      <span class=\"attr\">on</span>: <span class=\"string\">&#x27;auto&#x27;</span>, <span class=\"comment\">// 位置安排，支援這些值 &#x27;auto&#x27;, &#x27;auto-start&#x27;, &#x27;auto-end&#x27;, &#x27;top&#x27;, &#x27;top-start&#x27;, &#x27;top-end&#x27;, &#x27;bottom&#x27;, &#x27;bottom-start&#x27;, &#x27;bottom-end&#x27;, &#x27;right&#x27;, &#x27;right-start&#x27;, &#x27;right-end&#x27;, &#x27;left&#x27;, &#x27;left-start&#x27;, &#x27;left-end&#x27;</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">canClickTarget</span>: <span class=\"literal\">false</span>, <span class=\"comment\">// 是否可以點擊目標元素</span></span><br><span class=\"line\">    <span class=\"attr\">classes</span>: <span class=\"string\">&#x27;custom-step&#x27;</span>, <span class=\"comment\">// 為該步驟加入額外的class</span></span><br><span class=\"line\">    <span class=\"comment\">// 按鈕可以設定多組</span></span><br><span class=\"line\">    <span class=\"attr\">buttons</span>: [</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        <span class=\"attr\">text</span>: <span class=\"string\">&#x27;下一步&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">action</span>: tour.<span class=\"property\">next</span>, <span class=\"comment\">// 執行下一個動作</span></span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">    ],</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"comment\">// 步驟2</span></span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">id</span>: <span class=\"string\">&#x27;step-2&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">text</span>: <span class=\"string\">&#x27;點擊+號開始寫日記或記帳吧！&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">canClickTarget</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">    <span class=\"attr\">attachTo</span>: &#123;</span><br><span class=\"line\">      <span class=\"attr\">element</span>: <span class=\"string\">&#x27;#addBtn&#x27;</span>,</span><br><span class=\"line\">      <span class=\"attr\">on</span>: <span class=\"string\">&#x27;top&#x27;</span>,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">classes</span>: <span class=\"string\">&#x27;custom-step&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">buttons</span>: [</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        <span class=\"attr\">text</span>: <span class=\"string\">&#x27;完成&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">action</span>: tour.<span class=\"property\">complete</span>, <span class=\"comment\">// 結束時記得完成</span></span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">    ],</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">]);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"執行安排好的步驟\"><a href=\"#執行安排好的步驟\" class=\"headerlink\" title=\"執行安排好的步驟\"></a>執行安排好的步驟</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tour.<span class=\"title function_\">start</span>();</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"移除指定步驟\"><a href=\"#移除指定步驟\" class=\"headerlink\" title=\"移除指定步驟\"></a>移除指定步驟</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tour.<span class=\"title function_\">removeStep</span>(<span class=\"string\">&#x27;步驟id&#x27;</span>);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"註冊事件\"><a href=\"#註冊事件\" class=\"headerlink\" title=\"註冊事件\"></a>註冊事件</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 這些為支援的事件complete、cancel、hide、show、start、active、inactive</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 在安排的步驟完成之後，執行一些事件</span></span><br><span class=\"line\">tour.<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;complete&#x27;</span>, <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 設定值進入localstorage中，用來辨別使用者已經閱讀過導引</span></span><br><span class=\"line\">  <span class=\"variable language_\">localStorage</span>.<span class=\"title function_\">setItem</span>(<span class=\"string\">&#x27;isGuide&#x27;</span>, <span class=\"string\">&#x27;1&#x27;</span>);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p><strong>以上為Shepherd.js的簡易介紹，希望可以幫助到一些需要做網頁導引的人！</strong></p>\n","site":{"data":{}},"excerpt":"<p><img src=\"/2022/02/06/5/cover.jpg\"></p>\n<p>我們在玩手機遊戲時，應該多少都有看過第一次遊玩時，一步一步教我們要點哪裡的那種導引功能吧！這次要來介紹的套件就是讓網頁能夠快速、簡易的加上這個功能的Shepherd.js套件！</p>\n<p><a href=\"https://6yuwei.com/diary-box/\">Demo專案(登入後查看效果)</a><br><a href=\"https://shepherdjs.dev/\">官方Demo</a></p>","more":"<h2 id=\"安裝\"><a href=\"#安裝\" class=\"headerlink\" title=\"安裝\"></a>安裝</h2><h3 id=\"NPM\"><a href=\"#NPM\" class=\"headerlink\" title=\"NPM\"></a>NPM</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install shepherd.<span class=\"property\">js</span> --save</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"CDN\"><a href=\"#CDN\" class=\"headerlink\" title=\"CDN\"></a>CDN</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;https://cdn.jsdelivr.net/npm/shepherd.js@5.0.1/dist/js/shepherd.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h2><h3 id=\"載入套件\"><a href=\"#載入套件\" class=\"headerlink\" title=\"載入套件\"></a>載入套件</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">Shepherd</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;shepherd.js&#x27;</span>;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"先實體化Shepherd套件\"><a href=\"#先實體化Shepherd套件\" class=\"headerlink\" title=\"先實體化Shepherd套件\"></a>先實體化Shepherd套件</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> tour = <span class=\"keyword\">new</span> <span class=\"title class_\">Shepherd</span>.<span class=\"title class_\">Tour</span>(&#123;</span><br><span class=\"line\">  <span class=\"attr\">useModalOverlay</span>: <span class=\"literal\">true</span>, <span class=\"comment\">// 背景黑幕</span></span><br><span class=\"line\">  <span class=\"comment\">// 預設步驟設定</span></span><br><span class=\"line\">  <span class=\"attr\">defaultStepOptions</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">classes</span>: <span class=\"string\">&#x27;shadow-md bg-purple-dark&#x27;</span>, <span class=\"comment\">// 使用的主題或加入自訂的class</span></span><br><span class=\"line\">    <span class=\"attr\">scrollTo</span>: <span class=\"literal\">true</span>, <span class=\"comment\">// 自動滾動到指定位置</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"開始建立導引步驟\"><a href=\"#開始建立導引步驟\" class=\"headerlink\" title=\"開始建立導引步驟\"></a>開始建立導引步驟</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tour.<span class=\"title function_\">addSteps</span>([</span><br><span class=\"line\">  <span class=\"comment\">// 步驟1</span></span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">id</span>: <span class=\"string\">&#x27;step-1&#x27;</span>, <span class=\"comment\">// 步驟id</span></span><br><span class=\"line\">    <span class=\"attr\">text</span>: <span class=\"string\">&#x27;這是你持有的日記幣，透過寫日記或記帳可以獲得日記幣喔！&#x27;</span>, <span class=\"comment\">// 步驟標題</span></span><br><span class=\"line\">    <span class=\"attr\">attachTo</span>: &#123;</span><br><span class=\"line\">      <span class=\"attr\">element</span>: <span class=\"string\">&#x27;.status&#x27;</span>, <span class=\"comment\">// 目標元素設定，使用css選擇器的方式填寫</span></span><br><span class=\"line\">      <span class=\"attr\">on</span>: <span class=\"string\">&#x27;auto&#x27;</span>, <span class=\"comment\">// 位置安排，支援這些值 &#x27;auto&#x27;, &#x27;auto-start&#x27;, &#x27;auto-end&#x27;, &#x27;top&#x27;, &#x27;top-start&#x27;, &#x27;top-end&#x27;, &#x27;bottom&#x27;, &#x27;bottom-start&#x27;, &#x27;bottom-end&#x27;, &#x27;right&#x27;, &#x27;right-start&#x27;, &#x27;right-end&#x27;, &#x27;left&#x27;, &#x27;left-start&#x27;, &#x27;left-end&#x27;</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">canClickTarget</span>: <span class=\"literal\">false</span>, <span class=\"comment\">// 是否可以點擊目標元素</span></span><br><span class=\"line\">    <span class=\"attr\">classes</span>: <span class=\"string\">&#x27;custom-step&#x27;</span>, <span class=\"comment\">// 為該步驟加入額外的class</span></span><br><span class=\"line\">    <span class=\"comment\">// 按鈕可以設定多組</span></span><br><span class=\"line\">    <span class=\"attr\">buttons</span>: [</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        <span class=\"attr\">text</span>: <span class=\"string\">&#x27;下一步&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">action</span>: tour.<span class=\"property\">next</span>, <span class=\"comment\">// 執行下一個動作</span></span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">    ],</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"comment\">// 步驟2</span></span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">id</span>: <span class=\"string\">&#x27;step-2&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">text</span>: <span class=\"string\">&#x27;點擊+號開始寫日記或記帳吧！&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">canClickTarget</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">    <span class=\"attr\">attachTo</span>: &#123;</span><br><span class=\"line\">      <span class=\"attr\">element</span>: <span class=\"string\">&#x27;#addBtn&#x27;</span>,</span><br><span class=\"line\">      <span class=\"attr\">on</span>: <span class=\"string\">&#x27;top&#x27;</span>,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">classes</span>: <span class=\"string\">&#x27;custom-step&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">buttons</span>: [</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        <span class=\"attr\">text</span>: <span class=\"string\">&#x27;完成&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">action</span>: tour.<span class=\"property\">complete</span>, <span class=\"comment\">// 結束時記得完成</span></span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">    ],</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">]);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"執行安排好的步驟\"><a href=\"#執行安排好的步驟\" class=\"headerlink\" title=\"執行安排好的步驟\"></a>執行安排好的步驟</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tour.<span class=\"title function_\">start</span>();</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"移除指定步驟\"><a href=\"#移除指定步驟\" class=\"headerlink\" title=\"移除指定步驟\"></a>移除指定步驟</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tour.<span class=\"title function_\">removeStep</span>(<span class=\"string\">&#x27;步驟id&#x27;</span>);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"註冊事件\"><a href=\"#註冊事件\" class=\"headerlink\" title=\"註冊事件\"></a>註冊事件</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 這些為支援的事件complete、cancel、hide、show、start、active、inactive</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 在安排的步驟完成之後，執行一些事件</span></span><br><span class=\"line\">tour.<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;complete&#x27;</span>, <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 設定值進入localstorage中，用來辨別使用者已經閱讀過導引</span></span><br><span class=\"line\">  <span class=\"variable language_\">localStorage</span>.<span class=\"title function_\">setItem</span>(<span class=\"string\">&#x27;isGuide&#x27;</span>, <span class=\"string\">&#x27;1&#x27;</span>);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p><strong>以上為Shepherd.js的簡易介紹，希望可以幫助到一些需要做網頁導引的人！</strong></p>"},{"title":"在Three.js中使用tween.js做出流暢的動畫效果","date":"2022-03-01T15:50:27.000Z","_content":"\n![](cover.jpg)\n\n如果匯入到 Three.js 中的 3D 模型沒有包含動畫，又或者需要讓模型與使用者互動產生動畫效果的話，Three.js 中可以直接的操作模型的座標、位置、縮放等等，但是若要讓動畫效果更加生動流暢，則可以使用 tween.js 這個開源的動畫補間套件來達成！\n\n讓我們來看看這如何運作，首先，在 Three.js 中建立一個簡易的環境與模型\n\n<!-- more -->\n\n```javascript\n// 場景\nconst scene = new THREE.Scene();\n\n// 透視投影攝影機\nconst camera = new THREE.PerspectiveCamera(\n  75,\n  window.innerWidth / window.innerHeight,\n  0.1,\n  1000\n);\n\n// 渲染器\nconst renderer = new THREE.WebGLRenderer();\nrenderer.setSize(window.innerWidth, window.innerHeight);\ndocument.body.appendChild(renderer.domElement);\n\n// 正方體\nconst geometry = new THREE.BoxGeometry(1, 1, 1);\nconst material = new THREE.MeshBasicMaterial({ color: 0x28cb92 });\nconst cube = new THREE.Mesh(geometry, material);\nscene.add(cube);\n```\n\n接下來，我需要建立一段動畫函式，以及觸發動畫的事件\n\n```javascript\n// 鏡頭拉遠，讓模型出現\ncamera.position.z = 5;\n\n// 動畫函式60fps\nfunction animate() {\n  requestAnimationFrame(animate);\n  renderer.render(scene, camera);\n}\n\nanimate();\n\ndocument.body.addEventListener(\"click\", () => {});\n```\n\n接著，將 tween.js 置入，並且在點擊事件內寫入移動動畫\n\n```javascript\n// 動畫函式60fps\nfunction animate() {\n  requestAnimationFrame(animate);\n  TWEEN.update(); // tween.js動畫更新方法\n  renderer.render(scene, camera);\n}\n\nanimate();\n\ndocument.body.addEventListener(\"click\", () => {\n  // x軸正向移動10個單位\n  const tween = new TWEEN.Tween(cube.position)\n    .to({ x: 10 }, 1000) // 移動距離, 動畫時間\n    .easing(TWEEN.Easing.Quartic.In) // 動畫類型\n    .start();\n});\n```\n\n這樣一來，正方體的動畫就會使用動畫類型「TWEEN.Easing.Quartic.In」的方式去移動，讓動畫更加的生動！tween.js動畫的類型有非常多種可以選擇，也可以自訂動畫曲線，達成不同的動畫效果，詳細請參考[官方文件](https://github.com/tweenjs/tween.js/)。\n","source":"_posts/2022-03-01-1.md","raw":"---\ntitle: 在Three.js中使用tween.js做出流暢的動畫效果\ndate: 2022-03-01 23:50:27\ntags:\n  - Three.js\n  - tween.js\n---\n\n![](cover.jpg)\n\n如果匯入到 Three.js 中的 3D 模型沒有包含動畫，又或者需要讓模型與使用者互動產生動畫效果的話，Three.js 中可以直接的操作模型的座標、位置、縮放等等，但是若要讓動畫效果更加生動流暢，則可以使用 tween.js 這個開源的動畫補間套件來達成！\n\n讓我們來看看這如何運作，首先，在 Three.js 中建立一個簡易的環境與模型\n\n<!-- more -->\n\n```javascript\n// 場景\nconst scene = new THREE.Scene();\n\n// 透視投影攝影機\nconst camera = new THREE.PerspectiveCamera(\n  75,\n  window.innerWidth / window.innerHeight,\n  0.1,\n  1000\n);\n\n// 渲染器\nconst renderer = new THREE.WebGLRenderer();\nrenderer.setSize(window.innerWidth, window.innerHeight);\ndocument.body.appendChild(renderer.domElement);\n\n// 正方體\nconst geometry = new THREE.BoxGeometry(1, 1, 1);\nconst material = new THREE.MeshBasicMaterial({ color: 0x28cb92 });\nconst cube = new THREE.Mesh(geometry, material);\nscene.add(cube);\n```\n\n接下來，我需要建立一段動畫函式，以及觸發動畫的事件\n\n```javascript\n// 鏡頭拉遠，讓模型出現\ncamera.position.z = 5;\n\n// 動畫函式60fps\nfunction animate() {\n  requestAnimationFrame(animate);\n  renderer.render(scene, camera);\n}\n\nanimate();\n\ndocument.body.addEventListener(\"click\", () => {});\n```\n\n接著，將 tween.js 置入，並且在點擊事件內寫入移動動畫\n\n```javascript\n// 動畫函式60fps\nfunction animate() {\n  requestAnimationFrame(animate);\n  TWEEN.update(); // tween.js動畫更新方法\n  renderer.render(scene, camera);\n}\n\nanimate();\n\ndocument.body.addEventListener(\"click\", () => {\n  // x軸正向移動10個單位\n  const tween = new TWEEN.Tween(cube.position)\n    .to({ x: 10 }, 1000) // 移動距離, 動畫時間\n    .easing(TWEEN.Easing.Quartic.In) // 動畫類型\n    .start();\n});\n```\n\n這樣一來，正方體的動畫就會使用動畫類型「TWEEN.Easing.Quartic.In」的方式去移動，讓動畫更加的生動！tween.js動畫的類型有非常多種可以選擇，也可以自訂動畫曲線，達成不同的動畫效果，詳細請參考[官方文件](https://github.com/tweenjs/tween.js/)。\n","slug":"1","published":1,"updated":"2022-03-01T17:18:46.052Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clok3v80v000e1wva6po65sy0","content":"<p><img src=\"/2022/03/01/1/cover.jpg\"></p>\n<p>如果匯入到 Three.js 中的 3D 模型沒有包含動畫，又或者需要讓模型與使用者互動產生動畫效果的話，Three.js 中可以直接的操作模型的座標、位置、縮放等等，但是若要讓動畫效果更加生動流暢，則可以使用 tween.js 這個開源的動畫補間套件來達成！</p>\n<p>讓我們來看看這如何運作，首先，在 Three.js 中建立一個簡易的環境與模型</p>\n<span id=\"more\"></span>\n\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 場景</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> scene = <span class=\"keyword\">new</span> <span class=\"variable constant_\">THREE</span>.<span class=\"title class_\">Scene</span>();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 透視投影攝影機</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> camera = <span class=\"keyword\">new</span> <span class=\"variable constant_\">THREE</span>.<span class=\"title class_\">PerspectiveCamera</span>(</span><br><span class=\"line\">  <span class=\"number\">75</span>,</span><br><span class=\"line\">  <span class=\"variable language_\">window</span>.<span class=\"property\">innerWidth</span> / <span class=\"variable language_\">window</span>.<span class=\"property\">innerHeight</span>,</span><br><span class=\"line\">  <span class=\"number\">0.1</span>,</span><br><span class=\"line\">  <span class=\"number\">1000</span></span><br><span class=\"line\">);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 渲染器</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> renderer = <span class=\"keyword\">new</span> <span class=\"variable constant_\">THREE</span>.<span class=\"title class_\">WebGLRenderer</span>();</span><br><span class=\"line\">renderer.<span class=\"title function_\">setSize</span>(<span class=\"variable language_\">window</span>.<span class=\"property\">innerWidth</span>, <span class=\"variable language_\">window</span>.<span class=\"property\">innerHeight</span>);</span><br><span class=\"line\"><span class=\"variable language_\">document</span>.<span class=\"property\">body</span>.<span class=\"title function_\">appendChild</span>(renderer.<span class=\"property\">domElement</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 正方體</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> geometry = <span class=\"keyword\">new</span> <span class=\"variable constant_\">THREE</span>.<span class=\"title class_\">BoxGeometry</span>(<span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> material = <span class=\"keyword\">new</span> <span class=\"variable constant_\">THREE</span>.<span class=\"title class_\">MeshBasicMaterial</span>(&#123; <span class=\"attr\">color</span>: <span class=\"number\">0x28cb92</span> &#125;);</span><br><span class=\"line\"><span class=\"keyword\">const</span> cube = <span class=\"keyword\">new</span> <span class=\"variable constant_\">THREE</span>.<span class=\"title class_\">Mesh</span>(geometry, material);</span><br><span class=\"line\">scene.<span class=\"title function_\">add</span>(cube);</span><br></pre></td></tr></table></figure>\n\n<p>接下來，我需要建立一段動畫函式，以及觸發動畫的事件</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 鏡頭拉遠，讓模型出現</span></span><br><span class=\"line\">camera.<span class=\"property\">position</span>.<span class=\"property\">z</span> = <span class=\"number\">5</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 動畫函式60fps</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">animate</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"title function_\">requestAnimationFrame</span>(animate);</span><br><span class=\"line\">  renderer.<span class=\"title function_\">render</span>(scene, camera);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">animate</span>();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">document</span>.<span class=\"property\">body</span>.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&quot;click&quot;</span>, <span class=\"function\">() =&gt;</span> &#123;&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>接著，將 tween.js 置入，並且在點擊事件內寫入移動動畫</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 動畫函式60fps</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">animate</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"title function_\">requestAnimationFrame</span>(animate);</span><br><span class=\"line\">  <span class=\"variable constant_\">TWEEN</span>.<span class=\"title function_\">update</span>(); <span class=\"comment\">// tween.js動畫更新方法</span></span><br><span class=\"line\">  renderer.<span class=\"title function_\">render</span>(scene, camera);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">animate</span>();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">document</span>.<span class=\"property\">body</span>.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&quot;click&quot;</span>, <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">// x軸正向移動10個單位</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> tween = <span class=\"keyword\">new</span> <span class=\"variable constant_\">TWEEN</span>.<span class=\"title class_\">Tween</span>(cube.<span class=\"property\">position</span>)</span><br><span class=\"line\">    .<span class=\"title function_\">to</span>(&#123; <span class=\"attr\">x</span>: <span class=\"number\">10</span> &#125;, <span class=\"number\">1000</span>) <span class=\"comment\">// 移動距離, 動畫時間</span></span><br><span class=\"line\">    .<span class=\"title function_\">easing</span>(<span class=\"variable constant_\">TWEEN</span>.<span class=\"property\">Easing</span>.<span class=\"property\">Quartic</span>.<span class=\"property\">In</span>) <span class=\"comment\">// 動畫類型</span></span><br><span class=\"line\">    .<span class=\"title function_\">start</span>();</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>這樣一來，正方體的動畫就會使用動畫類型「TWEEN.Easing.Quartic.In」的方式去移動，讓動畫更加的生動！tween.js動畫的類型有非常多種可以選擇，也可以自訂動畫曲線，達成不同的動畫效果，詳細請參考<a href=\"https://github.com/tweenjs/tween.js/\">官方文件</a>。</p>\n","site":{"data":{}},"excerpt":"<p><img src=\"/2022/03/01/1/cover.jpg\"></p>\n<p>如果匯入到 Three.js 中的 3D 模型沒有包含動畫，又或者需要讓模型與使用者互動產生動畫效果的話，Three.js 中可以直接的操作模型的座標、位置、縮放等等，但是若要讓動畫效果更加生動流暢，則可以使用 tween.js 這個開源的動畫補間套件來達成！</p>\n<p>讓我們來看看這如何運作，首先，在 Three.js 中建立一個簡易的環境與模型</p>","more":"<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 場景</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> scene = <span class=\"keyword\">new</span> <span class=\"variable constant_\">THREE</span>.<span class=\"title class_\">Scene</span>();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 透視投影攝影機</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> camera = <span class=\"keyword\">new</span> <span class=\"variable constant_\">THREE</span>.<span class=\"title class_\">PerspectiveCamera</span>(</span><br><span class=\"line\">  <span class=\"number\">75</span>,</span><br><span class=\"line\">  <span class=\"variable language_\">window</span>.<span class=\"property\">innerWidth</span> / <span class=\"variable language_\">window</span>.<span class=\"property\">innerHeight</span>,</span><br><span class=\"line\">  <span class=\"number\">0.1</span>,</span><br><span class=\"line\">  <span class=\"number\">1000</span></span><br><span class=\"line\">);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 渲染器</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> renderer = <span class=\"keyword\">new</span> <span class=\"variable constant_\">THREE</span>.<span class=\"title class_\">WebGLRenderer</span>();</span><br><span class=\"line\">renderer.<span class=\"title function_\">setSize</span>(<span class=\"variable language_\">window</span>.<span class=\"property\">innerWidth</span>, <span class=\"variable language_\">window</span>.<span class=\"property\">innerHeight</span>);</span><br><span class=\"line\"><span class=\"variable language_\">document</span>.<span class=\"property\">body</span>.<span class=\"title function_\">appendChild</span>(renderer.<span class=\"property\">domElement</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 正方體</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> geometry = <span class=\"keyword\">new</span> <span class=\"variable constant_\">THREE</span>.<span class=\"title class_\">BoxGeometry</span>(<span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> material = <span class=\"keyword\">new</span> <span class=\"variable constant_\">THREE</span>.<span class=\"title class_\">MeshBasicMaterial</span>(&#123; <span class=\"attr\">color</span>: <span class=\"number\">0x28cb92</span> &#125;);</span><br><span class=\"line\"><span class=\"keyword\">const</span> cube = <span class=\"keyword\">new</span> <span class=\"variable constant_\">THREE</span>.<span class=\"title class_\">Mesh</span>(geometry, material);</span><br><span class=\"line\">scene.<span class=\"title function_\">add</span>(cube);</span><br></pre></td></tr></table></figure>\n\n<p>接下來，我需要建立一段動畫函式，以及觸發動畫的事件</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 鏡頭拉遠，讓模型出現</span></span><br><span class=\"line\">camera.<span class=\"property\">position</span>.<span class=\"property\">z</span> = <span class=\"number\">5</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 動畫函式60fps</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">animate</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"title function_\">requestAnimationFrame</span>(animate);</span><br><span class=\"line\">  renderer.<span class=\"title function_\">render</span>(scene, camera);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">animate</span>();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">document</span>.<span class=\"property\">body</span>.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&quot;click&quot;</span>, <span class=\"function\">() =&gt;</span> &#123;&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>接著，將 tween.js 置入，並且在點擊事件內寫入移動動畫</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 動畫函式60fps</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">animate</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"title function_\">requestAnimationFrame</span>(animate);</span><br><span class=\"line\">  <span class=\"variable constant_\">TWEEN</span>.<span class=\"title function_\">update</span>(); <span class=\"comment\">// tween.js動畫更新方法</span></span><br><span class=\"line\">  renderer.<span class=\"title function_\">render</span>(scene, camera);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">animate</span>();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">document</span>.<span class=\"property\">body</span>.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&quot;click&quot;</span>, <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">// x軸正向移動10個單位</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> tween = <span class=\"keyword\">new</span> <span class=\"variable constant_\">TWEEN</span>.<span class=\"title class_\">Tween</span>(cube.<span class=\"property\">position</span>)</span><br><span class=\"line\">    .<span class=\"title function_\">to</span>(&#123; <span class=\"attr\">x</span>: <span class=\"number\">10</span> &#125;, <span class=\"number\">1000</span>) <span class=\"comment\">// 移動距離, 動畫時間</span></span><br><span class=\"line\">    .<span class=\"title function_\">easing</span>(<span class=\"variable constant_\">TWEEN</span>.<span class=\"property\">Easing</span>.<span class=\"property\">Quartic</span>.<span class=\"property\">In</span>) <span class=\"comment\">// 動畫類型</span></span><br><span class=\"line\">    .<span class=\"title function_\">start</span>();</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>這樣一來，正方體的動畫就會使用動畫類型「TWEEN.Easing.Quartic.In」的方式去移動，讓動畫更加的生動！tween.js動畫的類型有非常多種可以選擇，也可以自訂動畫曲線，達成不同的動畫效果，詳細請參考<a href=\"https://github.com/tweenjs/tween.js/\">官方文件</a>。</p>"},{"title":"網頁相關日文用語","date":"2022-03-02T13:40:50.000Z","_content":"\n![](cover.jpg)\n\n身為一名對學習日文很有興趣的網頁前端工程師，總會想要了解一些相關技術的日文，於是就寫了這樣一篇文章來整理網頁的日文用語！\n\n<!-- more -->\n\n## 職稱\n\n<div class=\"tableWrap\">\n\n| 中文       | 英文               | 日文                     | 朗讀                                                                                     |\n| ---------- | ------------------ | ------------------------ | ---------------------------------------------------------------------------------------- |\n| 前端工程師 | Front end engineer | フロントエンドエンジニア | <span class=\"material-icons speak\" data-text=\"フロントエンドエンジニア\">volume_up</span> |\n| 後端工程師 | Back end engineer  | バックエンドエンジニア   | <span class=\"material-icons speak\" data-text=\"バックエンドエンジニア\">volume_up</span>   |\n| 網頁工程師 | web engineer       | Webエンジニア            | <span class=\"material-icons speak\" data-text=\"Webエンジニア\">volume_up</span>            |\n\n</div>\n\n## 技術\n\n<div class=\"tableWrap\">\n\n| 中文 | 英文       | 日文             | 朗讀                                                                             |\n| ---- | ---------- | ---------------- | -------------------------------------------------------------------------------- |\n| x    | React      | リアクト         | <span class=\"material-icons speak\" data-text=\"リアクト\">volume_up</span>         |\n| x    | JavaScript | ジャバスクリプト | <span class=\"material-icons speak\" data-text=\"ジャバスクリプト\">volume_up</span> |\n| x    | TypeScript | タイプスクリプト | <span class=\"material-icons speak\" data-text=\"タイプスクリプト\">volume_up</span> |\n\n</div>\n\n## 常用\n\n<div class=\"tableWrap\">\n\n| 中文       | 英文      | 日文           | 朗讀                                                                           |\n| ---------- | --------- | -------------- | ------------------------------------------------------------------------------ |\n| 框架       | framework | フレームワーク | <span class=\"material-icons speak\" data-text=\"フレームワーク\">volume_up</span> |\n| 元件、組件 | component | コンポーネント | <span class=\"material-icons speak\" data-text=\"コンポーネント\">volume_up</span> |\n| 參數 | argument | 引数 | <span class=\"material-icons speak\" data-text=\"引数\">volume_up</span> |\n| 函數 | function | 関数 | <span class=\"material-icons speak\" data-text=\"関数\">volume_up</span> |\n| 非同步 | asynchronous | 非同期 | <span class=\"material-icons speak\" data-text=\"非同期\">volume_up</span> |\n| 網頁 | website | ウェブサイト | <span class=\"material-icons speak\" data-text=\"ウェブサイト\">volume_up</span> |\n| 回傳值 | return value | 返す値 | <span class=\"material-icons speak\" data-text=\"返す値\">volume_up</span> |\n| 回呼 | callback | コールバック | <span class=\"material-icons speak\" data-text=\"コールバック\">volume_up</span> |\n| 變數 | variable | 変数 | <span class=\"material-icons speak\" data-text=\"変数\">volume_up</span> |\n\n</div>\n\n## 網頁類型\n\n<div class=\"tableWrap\">\n\n| 中文       | 英文      | 日文           | 朗讀                                                                           |\n| ---------- | --------- | -------------- | ------------------------------------------------------------------------------ |\n| 網頁應用程式 | web application | Webアプリケーション | <span class=\"material-icons speak\" data-text=\"Webアプリケーション\">volume_up</span> |\n| 電子商務網站 | E-Commerce Website | Eコマースサイト | <span class=\"material-icons speak\" data-text=\"Eコマースサイト\">volume_up</span> |\n\n</div>\n","source":"_posts/2022-03-02-1.md","raw":"---\ntitle: 網頁相關日文用語\ndate: 2022-03-02 21:40:50\ntags:\n  - Japanese\n  - front end\n---\n\n![](cover.jpg)\n\n身為一名對學習日文很有興趣的網頁前端工程師，總會想要了解一些相關技術的日文，於是就寫了這樣一篇文章來整理網頁的日文用語！\n\n<!-- more -->\n\n## 職稱\n\n<div class=\"tableWrap\">\n\n| 中文       | 英文               | 日文                     | 朗讀                                                                                     |\n| ---------- | ------------------ | ------------------------ | ---------------------------------------------------------------------------------------- |\n| 前端工程師 | Front end engineer | フロントエンドエンジニア | <span class=\"material-icons speak\" data-text=\"フロントエンドエンジニア\">volume_up</span> |\n| 後端工程師 | Back end engineer  | バックエンドエンジニア   | <span class=\"material-icons speak\" data-text=\"バックエンドエンジニア\">volume_up</span>   |\n| 網頁工程師 | web engineer       | Webエンジニア            | <span class=\"material-icons speak\" data-text=\"Webエンジニア\">volume_up</span>            |\n\n</div>\n\n## 技術\n\n<div class=\"tableWrap\">\n\n| 中文 | 英文       | 日文             | 朗讀                                                                             |\n| ---- | ---------- | ---------------- | -------------------------------------------------------------------------------- |\n| x    | React      | リアクト         | <span class=\"material-icons speak\" data-text=\"リアクト\">volume_up</span>         |\n| x    | JavaScript | ジャバスクリプト | <span class=\"material-icons speak\" data-text=\"ジャバスクリプト\">volume_up</span> |\n| x    | TypeScript | タイプスクリプト | <span class=\"material-icons speak\" data-text=\"タイプスクリプト\">volume_up</span> |\n\n</div>\n\n## 常用\n\n<div class=\"tableWrap\">\n\n| 中文       | 英文      | 日文           | 朗讀                                                                           |\n| ---------- | --------- | -------------- | ------------------------------------------------------------------------------ |\n| 框架       | framework | フレームワーク | <span class=\"material-icons speak\" data-text=\"フレームワーク\">volume_up</span> |\n| 元件、組件 | component | コンポーネント | <span class=\"material-icons speak\" data-text=\"コンポーネント\">volume_up</span> |\n| 參數 | argument | 引数 | <span class=\"material-icons speak\" data-text=\"引数\">volume_up</span> |\n| 函數 | function | 関数 | <span class=\"material-icons speak\" data-text=\"関数\">volume_up</span> |\n| 非同步 | asynchronous | 非同期 | <span class=\"material-icons speak\" data-text=\"非同期\">volume_up</span> |\n| 網頁 | website | ウェブサイト | <span class=\"material-icons speak\" data-text=\"ウェブサイト\">volume_up</span> |\n| 回傳值 | return value | 返す値 | <span class=\"material-icons speak\" data-text=\"返す値\">volume_up</span> |\n| 回呼 | callback | コールバック | <span class=\"material-icons speak\" data-text=\"コールバック\">volume_up</span> |\n| 變數 | variable | 変数 | <span class=\"material-icons speak\" data-text=\"変数\">volume_up</span> |\n\n</div>\n\n## 網頁類型\n\n<div class=\"tableWrap\">\n\n| 中文       | 英文      | 日文           | 朗讀                                                                           |\n| ---------- | --------- | -------------- | ------------------------------------------------------------------------------ |\n| 網頁應用程式 | web application | Webアプリケーション | <span class=\"material-icons speak\" data-text=\"Webアプリケーション\">volume_up</span> |\n| 電子商務網站 | E-Commerce Website | Eコマースサイト | <span class=\"material-icons speak\" data-text=\"Eコマースサイト\">volume_up</span> |\n\n</div>\n","slug":"1","published":1,"updated":"2022-03-08T16:11:25.725Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clok3v80v000f1wva7t4w0oqj","content":"<p><img src=\"/2022/03/02/1/cover.jpg\"></p>\n<p>身為一名對學習日文很有興趣的網頁前端工程師，總會想要了解一些相關技術的日文，於是就寫了這樣一篇文章來整理網頁的日文用語！</p>\n<span id=\"more\"></span>\n\n<h2 id=\"職稱\"><a href=\"#職稱\" class=\"headerlink\" title=\"職稱\"></a>職稱</h2><div class=\"tableWrap\">\n\n<table>\n<thead>\n<tr>\n<th>中文</th>\n<th>英文</th>\n<th>日文</th>\n<th>朗讀</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>前端工程師</td>\n<td>Front end engineer</td>\n<td>フロントエンドエンジニア</td>\n<td><span class=\"material-icons speak\" data-text=\"フロントエンドエンジニア\">volume_up</span></td>\n</tr>\n<tr>\n<td>後端工程師</td>\n<td>Back end engineer</td>\n<td>バックエンドエンジニア</td>\n<td><span class=\"material-icons speak\" data-text=\"バックエンドエンジニア\">volume_up</span></td>\n</tr>\n<tr>\n<td>網頁工程師</td>\n<td>web engineer</td>\n<td>Webエンジニア</td>\n<td><span class=\"material-icons speak\" data-text=\"Webエンジニア\">volume_up</span></td>\n</tr>\n</tbody></table>\n</div>\n\n<h2 id=\"技術\"><a href=\"#技術\" class=\"headerlink\" title=\"技術\"></a>技術</h2><div class=\"tableWrap\">\n\n<table>\n<thead>\n<tr>\n<th>中文</th>\n<th>英文</th>\n<th>日文</th>\n<th>朗讀</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>x</td>\n<td>React</td>\n<td>リアクト</td>\n<td><span class=\"material-icons speak\" data-text=\"リアクト\">volume_up</span></td>\n</tr>\n<tr>\n<td>x</td>\n<td>JavaScript</td>\n<td>ジャバスクリプト</td>\n<td><span class=\"material-icons speak\" data-text=\"ジャバスクリプト\">volume_up</span></td>\n</tr>\n<tr>\n<td>x</td>\n<td>TypeScript</td>\n<td>タイプスクリプト</td>\n<td><span class=\"material-icons speak\" data-text=\"タイプスクリプト\">volume_up</span></td>\n</tr>\n</tbody></table>\n</div>\n\n<h2 id=\"常用\"><a href=\"#常用\" class=\"headerlink\" title=\"常用\"></a>常用</h2><div class=\"tableWrap\">\n\n<table>\n<thead>\n<tr>\n<th>中文</th>\n<th>英文</th>\n<th>日文</th>\n<th>朗讀</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>框架</td>\n<td>framework</td>\n<td>フレームワーク</td>\n<td><span class=\"material-icons speak\" data-text=\"フレームワーク\">volume_up</span></td>\n</tr>\n<tr>\n<td>元件、組件</td>\n<td>component</td>\n<td>コンポーネント</td>\n<td><span class=\"material-icons speak\" data-text=\"コンポーネント\">volume_up</span></td>\n</tr>\n<tr>\n<td>參數</td>\n<td>argument</td>\n<td>引数</td>\n<td><span class=\"material-icons speak\" data-text=\"引数\">volume_up</span></td>\n</tr>\n<tr>\n<td>函數</td>\n<td>function</td>\n<td>関数</td>\n<td><span class=\"material-icons speak\" data-text=\"関数\">volume_up</span></td>\n</tr>\n<tr>\n<td>非同步</td>\n<td>asynchronous</td>\n<td>非同期</td>\n<td><span class=\"material-icons speak\" data-text=\"非同期\">volume_up</span></td>\n</tr>\n<tr>\n<td>網頁</td>\n<td>website</td>\n<td>ウェブサイト</td>\n<td><span class=\"material-icons speak\" data-text=\"ウェブサイト\">volume_up</span></td>\n</tr>\n<tr>\n<td>回傳值</td>\n<td>return value</td>\n<td>返す値</td>\n<td><span class=\"material-icons speak\" data-text=\"返す値\">volume_up</span></td>\n</tr>\n<tr>\n<td>回呼</td>\n<td>callback</td>\n<td>コールバック</td>\n<td><span class=\"material-icons speak\" data-text=\"コールバック\">volume_up</span></td>\n</tr>\n<tr>\n<td>變數</td>\n<td>variable</td>\n<td>変数</td>\n<td><span class=\"material-icons speak\" data-text=\"変数\">volume_up</span></td>\n</tr>\n</tbody></table>\n</div>\n\n<h2 id=\"網頁類型\"><a href=\"#網頁類型\" class=\"headerlink\" title=\"網頁類型\"></a>網頁類型</h2><div class=\"tableWrap\">\n\n<table>\n<thead>\n<tr>\n<th>中文</th>\n<th>英文</th>\n<th>日文</th>\n<th>朗讀</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>網頁應用程式</td>\n<td>web application</td>\n<td>Webアプリケーション</td>\n<td><span class=\"material-icons speak\" data-text=\"Webアプリケーション\">volume_up</span></td>\n</tr>\n<tr>\n<td>電子商務網站</td>\n<td>E-Commerce Website</td>\n<td>Eコマースサイト</td>\n<td><span class=\"material-icons speak\" data-text=\"Eコマースサイト\">volume_up</span></td>\n</tr>\n</tbody></table>\n</div>\n","site":{"data":{}},"excerpt":"<p><img src=\"/2022/03/02/1/cover.jpg\"></p>\n<p>身為一名對學習日文很有興趣的網頁前端工程師，總會想要了解一些相關技術的日文，於是就寫了這樣一篇文章來整理網頁的日文用語！</p>","more":"<h2 id=\"職稱\"><a href=\"#職稱\" class=\"headerlink\" title=\"職稱\"></a>職稱</h2><div class=\"tableWrap\">\n\n<table>\n<thead>\n<tr>\n<th>中文</th>\n<th>英文</th>\n<th>日文</th>\n<th>朗讀</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>前端工程師</td>\n<td>Front end engineer</td>\n<td>フロントエンドエンジニア</td>\n<td><span class=\"material-icons speak\" data-text=\"フロントエンドエンジニア\">volume_up</span></td>\n</tr>\n<tr>\n<td>後端工程師</td>\n<td>Back end engineer</td>\n<td>バックエンドエンジニア</td>\n<td><span class=\"material-icons speak\" data-text=\"バックエンドエンジニア\">volume_up</span></td>\n</tr>\n<tr>\n<td>網頁工程師</td>\n<td>web engineer</td>\n<td>Webエンジニア</td>\n<td><span class=\"material-icons speak\" data-text=\"Webエンジニア\">volume_up</span></td>\n</tr>\n</tbody></table>\n</div>\n\n<h2 id=\"技術\"><a href=\"#技術\" class=\"headerlink\" title=\"技術\"></a>技術</h2><div class=\"tableWrap\">\n\n<table>\n<thead>\n<tr>\n<th>中文</th>\n<th>英文</th>\n<th>日文</th>\n<th>朗讀</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>x</td>\n<td>React</td>\n<td>リアクト</td>\n<td><span class=\"material-icons speak\" data-text=\"リアクト\">volume_up</span></td>\n</tr>\n<tr>\n<td>x</td>\n<td>JavaScript</td>\n<td>ジャバスクリプト</td>\n<td><span class=\"material-icons speak\" data-text=\"ジャバスクリプト\">volume_up</span></td>\n</tr>\n<tr>\n<td>x</td>\n<td>TypeScript</td>\n<td>タイプスクリプト</td>\n<td><span class=\"material-icons speak\" data-text=\"タイプスクリプト\">volume_up</span></td>\n</tr>\n</tbody></table>\n</div>\n\n<h2 id=\"常用\"><a href=\"#常用\" class=\"headerlink\" title=\"常用\"></a>常用</h2><div class=\"tableWrap\">\n\n<table>\n<thead>\n<tr>\n<th>中文</th>\n<th>英文</th>\n<th>日文</th>\n<th>朗讀</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>框架</td>\n<td>framework</td>\n<td>フレームワーク</td>\n<td><span class=\"material-icons speak\" data-text=\"フレームワーク\">volume_up</span></td>\n</tr>\n<tr>\n<td>元件、組件</td>\n<td>component</td>\n<td>コンポーネント</td>\n<td><span class=\"material-icons speak\" data-text=\"コンポーネント\">volume_up</span></td>\n</tr>\n<tr>\n<td>參數</td>\n<td>argument</td>\n<td>引数</td>\n<td><span class=\"material-icons speak\" data-text=\"引数\">volume_up</span></td>\n</tr>\n<tr>\n<td>函數</td>\n<td>function</td>\n<td>関数</td>\n<td><span class=\"material-icons speak\" data-text=\"関数\">volume_up</span></td>\n</tr>\n<tr>\n<td>非同步</td>\n<td>asynchronous</td>\n<td>非同期</td>\n<td><span class=\"material-icons speak\" data-text=\"非同期\">volume_up</span></td>\n</tr>\n<tr>\n<td>網頁</td>\n<td>website</td>\n<td>ウェブサイト</td>\n<td><span class=\"material-icons speak\" data-text=\"ウェブサイト\">volume_up</span></td>\n</tr>\n<tr>\n<td>回傳值</td>\n<td>return value</td>\n<td>返す値</td>\n<td><span class=\"material-icons speak\" data-text=\"返す値\">volume_up</span></td>\n</tr>\n<tr>\n<td>回呼</td>\n<td>callback</td>\n<td>コールバック</td>\n<td><span class=\"material-icons speak\" data-text=\"コールバック\">volume_up</span></td>\n</tr>\n<tr>\n<td>變數</td>\n<td>variable</td>\n<td>変数</td>\n<td><span class=\"material-icons speak\" data-text=\"変数\">volume_up</span></td>\n</tr>\n</tbody></table>\n</div>\n\n<h2 id=\"網頁類型\"><a href=\"#網頁類型\" class=\"headerlink\" title=\"網頁類型\"></a>網頁類型</h2><div class=\"tableWrap\">\n\n<table>\n<thead>\n<tr>\n<th>中文</th>\n<th>英文</th>\n<th>日文</th>\n<th>朗讀</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>網頁應用程式</td>\n<td>web application</td>\n<td>Webアプリケーション</td>\n<td><span class=\"material-icons speak\" data-text=\"Webアプリケーション\">volume_up</span></td>\n</tr>\n<tr>\n<td>電子商務網站</td>\n<td>E-Commerce Website</td>\n<td>Eコマースサイト</td>\n<td><span class=\"material-icons speak\" data-text=\"Eコマースサイト\">volume_up</span></td>\n</tr>\n</tbody></table>\n</div>"},{"title":"Google Map Marker Clustering的使用方式與自訂標記","date":"2022-03-14T15:31:46.000Z","_content":"\n![](cover.jpg)\n\nGoogle Map Marker Clustering是Google Map API的延伸套件，讓Google Map的標記在數量多的情況下，自動收合，簡化顯示，避免畫面雜亂，增加使用者體驗。\n\n<!-- more -->\n\n[效果DEMO](https://6yuwei.com/map_test/)\n\n## 安裝\n\n### npm\n``` javascript\nnpm i @googlemaps/markerclusterer\n```\n\n### CDN\n\n``` javascript\n<script src=\"https://unpkg.com/@googlemaps/markerclusterer/dist/index.min.js\"></script>\n```\n\n### TypeScript 型別資料\n\n``` javascript\nnpm i -D @types/google.maps\n```\n\n## 引入\n\n### 模組\n\n``` javascript\nimport { MarkerClusterer } from \"@googlemaps/markerclusterer\";\n\n/* map 是google map的實體，\n如 const map = new google.maps.Map(document.getElementById(\"map\"), {zoom: 4,center: uluru}); */\n\n/* markers 是所有的標記陣列，\n如 [const marker = new google.maps.Marker({ lat: 25.0335796, lng: 121.5618487 });] */\n\n/* algorithm 是演算法，可以到這裡\nhttps://googlemaps.github.io/js-markerclusterer/public/algorithms/\n尋找合適的算法\n如 new markerClusterer.GridAlgorithm({})\n*/\nconst markerCluster = new MarkerClusterer({ map, markers, algorithm });\n```\n\n### CDN\n\n``` javascript\nconst markerCluster = new markerClusterer.MarkerClusterer({ map, markers });\n```\n\n## 自訂標記\n``` javascript\n\n// 在renderer中自訂渲染器\nconst markerCluster = new MarkerClusterer({ map, markers, algorithm, renderer: {\n  render({ count, position }, stats) {\n        // 圖標顏色\n        const color = \"#000\";\n        // 將svg轉換成base64，可自行更換圖檔\n        const svg = window.btoa(`\n          <svg fill=\"${color}\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 240 240\">\n            <circle cx=\"120\" cy=\"120\" opacity=\".6\" r=\"70\" />\n            <circle cx=\"120\" cy=\"120\" opacity=\".3\" r=\"90\" />\n            <circle cx=\"120\" cy=\"120\" opacity=\".2\" r=\"110\" />\n          </svg>\n        `);\n        return new google.maps.Marker({\n            position,\n            icon: {\n                url: `data:image/svg+xml;base64,${svg}`,\n                scaledSize: new google.maps.Size(50, 50),\n            },\n            // 文字樣式\n            label: {\n                text: String(count),\n                color: \"rgba(255,255,255,1)\",\n                fontSize: \"12px\",\n            },\n            title: `Cluster of ${count} markers`,\n            // 圖層順序設定\n            zIndex: Number(google.maps.Marker.MAX_ZINDEX) + count,\n        });\n  }\n}});\n```\n\n在這裡快速介紹一些基本的使用方式給大家，若需要更多的自訂功能請參考[官方文件](https://googlemaps.github.io/js-markerclusterer/index.html)","source":"_posts/2022-03-14-1.md","raw":"---\ntitle: Google Map Marker Clustering的使用方式與自訂標記\ndate: 2022-03-14 23:31:46\ntags: \n- Google Map\n- JavaScript\n---\n\n![](cover.jpg)\n\nGoogle Map Marker Clustering是Google Map API的延伸套件，讓Google Map的標記在數量多的情況下，自動收合，簡化顯示，避免畫面雜亂，增加使用者體驗。\n\n<!-- more -->\n\n[效果DEMO](https://6yuwei.com/map_test/)\n\n## 安裝\n\n### npm\n``` javascript\nnpm i @googlemaps/markerclusterer\n```\n\n### CDN\n\n``` javascript\n<script src=\"https://unpkg.com/@googlemaps/markerclusterer/dist/index.min.js\"></script>\n```\n\n### TypeScript 型別資料\n\n``` javascript\nnpm i -D @types/google.maps\n```\n\n## 引入\n\n### 模組\n\n``` javascript\nimport { MarkerClusterer } from \"@googlemaps/markerclusterer\";\n\n/* map 是google map的實體，\n如 const map = new google.maps.Map(document.getElementById(\"map\"), {zoom: 4,center: uluru}); */\n\n/* markers 是所有的標記陣列，\n如 [const marker = new google.maps.Marker({ lat: 25.0335796, lng: 121.5618487 });] */\n\n/* algorithm 是演算法，可以到這裡\nhttps://googlemaps.github.io/js-markerclusterer/public/algorithms/\n尋找合適的算法\n如 new markerClusterer.GridAlgorithm({})\n*/\nconst markerCluster = new MarkerClusterer({ map, markers, algorithm });\n```\n\n### CDN\n\n``` javascript\nconst markerCluster = new markerClusterer.MarkerClusterer({ map, markers });\n```\n\n## 自訂標記\n``` javascript\n\n// 在renderer中自訂渲染器\nconst markerCluster = new MarkerClusterer({ map, markers, algorithm, renderer: {\n  render({ count, position }, stats) {\n        // 圖標顏色\n        const color = \"#000\";\n        // 將svg轉換成base64，可自行更換圖檔\n        const svg = window.btoa(`\n          <svg fill=\"${color}\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 240 240\">\n            <circle cx=\"120\" cy=\"120\" opacity=\".6\" r=\"70\" />\n            <circle cx=\"120\" cy=\"120\" opacity=\".3\" r=\"90\" />\n            <circle cx=\"120\" cy=\"120\" opacity=\".2\" r=\"110\" />\n          </svg>\n        `);\n        return new google.maps.Marker({\n            position,\n            icon: {\n                url: `data:image/svg+xml;base64,${svg}`,\n                scaledSize: new google.maps.Size(50, 50),\n            },\n            // 文字樣式\n            label: {\n                text: String(count),\n                color: \"rgba(255,255,255,1)\",\n                fontSize: \"12px\",\n            },\n            title: `Cluster of ${count} markers`,\n            // 圖層順序設定\n            zIndex: Number(google.maps.Marker.MAX_ZINDEX) + count,\n        });\n  }\n}});\n```\n\n在這裡快速介紹一些基本的使用方式給大家，若需要更多的自訂功能請參考[官方文件](https://googlemaps.github.io/js-markerclusterer/index.html)","slug":"1","published":1,"updated":"2023-07-07T16:18:47.175Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clok3v80w000h1wvabvgefdxy","content":"<p><img src=\"/2022/03/14/1/cover.jpg\"></p>\n<p>Google Map Marker Clustering是Google Map API的延伸套件，讓Google Map的標記在數量多的情況下，自動收合，簡化顯示，避免畫面雜亂，增加使用者體驗。</p>\n<span id=\"more\"></span>\n\n<p><a href=\"https://6yuwei.com/map_test/\">效果DEMO</a></p>\n<h2 id=\"安裝\"><a href=\"#安裝\" class=\"headerlink\" title=\"安裝\"></a>安裝</h2><h3 id=\"npm\"><a href=\"#npm\" class=\"headerlink\" title=\"npm\"></a>npm</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i @googlemaps/markerclusterer</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"CDN\"><a href=\"#CDN\" class=\"headerlink\" title=\"CDN\"></a>CDN</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script src=<span class=\"string\">&quot;https://unpkg.com/@googlemaps/markerclusterer/dist/index.min.js&quot;</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"TypeScript-型別資料\"><a href=\"#TypeScript-型別資料\" class=\"headerlink\" title=\"TypeScript 型別資料\"></a>TypeScript 型別資料</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i -D @types/google.<span class=\"property\">maps</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"引入\"><a href=\"#引入\" class=\"headerlink\" title=\"引入\"></a>引入</h2><h3 id=\"模組\"><a href=\"#模組\" class=\"headerlink\" title=\"模組\"></a>模組</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; <span class=\"title class_\">MarkerClusterer</span> &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;@googlemaps/markerclusterer&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* map 是google map的實體，</span></span><br><span class=\"line\"><span class=\"comment\">如 const map = new google.maps.Map(document.getElementById(&quot;map&quot;), &#123;zoom: 4,center: uluru&#125;); */</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* markers 是所有的標記陣列，</span></span><br><span class=\"line\"><span class=\"comment\">如 [const marker = new google.maps.Marker(&#123; lat: 25.0335796, lng: 121.5618487 &#125;);] */</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* algorithm 是演算法，可以到這裡</span></span><br><span class=\"line\"><span class=\"comment\">https://googlemaps.github.io/js-markerclusterer/public/algorithms/</span></span><br><span class=\"line\"><span class=\"comment\">尋找合適的算法</span></span><br><span class=\"line\"><span class=\"comment\">如 new markerClusterer.GridAlgorithm(&#123;&#125;)</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> markerCluster = <span class=\"keyword\">new</span> <span class=\"title class_\">MarkerClusterer</span>(&#123; map, markers, algorithm &#125;);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"CDN-1\"><a href=\"#CDN-1\" class=\"headerlink\" title=\"CDN\"></a>CDN</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> markerCluster = <span class=\"keyword\">new</span> markerClusterer.<span class=\"title class_\">MarkerClusterer</span>(&#123; map, markers &#125;);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"自訂標記\"><a href=\"#自訂標記\" class=\"headerlink\" title=\"自訂標記\"></a>自訂標記</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 在renderer中自訂渲染器</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> markerCluster = <span class=\"keyword\">new</span> <span class=\"title class_\">MarkerClusterer</span>(&#123; map, markers, algorithm, <span class=\"attr\">renderer</span>: &#123;</span><br><span class=\"line\">  <span class=\"title function_\">render</span>(<span class=\"params\">&#123; count, position &#125;, stats</span>) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 圖標顏色</span></span><br><span class=\"line\">        <span class=\"keyword\">const</span> color = <span class=\"string\">&quot;#000&quot;</span>;</span><br><span class=\"line\">        <span class=\"comment\">// 將svg轉換成base64，可自行更換圖檔</span></span><br><span class=\"line\">        <span class=\"keyword\">const</span> svg = <span class=\"variable language_\">window</span>.<span class=\"title function_\">btoa</span>(<span class=\"string\">`</span></span><br><span class=\"line\"><span class=\"string\">          &lt;svg fill=&quot;<span class=\"subst\">$&#123;color&#125;</span>&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot; viewBox=&quot;0 0 240 240&quot;&gt;</span></span><br><span class=\"line\"><span class=\"string\">            &lt;circle cx=&quot;120&quot; cy=&quot;120&quot; opacity=&quot;.6&quot; r=&quot;70&quot; /&gt;</span></span><br><span class=\"line\"><span class=\"string\">            &lt;circle cx=&quot;120&quot; cy=&quot;120&quot; opacity=&quot;.3&quot; r=&quot;90&quot; /&gt;</span></span><br><span class=\"line\"><span class=\"string\">            &lt;circle cx=&quot;120&quot; cy=&quot;120&quot; opacity=&quot;.2&quot; r=&quot;110&quot; /&gt;</span></span><br><span class=\"line\"><span class=\"string\">          &lt;/svg&gt;</span></span><br><span class=\"line\"><span class=\"string\">        `</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> google.<span class=\"property\">maps</span>.<span class=\"title class_\">Marker</span>(&#123;</span><br><span class=\"line\">            position,</span><br><span class=\"line\">            <span class=\"attr\">icon</span>: &#123;</span><br><span class=\"line\">                <span class=\"attr\">url</span>: <span class=\"string\">`data:image/svg+xml;base64,<span class=\"subst\">$&#123;svg&#125;</span>`</span>,</span><br><span class=\"line\">                <span class=\"attr\">scaledSize</span>: <span class=\"keyword\">new</span> google.<span class=\"property\">maps</span>.<span class=\"title class_\">Size</span>(<span class=\"number\">50</span>, <span class=\"number\">50</span>),</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            <span class=\"comment\">// 文字樣式</span></span><br><span class=\"line\">            <span class=\"attr\">label</span>: &#123;</span><br><span class=\"line\">                <span class=\"attr\">text</span>: <span class=\"title class_\">String</span>(count),</span><br><span class=\"line\">                <span class=\"attr\">color</span>: <span class=\"string\">&quot;rgba(255,255,255,1)&quot;</span>,</span><br><span class=\"line\">                <span class=\"attr\">fontSize</span>: <span class=\"string\">&quot;12px&quot;</span>,</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            <span class=\"attr\">title</span>: <span class=\"string\">`Cluster of <span class=\"subst\">$&#123;count&#125;</span> markers`</span>,</span><br><span class=\"line\">            <span class=\"comment\">// 圖層順序設定</span></span><br><span class=\"line\">            <span class=\"attr\">zIndex</span>: <span class=\"title class_\">Number</span>(google.<span class=\"property\">maps</span>.<span class=\"property\">Marker</span>.<span class=\"property\">MAX_ZINDEX</span>) + count,</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>在這裡快速介紹一些基本的使用方式給大家，若需要更多的自訂功能請參考<a href=\"https://googlemaps.github.io/js-markerclusterer/index.html\">官方文件</a></p>\n","site":{"data":{}},"excerpt":"<p><img src=\"/2022/03/14/1/cover.jpg\"></p>\n<p>Google Map Marker Clustering是Google Map API的延伸套件，讓Google Map的標記在數量多的情況下，自動收合，簡化顯示，避免畫面雜亂，增加使用者體驗。</p>","more":"<p><a href=\"https://6yuwei.com/map_test/\">效果DEMO</a></p>\n<h2 id=\"安裝\"><a href=\"#安裝\" class=\"headerlink\" title=\"安裝\"></a>安裝</h2><h3 id=\"npm\"><a href=\"#npm\" class=\"headerlink\" title=\"npm\"></a>npm</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i @googlemaps/markerclusterer</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"CDN\"><a href=\"#CDN\" class=\"headerlink\" title=\"CDN\"></a>CDN</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script src=<span class=\"string\">&quot;https://unpkg.com/@googlemaps/markerclusterer/dist/index.min.js&quot;</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"TypeScript-型別資料\"><a href=\"#TypeScript-型別資料\" class=\"headerlink\" title=\"TypeScript 型別資料\"></a>TypeScript 型別資料</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i -D @types/google.<span class=\"property\">maps</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"引入\"><a href=\"#引入\" class=\"headerlink\" title=\"引入\"></a>引入</h2><h3 id=\"模組\"><a href=\"#模組\" class=\"headerlink\" title=\"模組\"></a>模組</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; <span class=\"title class_\">MarkerClusterer</span> &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;@googlemaps/markerclusterer&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* map 是google map的實體，</span></span><br><span class=\"line\"><span class=\"comment\">如 const map = new google.maps.Map(document.getElementById(&quot;map&quot;), &#123;zoom: 4,center: uluru&#125;); */</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* markers 是所有的標記陣列，</span></span><br><span class=\"line\"><span class=\"comment\">如 [const marker = new google.maps.Marker(&#123; lat: 25.0335796, lng: 121.5618487 &#125;);] */</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* algorithm 是演算法，可以到這裡</span></span><br><span class=\"line\"><span class=\"comment\">https://googlemaps.github.io/js-markerclusterer/public/algorithms/</span></span><br><span class=\"line\"><span class=\"comment\">尋找合適的算法</span></span><br><span class=\"line\"><span class=\"comment\">如 new markerClusterer.GridAlgorithm(&#123;&#125;)</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> markerCluster = <span class=\"keyword\">new</span> <span class=\"title class_\">MarkerClusterer</span>(&#123; map, markers, algorithm &#125;);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"CDN-1\"><a href=\"#CDN-1\" class=\"headerlink\" title=\"CDN\"></a>CDN</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> markerCluster = <span class=\"keyword\">new</span> markerClusterer.<span class=\"title class_\">MarkerClusterer</span>(&#123; map, markers &#125;);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"自訂標記\"><a href=\"#自訂標記\" class=\"headerlink\" title=\"自訂標記\"></a>自訂標記</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 在renderer中自訂渲染器</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> markerCluster = <span class=\"keyword\">new</span> <span class=\"title class_\">MarkerClusterer</span>(&#123; map, markers, algorithm, <span class=\"attr\">renderer</span>: &#123;</span><br><span class=\"line\">  <span class=\"title function_\">render</span>(<span class=\"params\">&#123; count, position &#125;, stats</span>) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 圖標顏色</span></span><br><span class=\"line\">        <span class=\"keyword\">const</span> color = <span class=\"string\">&quot;#000&quot;</span>;</span><br><span class=\"line\">        <span class=\"comment\">// 將svg轉換成base64，可自行更換圖檔</span></span><br><span class=\"line\">        <span class=\"keyword\">const</span> svg = <span class=\"variable language_\">window</span>.<span class=\"title function_\">btoa</span>(<span class=\"string\">`</span></span><br><span class=\"line\"><span class=\"string\">          &lt;svg fill=&quot;<span class=\"subst\">$&#123;color&#125;</span>&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot; viewBox=&quot;0 0 240 240&quot;&gt;</span></span><br><span class=\"line\"><span class=\"string\">            &lt;circle cx=&quot;120&quot; cy=&quot;120&quot; opacity=&quot;.6&quot; r=&quot;70&quot; /&gt;</span></span><br><span class=\"line\"><span class=\"string\">            &lt;circle cx=&quot;120&quot; cy=&quot;120&quot; opacity=&quot;.3&quot; r=&quot;90&quot; /&gt;</span></span><br><span class=\"line\"><span class=\"string\">            &lt;circle cx=&quot;120&quot; cy=&quot;120&quot; opacity=&quot;.2&quot; r=&quot;110&quot; /&gt;</span></span><br><span class=\"line\"><span class=\"string\">          &lt;/svg&gt;</span></span><br><span class=\"line\"><span class=\"string\">        `</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> google.<span class=\"property\">maps</span>.<span class=\"title class_\">Marker</span>(&#123;</span><br><span class=\"line\">            position,</span><br><span class=\"line\">            <span class=\"attr\">icon</span>: &#123;</span><br><span class=\"line\">                <span class=\"attr\">url</span>: <span class=\"string\">`data:image/svg+xml;base64,<span class=\"subst\">$&#123;svg&#125;</span>`</span>,</span><br><span class=\"line\">                <span class=\"attr\">scaledSize</span>: <span class=\"keyword\">new</span> google.<span class=\"property\">maps</span>.<span class=\"title class_\">Size</span>(<span class=\"number\">50</span>, <span class=\"number\">50</span>),</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            <span class=\"comment\">// 文字樣式</span></span><br><span class=\"line\">            <span class=\"attr\">label</span>: &#123;</span><br><span class=\"line\">                <span class=\"attr\">text</span>: <span class=\"title class_\">String</span>(count),</span><br><span class=\"line\">                <span class=\"attr\">color</span>: <span class=\"string\">&quot;rgba(255,255,255,1)&quot;</span>,</span><br><span class=\"line\">                <span class=\"attr\">fontSize</span>: <span class=\"string\">&quot;12px&quot;</span>,</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            <span class=\"attr\">title</span>: <span class=\"string\">`Cluster of <span class=\"subst\">$&#123;count&#125;</span> markers`</span>,</span><br><span class=\"line\">            <span class=\"comment\">// 圖層順序設定</span></span><br><span class=\"line\">            <span class=\"attr\">zIndex</span>: <span class=\"title class_\">Number</span>(google.<span class=\"property\">maps</span>.<span class=\"property\">Marker</span>.<span class=\"property\">MAX_ZINDEX</span>) + count,</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>在這裡快速介紹一些基本的使用方式給大家，若需要更多的自訂功能請參考<a href=\"https://googlemaps.github.io/js-markerclusterer/index.html\">官方文件</a></p>"},{"title":"TypeScript入門：什麼是TypeScript？","date":"2023-03-05T15:45:21.000Z","_content":"\n![](cover.jpg)\n\n## 簡介\n\n隨著JavaScript在網頁開發中的使用越來越普及，TypeScript作為JavaScript的靜態超集，也開始受到越來越多的關注。TypeScript由Microsoft開發，是一種開源的程式語言，通常被稱為JavaScript的超集，它通過為JavaScript添加類型定義和其他功能來擴展JavaScript的功能。\n\n<!-- more -->\n\n## 類型定義\n\nJavaScript是一種動態語言，這意味著開發人員不需要指定變量的數據類型。這可能會導致錯誤，特別是在大型項目中。TypeScript解決了這個問題，它允許開發人員指定變量的數據類型。這樣可以減少錯誤，提高程式的可讀性和可維護性。\n\n## 其他功能\n\nTypeScript還提供了其他一些功能，例如類型推斷、接口、泛型和枚舉。這些功能可以使程式更加清晰和容易理解，並且可以大大提高開發人員的生產力。例如，泛型可以使函數更加靈活，並且可以在不同類型的數據上進行操作。\n\n## 總結\n\nTypeScript是一種高效的程式語言，它通過為JavaScript添加類型定義和其他功能來擴展JavaScript的功能。類型定義可以減少錯誤，提高程式的可讀性和可維護性，而其他功能可以使程式更加清晰和容易理解，並且可以大大提高開發人員的生產力。如果你是一個JavaScript開發人員，那麼學習TypeScript肯定會使你的生活更加輕鬆。\n\n## 使用案例\n\n假設你正在開發一個簡單的計算機應用程序，用戶可以輸入兩個數字和一個運算符（加、減、乘、除），然後應用程序將返回計算結果。在使用 TypeScript 的情況下，你可以使用以下程式來實現這個功能：\n\n``` typescript\ntype Operator = '+' | '-' | '*' | '/'; // 自訂型別只能是這些字串\n\nfunction calculate(operator: Operator, num1: number, num2: number): number {\n  switch (operator) {\n    case '+':\n      return num1 + num2;\n    case '-':\n      return num1 - num2;\n    case '*':\n      return num1 * num2;\n    case '/':\n      return num1 / num2;\n    default:\n      throw new Error('Invalid operator');\n  }\n}\n\nconst num1 = 10; // 第一個數字\nconst num2 = 5; // 第二個數字\nconst operator = '+'; // 運算符\n\nconst result = calculate(operator, num1, num2); // 結果\n\nconsole.log(`${num1} ${operator} ${num2} = ${result}`); // 輸出\n```\n\n這段程式定義了一個 calculate 函數，三個參數分別為：一個運算符和兩個數字。根據運算符，這個函數將執行相應的計算，然後返回結果。這個程式還定義了一個 Operator 類型，它只允許 '+'、'-'、'*' 或 '/' 中的一個值。\n這個 TypeScript 程式使用了基本的 TypeScript 語法，包括類型定義、函數定義、switch 語句和錯誤處理。初學者可以通過閱讀這個程式來理解 TypeScript 的基本概念和用法。\n\n<br>\n<hr>\n\n## 我的相關案例\n\n[日記盒DiaryBox](https://github.com/tatdt622989/diary-box) - 一款將日記與3D結合的網頁應用程式，可以讓使用者在虛擬空間中寫下自己的心情和生活點滴，並使用各種貼圖和手繪功能來裝飾日記\n","source":"_posts/2023-03-05-TypeScript入門：什麼是TypeScript？.md","raw":"---\ntitle: TypeScript入門：什麼是TypeScript？\ndate: 2023-03-05 23:45:21\ntags: \n- TypeScript\n- JavaScript\n---\n\n![](cover.jpg)\n\n## 簡介\n\n隨著JavaScript在網頁開發中的使用越來越普及，TypeScript作為JavaScript的靜態超集，也開始受到越來越多的關注。TypeScript由Microsoft開發，是一種開源的程式語言，通常被稱為JavaScript的超集，它通過為JavaScript添加類型定義和其他功能來擴展JavaScript的功能。\n\n<!-- more -->\n\n## 類型定義\n\nJavaScript是一種動態語言，這意味著開發人員不需要指定變量的數據類型。這可能會導致錯誤，特別是在大型項目中。TypeScript解決了這個問題，它允許開發人員指定變量的數據類型。這樣可以減少錯誤，提高程式的可讀性和可維護性。\n\n## 其他功能\n\nTypeScript還提供了其他一些功能，例如類型推斷、接口、泛型和枚舉。這些功能可以使程式更加清晰和容易理解，並且可以大大提高開發人員的生產力。例如，泛型可以使函數更加靈活，並且可以在不同類型的數據上進行操作。\n\n## 總結\n\nTypeScript是一種高效的程式語言，它通過為JavaScript添加類型定義和其他功能來擴展JavaScript的功能。類型定義可以減少錯誤，提高程式的可讀性和可維護性，而其他功能可以使程式更加清晰和容易理解，並且可以大大提高開發人員的生產力。如果你是一個JavaScript開發人員，那麼學習TypeScript肯定會使你的生活更加輕鬆。\n\n## 使用案例\n\n假設你正在開發一個簡單的計算機應用程序，用戶可以輸入兩個數字和一個運算符（加、減、乘、除），然後應用程序將返回計算結果。在使用 TypeScript 的情況下，你可以使用以下程式來實現這個功能：\n\n``` typescript\ntype Operator = '+' | '-' | '*' | '/'; // 自訂型別只能是這些字串\n\nfunction calculate(operator: Operator, num1: number, num2: number): number {\n  switch (operator) {\n    case '+':\n      return num1 + num2;\n    case '-':\n      return num1 - num2;\n    case '*':\n      return num1 * num2;\n    case '/':\n      return num1 / num2;\n    default:\n      throw new Error('Invalid operator');\n  }\n}\n\nconst num1 = 10; // 第一個數字\nconst num2 = 5; // 第二個數字\nconst operator = '+'; // 運算符\n\nconst result = calculate(operator, num1, num2); // 結果\n\nconsole.log(`${num1} ${operator} ${num2} = ${result}`); // 輸出\n```\n\n這段程式定義了一個 calculate 函數，三個參數分別為：一個運算符和兩個數字。根據運算符，這個函數將執行相應的計算，然後返回結果。這個程式還定義了一個 Operator 類型，它只允許 '+'、'-'、'*' 或 '/' 中的一個值。\n這個 TypeScript 程式使用了基本的 TypeScript 語法，包括類型定義、函數定義、switch 語句和錯誤處理。初學者可以通過閱讀這個程式來理解 TypeScript 的基本概念和用法。\n\n<br>\n<hr>\n\n## 我的相關案例\n\n[日記盒DiaryBox](https://github.com/tatdt622989/diary-box) - 一款將日記與3D結合的網頁應用程式，可以讓使用者在虛擬空間中寫下自己的心情和生活點滴，並使用各種貼圖和手繪功能來裝飾日記\n","slug":"TypeScript入門：什麼是TypeScript？","published":1,"updated":"2023-07-07T16:18:51.882Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clok3v80w000j1wvaen86gl75","content":"<p><img src=\"/2023/03/05/TypeScript%E5%85%A5%E9%96%80%EF%BC%9A%E4%BB%80%E9%BA%BC%E6%98%AFTypeScript%EF%BC%9F/cover.jpg\"></p>\n<h2 id=\"簡介\"><a href=\"#簡介\" class=\"headerlink\" title=\"簡介\"></a>簡介</h2><p>隨著JavaScript在網頁開發中的使用越來越普及，TypeScript作為JavaScript的靜態超集，也開始受到越來越多的關注。TypeScript由Microsoft開發，是一種開源的程式語言，通常被稱為JavaScript的超集，它通過為JavaScript添加類型定義和其他功能來擴展JavaScript的功能。</p>\n<span id=\"more\"></span>\n\n<h2 id=\"類型定義\"><a href=\"#類型定義\" class=\"headerlink\" title=\"類型定義\"></a>類型定義</h2><p>JavaScript是一種動態語言，這意味著開發人員不需要指定變量的數據類型。這可能會導致錯誤，特別是在大型項目中。TypeScript解決了這個問題，它允許開發人員指定變量的數據類型。這樣可以減少錯誤，提高程式的可讀性和可維護性。</p>\n<h2 id=\"其他功能\"><a href=\"#其他功能\" class=\"headerlink\" title=\"其他功能\"></a>其他功能</h2><p>TypeScript還提供了其他一些功能，例如類型推斷、接口、泛型和枚舉。這些功能可以使程式更加清晰和容易理解，並且可以大大提高開發人員的生產力。例如，泛型可以使函數更加靈活，並且可以在不同類型的數據上進行操作。</p>\n<h2 id=\"總結\"><a href=\"#總結\" class=\"headerlink\" title=\"總結\"></a>總結</h2><p>TypeScript是一種高效的程式語言，它通過為JavaScript添加類型定義和其他功能來擴展JavaScript的功能。類型定義可以減少錯誤，提高程式的可讀性和可維護性，而其他功能可以使程式更加清晰和容易理解，並且可以大大提高開發人員的生產力。如果你是一個JavaScript開發人員，那麼學習TypeScript肯定會使你的生活更加輕鬆。</p>\n<h2 id=\"使用案例\"><a href=\"#使用案例\" class=\"headerlink\" title=\"使用案例\"></a>使用案例</h2><p>假設你正在開發一個簡單的計算機應用程序，用戶可以輸入兩個數字和一個運算符（加、減、乘、除），然後應用程序將返回計算結果。在使用 TypeScript 的情況下，你可以使用以下程式來實現這個功能：</p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">type</span> <span class=\"title class_\">Operator</span> = <span class=\"string\">&#x27;+&#x27;</span> | <span class=\"string\">&#x27;-&#x27;</span> | <span class=\"string\">&#x27;*&#x27;</span> | <span class=\"string\">&#x27;/&#x27;</span>; <span class=\"comment\">// 自訂型別只能是這些字串</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">calculate</span>(<span class=\"params\">operator: Operator, num1: <span class=\"built_in\">number</span>, num2: <span class=\"built_in\">number</span></span>): <span class=\"built_in\">number</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">switch</span> (operator) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"string\">&#x27;+&#x27;</span>:</span><br><span class=\"line\">      <span class=\"keyword\">return</span> num1 + num2;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"string\">&#x27;-&#x27;</span>:</span><br><span class=\"line\">      <span class=\"keyword\">return</span> num1 - num2;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"string\">&#x27;*&#x27;</span>:</span><br><span class=\"line\">      <span class=\"keyword\">return</span> num1 * num2;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"string\">&#x27;/&#x27;</span>:</span><br><span class=\"line\">      <span class=\"keyword\">return</span> num1 / num2;</span><br><span class=\"line\">    <span class=\"attr\">default</span>:</span><br><span class=\"line\">      <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Error</span>(<span class=\"string\">&#x27;Invalid operator&#x27;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> num1 = <span class=\"number\">10</span>; <span class=\"comment\">// 第一個數字</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> num2 = <span class=\"number\">5</span>; <span class=\"comment\">// 第二個數字</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> operator = <span class=\"string\">&#x27;+&#x27;</span>; <span class=\"comment\">// 運算符</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> result = <span class=\"title function_\">calculate</span>(operator, num1, num2); <span class=\"comment\">// 結果</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">`<span class=\"subst\">$&#123;num1&#125;</span> <span class=\"subst\">$&#123;operator&#125;</span> <span class=\"subst\">$&#123;num2&#125;</span> = <span class=\"subst\">$&#123;result&#125;</span>`</span>); <span class=\"comment\">// 輸出</span></span><br></pre></td></tr></table></figure>\n\n<p>這段程式定義了一個 calculate 函數，三個參數分別為：一個運算符和兩個數字。根據運算符，這個函數將執行相應的計算，然後返回結果。這個程式還定義了一個 Operator 類型，它只允許 ‘+’、’-‘、’*’ 或 ‘&#x2F;‘ 中的一個值。<br>這個 TypeScript 程式使用了基本的 TypeScript 語法，包括類型定義、函數定義、switch 語句和錯誤處理。初學者可以通過閱讀這個程式來理解 TypeScript 的基本概念和用法。</p>\n<br>\n<hr>\n\n<h2 id=\"我的相關案例\"><a href=\"#我的相關案例\" class=\"headerlink\" title=\"我的相關案例\"></a>我的相關案例</h2><p><a href=\"https://github.com/tatdt622989/diary-box\">日記盒DiaryBox</a> - 一款將日記與3D結合的網頁應用程式，可以讓使用者在虛擬空間中寫下自己的心情和生活點滴，並使用各種貼圖和手繪功能來裝飾日記</p>\n","site":{"data":{}},"excerpt":"<p><img src=\"/2023/03/05/TypeScript%E5%85%A5%E9%96%80%EF%BC%9A%E4%BB%80%E9%BA%BC%E6%98%AFTypeScript%EF%BC%9F/cover.jpg\"></p>\n<h2 id=\"簡介\"><a href=\"#簡介\" class=\"headerlink\" title=\"簡介\"></a>簡介</h2><p>隨著JavaScript在網頁開發中的使用越來越普及，TypeScript作為JavaScript的靜態超集，也開始受到越來越多的關注。TypeScript由Microsoft開發，是一種開源的程式語言，通常被稱為JavaScript的超集，它通過為JavaScript添加類型定義和其他功能來擴展JavaScript的功能。</p>","more":"<h2 id=\"類型定義\"><a href=\"#類型定義\" class=\"headerlink\" title=\"類型定義\"></a>類型定義</h2><p>JavaScript是一種動態語言，這意味著開發人員不需要指定變量的數據類型。這可能會導致錯誤，特別是在大型項目中。TypeScript解決了這個問題，它允許開發人員指定變量的數據類型。這樣可以減少錯誤，提高程式的可讀性和可維護性。</p>\n<h2 id=\"其他功能\"><a href=\"#其他功能\" class=\"headerlink\" title=\"其他功能\"></a>其他功能</h2><p>TypeScript還提供了其他一些功能，例如類型推斷、接口、泛型和枚舉。這些功能可以使程式更加清晰和容易理解，並且可以大大提高開發人員的生產力。例如，泛型可以使函數更加靈活，並且可以在不同類型的數據上進行操作。</p>\n<h2 id=\"總結\"><a href=\"#總結\" class=\"headerlink\" title=\"總結\"></a>總結</h2><p>TypeScript是一種高效的程式語言，它通過為JavaScript添加類型定義和其他功能來擴展JavaScript的功能。類型定義可以減少錯誤，提高程式的可讀性和可維護性，而其他功能可以使程式更加清晰和容易理解，並且可以大大提高開發人員的生產力。如果你是一個JavaScript開發人員，那麼學習TypeScript肯定會使你的生活更加輕鬆。</p>\n<h2 id=\"使用案例\"><a href=\"#使用案例\" class=\"headerlink\" title=\"使用案例\"></a>使用案例</h2><p>假設你正在開發一個簡單的計算機應用程序，用戶可以輸入兩個數字和一個運算符（加、減、乘、除），然後應用程序將返回計算結果。在使用 TypeScript 的情況下，你可以使用以下程式來實現這個功能：</p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">type</span> <span class=\"title class_\">Operator</span> = <span class=\"string\">&#x27;+&#x27;</span> | <span class=\"string\">&#x27;-&#x27;</span> | <span class=\"string\">&#x27;*&#x27;</span> | <span class=\"string\">&#x27;/&#x27;</span>; <span class=\"comment\">// 自訂型別只能是這些字串</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">calculate</span>(<span class=\"params\">operator: Operator, num1: <span class=\"built_in\">number</span>, num2: <span class=\"built_in\">number</span></span>): <span class=\"built_in\">number</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">switch</span> (operator) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"string\">&#x27;+&#x27;</span>:</span><br><span class=\"line\">      <span class=\"keyword\">return</span> num1 + num2;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"string\">&#x27;-&#x27;</span>:</span><br><span class=\"line\">      <span class=\"keyword\">return</span> num1 - num2;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"string\">&#x27;*&#x27;</span>:</span><br><span class=\"line\">      <span class=\"keyword\">return</span> num1 * num2;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"string\">&#x27;/&#x27;</span>:</span><br><span class=\"line\">      <span class=\"keyword\">return</span> num1 / num2;</span><br><span class=\"line\">    <span class=\"attr\">default</span>:</span><br><span class=\"line\">      <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Error</span>(<span class=\"string\">&#x27;Invalid operator&#x27;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> num1 = <span class=\"number\">10</span>; <span class=\"comment\">// 第一個數字</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> num2 = <span class=\"number\">5</span>; <span class=\"comment\">// 第二個數字</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> operator = <span class=\"string\">&#x27;+&#x27;</span>; <span class=\"comment\">// 運算符</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> result = <span class=\"title function_\">calculate</span>(operator, num1, num2); <span class=\"comment\">// 結果</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">`<span class=\"subst\">$&#123;num1&#125;</span> <span class=\"subst\">$&#123;operator&#125;</span> <span class=\"subst\">$&#123;num2&#125;</span> = <span class=\"subst\">$&#123;result&#125;</span>`</span>); <span class=\"comment\">// 輸出</span></span><br></pre></td></tr></table></figure>\n\n<p>這段程式定義了一個 calculate 函數，三個參數分別為：一個運算符和兩個數字。根據運算符，這個函數將執行相應的計算，然後返回結果。這個程式還定義了一個 Operator 類型，它只允許 ‘+’、’-‘、’*’ 或 ‘&#x2F;‘ 中的一個值。<br>這個 TypeScript 程式使用了基本的 TypeScript 語法，包括類型定義、函數定義、switch 語句和錯誤處理。初學者可以通過閱讀這個程式來理解 TypeScript 的基本概念和用法。</p>\n<br>\n<hr>\n\n<h2 id=\"我的相關案例\"><a href=\"#我的相關案例\" class=\"headerlink\" title=\"我的相關案例\"></a>我的相關案例</h2><p><a href=\"https://github.com/tatdt622989/diary-box\">日記盒DiaryBox</a> - 一款將日記與3D結合的網頁應用程式，可以讓使用者在虛擬空間中寫下自己的心情和生活點滴，並使用各種貼圖和手繪功能來裝飾日記</p>"},{"title":"提升前端工作效率的工具介紹","date":"2022-03-15T17:02:00.000Z","hidden":true,"_content":"","source":"_posts/2022-03-16-1.md","raw":"---\ntitle: 提升前端工作效率的工具介紹\ndate: 2022-03-16 01:02:00\nhidden: true\ntags:\n- frontend\n- tool\n---\n","slug":"1","published":1,"updated":"2022-12-26T15:50:12.660Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clok3v80x000l1wvaa5gxcsfg","content":"<!-- flag of hidden posts -->","site":{"data":{}},"excerpt":"","more":""},{"title":"快速使用 Firebase Cloud Functions 創建網頁後端API","date":"2023-07-07T16:14:32.000Z","_content":"\n![](cover.jpg)\n\n## Firebase Cloud Functions 介紹\n\n**Firebase Cloud Functions** 是 Firebase 的一項服務，能夠讓使用者在不需要考慮伺服器的情況下，建立可以在雲端執行的程式碼，並使用HTTPS或其他Firebase的服務進行調用，<!-- more -->但是若要使用這項服務，必須將專案升級成[Blaze Plan](https://firebase.google.com/pricing)才能夠使用，並且調用是需要費用的，但是每個月的免費額度對一般的開發者來說應該是相當夠用了(一個月200萬次呼叫)，費用詳情可以參考[這裡](https://firebase.google.com/pricing)，針對請求數、儲存空間、執行時間等都有詳細的價格說明。\n\n## 開始使用 Firebase Cloud Functions\n\n在使用任何 Firebase 相關的服務時，需要先建立一個專案和網頁應用程式，選擇\"新增專案\"後，請按照流程往下走把專案建立起來。\n\\\n![](firebase1.png)\n\n接著，點選網頁建立網頁應用程式，接著輸入應用程式名稱，依照流程跑完。\n![](firebase5.png)\n\n請記得將專案升級至Blaze Plan\n![](firebase6.png)\n\n## 安裝 Firebase CLI\n\n要使用Firebase Functions還需要在本地安裝 Firebase CLI ，這裡使用NPM的形式做安裝。\n\n```bash\nnpm install -g firebase-tools\n```\n\n安裝成功後，需要做身分驗證，請透過以下指令登入\n\n```bash\nfirebase login\n```\n\n登入成功之後，請使用以下指令確認帳戶內是否有一開始創建的專案，若沒有請先將專案建立起來並確定專案是否為「**Blaze Plan**」\n\n```bash\nfirebase projects:list\n```\n\n確認完專案存在後，需要進行初始化\n\n```bash\nfirebase init\n```\n\n輸入指令後，會出現許多問題，請在選擇Firebase服務的問題內，選擇Functions和Realtime Database(本範例會稍微介紹如何使用在Cloud Functions，不一定需要裝)，如下圖\n\n![](firebase2.png)\n\n請選擇Use an existing project並選擇已創建的專案，其他選項則是可以直接一路enter帶過\n\n![](firebase3.png)\n\n這樣一來就把整個環境建立起來了，詳細的專案設定以及Realtime Database的使用方式請查閱[官方文件](https://firebase.google.com/docs/build?authuser=0&hl=zh-tw)，由於這些內容不在本篇討論範圍所以就不詳細說明。\n\n建立專案之後，可以看到資料夾內有一個functions的資料夾，資料夾內有一支名為index.js的檔案，這支檔案就是function撰寫的地方。\n\n![](firebase4.png)\n\n## 開始撰寫function\n\n在index.js中，我們可以看到他有提供一些範例程式碼如下，當中需要注意的是筆者使用的版本是v2也就是第二代，跟第一代的寫法會略有不同。\n\n``` javascript\n/**\n * Import function triggers from their respective submodules:\n *\n * const {onCall} = require(\"firebase-functions/v2/https\");\n * const {onDocumentWritten} = require(\"firebase-functions/v2/firestore\");\n *\n * See a full list of supported triggers at https://firebase.google.com/docs/functions\n */\n\nconst {onRequest} = require(\"firebase-functions/v2/https\");\nconst logger = require(\"firebase-functions/logger\");\n\n// Create and deploy your first functions\n// https://firebase.google.com/docs/functions/get-started\n\n// exports.helloWorld = onRequest((request, response) => {\n//   logger.info(\"Hello logs!\", {structuredData: true});\n//   response.send(\"Hello from Firebase!\");\n// });\n```\n\n其中我們會發現到exports.helloWorld的內容就是建立function的方式，也等於之後我們會用來調用的後端API，而為了能夠被ajax所調用，我們需要使用**onRequest**這個函式，使用方法如下\n\n``` javascript\nconst {onRequest, onCall} = require(\"firebase-functions/v2/https\");\nconst {setGlobalOptions} = require(\"firebase-functions/v2\");\nconst logger = require(\"firebase-functions/logger\");\n\nsetGlobalOptions({region: \"asia-east1\"}); // 設定資料中心\n\n// 將數字加上隨機數字1-1000\nexports.addRandomNumber = onRequest({\n    cors: true, // 允許跨域\n  }, (req, res) => {\n    const {number} = req.body;\n    const randomNumber = Math.floor(Math.random() * 1000) + 1;\n    const result = parseInt(number, 10) + randomNumber;\n    res.status(200).send({result}); // 將結果回傳給使用者\n});\n\n```\n\nfunctions因為儲存在google的雲端運算中心，所以為了得到最好的響應速度，建議設定離自己或是客戶較為接近的資料中心，筆者這裡是設定為 **asia-east1(台灣)** ，若想使用其他的資料中心[**請參考**](https://firebase.google.com/docs/functions/locations)。\n上面的程式裡簡單寫了一個function，功能是只要帶數字進來，就會隨機加上一個1-1000的數字並回傳。\n\n寫完function後，需要將function部署到雲端，請使用以下指令\n\n``` bash\n firebase deploy --only functions\n```\n\n![](firebase7.png)\n\n部署成功之後，回到Firebase後台會發現以下的畫面，內容包含了請求所需的網址\n\n![](firebase8.png)\n\n這個網址可以使用 **GET** 、 **POST** 、 **PUT** 、 **DELETE** 和 **OPTIONS** 的HTTP方法進行調用，由於這個function使用req.body接收資料，所以這裡筆者選用POST的方式進行測試。\n\n![](firebase9.png)\n\n使用Postman測試可以發現確實回傳給我隨機的數字，這樣就代表成功了！\n\n## 補充：如何搭配Realtime Database\n\n若希望在function內使用Realtime Database做資料的存取，可以使用firebase-admin來協助將資料寫入資料庫\n\n```javascript\nconst {onCall, HttpsError} = require(\"firebase-functions/v2/https\");\nconst {setGlobalOptions} = require(\"firebase-functions/v2\");\nconst logger = require(\"firebase-functions/logger\");\nconst admin = require(\"firebase-admin\");\n\n// Initialize the app\nadmin.initializeApp();\n\nsetGlobalOptions({region: \"asia-east1\"});\n```\n\n這裡將先前的function修改成會將結果寫入資料庫，主要就是使用 **const db = admin.database();** 來將資料庫引入，再執行寫入。\n\n``` javascript\n// 將數字加上隨機數字1-1000，並存入資料庫\nexports.addRandomNumber = onRequest({\n    cors: true, // 允許跨域\n  }, async(req, res) => {\n    const {number} = req.body;\n    const randomNumber = Math.floor(Math.random() * 1000) + 1;\n    const result = parseInt(number, 10) + randomNumber;\n    const db = admin.database(); // 引入Realtime Database\n    const numberRef = db.ref(`number`); // 定義寫入路徑\n    await numberRef.set(result); // 寫入Realtime Database\n    res.status(200).send({result});\n});\n```\n\n修改完成後，再使用Postman進行調用，會發現資料庫的數值確實被修改了\n\n![](firebase10.png)\n\n**※注意：由於Firebase經常在更新，所以有些內容可能會已過時，若有錯誤還煩請各位朋友告知！**\n\n以上就是這次的全部內容，感謝看到這裡的你！\n\n參考資料：\n[官方文件](https://firebase.google.com/docs/functions)","source":"_posts/2023-07-08-使用-Firebase-Cloud-Functions-創建網頁後端API.md","raw":"---\ntitle: 快速使用 Firebase Cloud Functions 創建網頁後端API\ndate: 2023-07-08 00:14:32\ntags:\n- JavaScript\n- Firebase\n---\n\n![](cover.jpg)\n\n## Firebase Cloud Functions 介紹\n\n**Firebase Cloud Functions** 是 Firebase 的一項服務，能夠讓使用者在不需要考慮伺服器的情況下，建立可以在雲端執行的程式碼，並使用HTTPS或其他Firebase的服務進行調用，<!-- more -->但是若要使用這項服務，必須將專案升級成[Blaze Plan](https://firebase.google.com/pricing)才能夠使用，並且調用是需要費用的，但是每個月的免費額度對一般的開發者來說應該是相當夠用了(一個月200萬次呼叫)，費用詳情可以參考[這裡](https://firebase.google.com/pricing)，針對請求數、儲存空間、執行時間等都有詳細的價格說明。\n\n## 開始使用 Firebase Cloud Functions\n\n在使用任何 Firebase 相關的服務時，需要先建立一個專案和網頁應用程式，選擇\"新增專案\"後，請按照流程往下走把專案建立起來。\n\\\n![](firebase1.png)\n\n接著，點選網頁建立網頁應用程式，接著輸入應用程式名稱，依照流程跑完。\n![](firebase5.png)\n\n請記得將專案升級至Blaze Plan\n![](firebase6.png)\n\n## 安裝 Firebase CLI\n\n要使用Firebase Functions還需要在本地安裝 Firebase CLI ，這裡使用NPM的形式做安裝。\n\n```bash\nnpm install -g firebase-tools\n```\n\n安裝成功後，需要做身分驗證，請透過以下指令登入\n\n```bash\nfirebase login\n```\n\n登入成功之後，請使用以下指令確認帳戶內是否有一開始創建的專案，若沒有請先將專案建立起來並確定專案是否為「**Blaze Plan**」\n\n```bash\nfirebase projects:list\n```\n\n確認完專案存在後，需要進行初始化\n\n```bash\nfirebase init\n```\n\n輸入指令後，會出現許多問題，請在選擇Firebase服務的問題內，選擇Functions和Realtime Database(本範例會稍微介紹如何使用在Cloud Functions，不一定需要裝)，如下圖\n\n![](firebase2.png)\n\n請選擇Use an existing project並選擇已創建的專案，其他選項則是可以直接一路enter帶過\n\n![](firebase3.png)\n\n這樣一來就把整個環境建立起來了，詳細的專案設定以及Realtime Database的使用方式請查閱[官方文件](https://firebase.google.com/docs/build?authuser=0&hl=zh-tw)，由於這些內容不在本篇討論範圍所以就不詳細說明。\n\n建立專案之後，可以看到資料夾內有一個functions的資料夾，資料夾內有一支名為index.js的檔案，這支檔案就是function撰寫的地方。\n\n![](firebase4.png)\n\n## 開始撰寫function\n\n在index.js中，我們可以看到他有提供一些範例程式碼如下，當中需要注意的是筆者使用的版本是v2也就是第二代，跟第一代的寫法會略有不同。\n\n``` javascript\n/**\n * Import function triggers from their respective submodules:\n *\n * const {onCall} = require(\"firebase-functions/v2/https\");\n * const {onDocumentWritten} = require(\"firebase-functions/v2/firestore\");\n *\n * See a full list of supported triggers at https://firebase.google.com/docs/functions\n */\n\nconst {onRequest} = require(\"firebase-functions/v2/https\");\nconst logger = require(\"firebase-functions/logger\");\n\n// Create and deploy your first functions\n// https://firebase.google.com/docs/functions/get-started\n\n// exports.helloWorld = onRequest((request, response) => {\n//   logger.info(\"Hello logs!\", {structuredData: true});\n//   response.send(\"Hello from Firebase!\");\n// });\n```\n\n其中我們會發現到exports.helloWorld的內容就是建立function的方式，也等於之後我們會用來調用的後端API，而為了能夠被ajax所調用，我們需要使用**onRequest**這個函式，使用方法如下\n\n``` javascript\nconst {onRequest, onCall} = require(\"firebase-functions/v2/https\");\nconst {setGlobalOptions} = require(\"firebase-functions/v2\");\nconst logger = require(\"firebase-functions/logger\");\n\nsetGlobalOptions({region: \"asia-east1\"}); // 設定資料中心\n\n// 將數字加上隨機數字1-1000\nexports.addRandomNumber = onRequest({\n    cors: true, // 允許跨域\n  }, (req, res) => {\n    const {number} = req.body;\n    const randomNumber = Math.floor(Math.random() * 1000) + 1;\n    const result = parseInt(number, 10) + randomNumber;\n    res.status(200).send({result}); // 將結果回傳給使用者\n});\n\n```\n\nfunctions因為儲存在google的雲端運算中心，所以為了得到最好的響應速度，建議設定離自己或是客戶較為接近的資料中心，筆者這裡是設定為 **asia-east1(台灣)** ，若想使用其他的資料中心[**請參考**](https://firebase.google.com/docs/functions/locations)。\n上面的程式裡簡單寫了一個function，功能是只要帶數字進來，就會隨機加上一個1-1000的數字並回傳。\n\n寫完function後，需要將function部署到雲端，請使用以下指令\n\n``` bash\n firebase deploy --only functions\n```\n\n![](firebase7.png)\n\n部署成功之後，回到Firebase後台會發現以下的畫面，內容包含了請求所需的網址\n\n![](firebase8.png)\n\n這個網址可以使用 **GET** 、 **POST** 、 **PUT** 、 **DELETE** 和 **OPTIONS** 的HTTP方法進行調用，由於這個function使用req.body接收資料，所以這裡筆者選用POST的方式進行測試。\n\n![](firebase9.png)\n\n使用Postman測試可以發現確實回傳給我隨機的數字，這樣就代表成功了！\n\n## 補充：如何搭配Realtime Database\n\n若希望在function內使用Realtime Database做資料的存取，可以使用firebase-admin來協助將資料寫入資料庫\n\n```javascript\nconst {onCall, HttpsError} = require(\"firebase-functions/v2/https\");\nconst {setGlobalOptions} = require(\"firebase-functions/v2\");\nconst logger = require(\"firebase-functions/logger\");\nconst admin = require(\"firebase-admin\");\n\n// Initialize the app\nadmin.initializeApp();\n\nsetGlobalOptions({region: \"asia-east1\"});\n```\n\n這裡將先前的function修改成會將結果寫入資料庫，主要就是使用 **const db = admin.database();** 來將資料庫引入，再執行寫入。\n\n``` javascript\n// 將數字加上隨機數字1-1000，並存入資料庫\nexports.addRandomNumber = onRequest({\n    cors: true, // 允許跨域\n  }, async(req, res) => {\n    const {number} = req.body;\n    const randomNumber = Math.floor(Math.random() * 1000) + 1;\n    const result = parseInt(number, 10) + randomNumber;\n    const db = admin.database(); // 引入Realtime Database\n    const numberRef = db.ref(`number`); // 定義寫入路徑\n    await numberRef.set(result); // 寫入Realtime Database\n    res.status(200).send({result});\n});\n```\n\n修改完成後，再使用Postman進行調用，會發現資料庫的數值確實被修改了\n\n![](firebase10.png)\n\n**※注意：由於Firebase經常在更新，所以有些內容可能會已過時，若有錯誤還煩請各位朋友告知！**\n\n以上就是這次的全部內容，感謝看到這裡的你！\n\n參考資料：\n[官方文件](https://firebase.google.com/docs/functions)","slug":"使用-Firebase-Cloud-Functions-創建網頁後端API","published":1,"updated":"2023-07-08T18:05:39.653Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clok3v81700221wvabfk8b4q8","content":"<p><img src=\"/2023/07/08/%E4%BD%BF%E7%94%A8-Firebase-Cloud-Functions-%E5%89%B5%E5%BB%BA%E7%B6%B2%E9%A0%81%E5%BE%8C%E7%AB%AFAPI/cover.jpg\"></p>\n<h2 id=\"Firebase-Cloud-Functions-介紹\"><a href=\"#Firebase-Cloud-Functions-介紹\" class=\"headerlink\" title=\"Firebase Cloud Functions 介紹\"></a>Firebase Cloud Functions 介紹</h2><p><strong>Firebase Cloud Functions</strong> 是 Firebase 的一項服務，能夠讓使用者在不需要考慮伺服器的情況下，建立可以在雲端執行的程式碼，並使用HTTPS或其他Firebase的服務進行調用，<span id=\"more\"></span>但是若要使用這項服務，必須將專案升級成<a href=\"https://firebase.google.com/pricing\">Blaze Plan</a>才能夠使用，並且調用是需要費用的，但是每個月的免費額度對一般的開發者來說應該是相當夠用了(一個月200萬次呼叫)，費用詳情可以參考<a href=\"https://firebase.google.com/pricing\">這裡</a>，針對請求數、儲存空間、執行時間等都有詳細的價格說明。</p>\n<h2 id=\"開始使用-Firebase-Cloud-Functions\"><a href=\"#開始使用-Firebase-Cloud-Functions\" class=\"headerlink\" title=\"開始使用 Firebase Cloud Functions\"></a>開始使用 Firebase Cloud Functions</h2><p>在使用任何 Firebase 相關的服務時，需要先建立一個專案和網頁應用程式，選擇”新增專案”後，請按照流程往下走把專案建立起來。<br><br><img src=\"/2023/07/08/%E4%BD%BF%E7%94%A8-Firebase-Cloud-Functions-%E5%89%B5%E5%BB%BA%E7%B6%B2%E9%A0%81%E5%BE%8C%E7%AB%AFAPI/firebase1.png\"></p>\n<p>接著，點選網頁建立網頁應用程式，接著輸入應用程式名稱，依照流程跑完。<br><img src=\"/2023/07/08/%E4%BD%BF%E7%94%A8-Firebase-Cloud-Functions-%E5%89%B5%E5%BB%BA%E7%B6%B2%E9%A0%81%E5%BE%8C%E7%AB%AFAPI/firebase5.png\"></p>\n<p>請記得將專案升級至Blaze Plan<br><img src=\"/2023/07/08/%E4%BD%BF%E7%94%A8-Firebase-Cloud-Functions-%E5%89%B5%E5%BB%BA%E7%B6%B2%E9%A0%81%E5%BE%8C%E7%AB%AFAPI/firebase6.png\"></p>\n<h2 id=\"安裝-Firebase-CLI\"><a href=\"#安裝-Firebase-CLI\" class=\"headerlink\" title=\"安裝 Firebase CLI\"></a>安裝 Firebase CLI</h2><p>要使用Firebase Functions還需要在本地安裝 Firebase CLI ，這裡使用NPM的形式做安裝。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g firebase-tools</span><br></pre></td></tr></table></figure>\n\n<p>安裝成功後，需要做身分驗證，請透過以下指令登入</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">firebase login</span><br></pre></td></tr></table></figure>\n\n<p>登入成功之後，請使用以下指令確認帳戶內是否有一開始創建的專案，若沒有請先將專案建立起來並確定專案是否為「<strong>Blaze Plan</strong>」</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">firebase projects:list</span><br></pre></td></tr></table></figure>\n\n<p>確認完專案存在後，需要進行初始化</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">firebase init</span><br></pre></td></tr></table></figure>\n\n<p>輸入指令後，會出現許多問題，請在選擇Firebase服務的問題內，選擇Functions和Realtime Database(本範例會稍微介紹如何使用在Cloud Functions，不一定需要裝)，如下圖</p>\n<p><img src=\"/2023/07/08/%E4%BD%BF%E7%94%A8-Firebase-Cloud-Functions-%E5%89%B5%E5%BB%BA%E7%B6%B2%E9%A0%81%E5%BE%8C%E7%AB%AFAPI/firebase2.png\"></p>\n<p>請選擇Use an existing project並選擇已創建的專案，其他選項則是可以直接一路enter帶過</p>\n<p><img src=\"/2023/07/08/%E4%BD%BF%E7%94%A8-Firebase-Cloud-Functions-%E5%89%B5%E5%BB%BA%E7%B6%B2%E9%A0%81%E5%BE%8C%E7%AB%AFAPI/firebase3.png\"></p>\n<p>這樣一來就把整個環境建立起來了，詳細的專案設定以及Realtime Database的使用方式請查閱<a href=\"https://firebase.google.com/docs/build?authuser=0&hl=zh-tw\">官方文件</a>，由於這些內容不在本篇討論範圍所以就不詳細說明。</p>\n<p>建立專案之後，可以看到資料夾內有一個functions的資料夾，資料夾內有一支名為index.js的檔案，這支檔案就是function撰寫的地方。</p>\n<p><img src=\"/2023/07/08/%E4%BD%BF%E7%94%A8-Firebase-Cloud-Functions-%E5%89%B5%E5%BB%BA%E7%B6%B2%E9%A0%81%E5%BE%8C%E7%AB%AFAPI/firebase4.png\"></p>\n<h2 id=\"開始撰寫function\"><a href=\"#開始撰寫function\" class=\"headerlink\" title=\"開始撰寫function\"></a>開始撰寫function</h2><p>在index.js中，我們可以看到他有提供一些範例程式碼如下，當中需要注意的是筆者使用的版本是v2也就是第二代，跟第一代的寫法會略有不同。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Import function triggers from their respective submodules:</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * const &#123;onCall&#125; = require(&quot;firebase-functions/v2/https&quot;);</span></span><br><span class=\"line\"><span class=\"comment\"> * const &#123;onDocumentWritten&#125; = require(&quot;firebase-functions/v2/firestore&quot;);</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * See a full list of supported triggers at https://firebase.google.com/docs/functions</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> &#123;onRequest&#125; = <span class=\"built_in\">require</span>(<span class=\"string\">&quot;firebase-functions/v2/https&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> logger = <span class=\"built_in\">require</span>(<span class=\"string\">&quot;firebase-functions/logger&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Create and deploy your first functions</span></span><br><span class=\"line\"><span class=\"comment\">// https://firebase.google.com/docs/functions/get-started</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// exports.helloWorld = onRequest((request, response) =&gt; &#123;</span></span><br><span class=\"line\"><span class=\"comment\">//   logger.info(&quot;Hello logs!&quot;, &#123;structuredData: true&#125;);</span></span><br><span class=\"line\"><span class=\"comment\">//   response.send(&quot;Hello from Firebase!&quot;);</span></span><br><span class=\"line\"><span class=\"comment\">// &#125;);</span></span><br></pre></td></tr></table></figure>\n\n<p>其中我們會發現到exports.helloWorld的內容就是建立function的方式，也等於之後我們會用來調用的後端API，而為了能夠被ajax所調用，我們需要使用<strong>onRequest</strong>這個函式，使用方法如下</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> &#123;onRequest, onCall&#125; = <span class=\"built_in\">require</span>(<span class=\"string\">&quot;firebase-functions/v2/https&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> &#123;setGlobalOptions&#125; = <span class=\"built_in\">require</span>(<span class=\"string\">&quot;firebase-functions/v2&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> logger = <span class=\"built_in\">require</span>(<span class=\"string\">&quot;firebase-functions/logger&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">setGlobalOptions</span>(&#123;<span class=\"attr\">region</span>: <span class=\"string\">&quot;asia-east1&quot;</span>&#125;); <span class=\"comment\">// 設定資料中心</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 將數字加上隨機數字1-1000</span></span><br><span class=\"line\"><span class=\"built_in\">exports</span>.<span class=\"property\">addRandomNumber</span> = <span class=\"title function_\">onRequest</span>(&#123;</span><br><span class=\"line\">    <span class=\"attr\">cors</span>: <span class=\"literal\">true</span>, <span class=\"comment\">// 允許跨域</span></span><br><span class=\"line\">  &#125;, <span class=\"function\">(<span class=\"params\">req, res</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> &#123;number&#125; = req.<span class=\"property\">body</span>;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> randomNumber = <span class=\"title class_\">Math</span>.<span class=\"title function_\">floor</span>(<span class=\"title class_\">Math</span>.<span class=\"title function_\">random</span>() * <span class=\"number\">1000</span>) + <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> result = <span class=\"built_in\">parseInt</span>(number, <span class=\"number\">10</span>) + randomNumber;</span><br><span class=\"line\">    res.<span class=\"title function_\">status</span>(<span class=\"number\">200</span>).<span class=\"title function_\">send</span>(&#123;result&#125;); <span class=\"comment\">// 將結果回傳給使用者</span></span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>functions因為儲存在google的雲端運算中心，所以為了得到最好的響應速度，建議設定離自己或是客戶較為接近的資料中心，筆者這裡是設定為 <strong>asia-east1(台灣)</strong> ，若想使用其他的資料中心<a href=\"https://firebase.google.com/docs/functions/locations\"><strong>請參考</strong></a>。<br>上面的程式裡簡單寫了一個function，功能是只要帶數字進來，就會隨機加上一個1-1000的數字並回傳。</p>\n<p>寫完function後，需要將function部署到雲端，請使用以下指令</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">firebase deploy --only <span class=\"built_in\">functions</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/2023/07/08/%E4%BD%BF%E7%94%A8-Firebase-Cloud-Functions-%E5%89%B5%E5%BB%BA%E7%B6%B2%E9%A0%81%E5%BE%8C%E7%AB%AFAPI/firebase7.png\"></p>\n<p>部署成功之後，回到Firebase後台會發現以下的畫面，內容包含了請求所需的網址</p>\n<p><img src=\"/2023/07/08/%E4%BD%BF%E7%94%A8-Firebase-Cloud-Functions-%E5%89%B5%E5%BB%BA%E7%B6%B2%E9%A0%81%E5%BE%8C%E7%AB%AFAPI/firebase8.png\"></p>\n<p>這個網址可以使用 <strong>GET</strong> 、 <strong>POST</strong> 、 <strong>PUT</strong> 、 <strong>DELETE</strong> 和 <strong>OPTIONS</strong> 的HTTP方法進行調用，由於這個function使用req.body接收資料，所以這裡筆者選用POST的方式進行測試。</p>\n<p><img src=\"/2023/07/08/%E4%BD%BF%E7%94%A8-Firebase-Cloud-Functions-%E5%89%B5%E5%BB%BA%E7%B6%B2%E9%A0%81%E5%BE%8C%E7%AB%AFAPI/firebase9.png\"></p>\n<p>使用Postman測試可以發現確實回傳給我隨機的數字，這樣就代表成功了！</p>\n<h2 id=\"補充：如何搭配Realtime-Database\"><a href=\"#補充：如何搭配Realtime-Database\" class=\"headerlink\" title=\"補充：如何搭配Realtime Database\"></a>補充：如何搭配Realtime Database</h2><p>若希望在function內使用Realtime Database做資料的存取，可以使用firebase-admin來協助將資料寫入資料庫</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> &#123;onCall, <span class=\"title class_\">HttpsError</span>&#125; = <span class=\"built_in\">require</span>(<span class=\"string\">&quot;firebase-functions/v2/https&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> &#123;setGlobalOptions&#125; = <span class=\"built_in\">require</span>(<span class=\"string\">&quot;firebase-functions/v2&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> logger = <span class=\"built_in\">require</span>(<span class=\"string\">&quot;firebase-functions/logger&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> admin = <span class=\"built_in\">require</span>(<span class=\"string\">&quot;firebase-admin&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Initialize the app</span></span><br><span class=\"line\">admin.<span class=\"title function_\">initializeApp</span>();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">setGlobalOptions</span>(&#123;<span class=\"attr\">region</span>: <span class=\"string\">&quot;asia-east1&quot;</span>&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>這裡將先前的function修改成會將結果寫入資料庫，主要就是使用 <strong>const db &#x3D; admin.database();</strong> 來將資料庫引入，再執行寫入。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 將數字加上隨機數字1-1000，並存入資料庫</span></span><br><span class=\"line\"><span class=\"built_in\">exports</span>.<span class=\"property\">addRandomNumber</span> = <span class=\"title function_\">onRequest</span>(&#123;</span><br><span class=\"line\">    <span class=\"attr\">cors</span>: <span class=\"literal\">true</span>, <span class=\"comment\">// 允許跨域</span></span><br><span class=\"line\">  &#125;, <span class=\"title function_\">async</span>(req, res) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> &#123;number&#125; = req.<span class=\"property\">body</span>;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> randomNumber = <span class=\"title class_\">Math</span>.<span class=\"title function_\">floor</span>(<span class=\"title class_\">Math</span>.<span class=\"title function_\">random</span>() * <span class=\"number\">1000</span>) + <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> result = <span class=\"built_in\">parseInt</span>(number, <span class=\"number\">10</span>) + randomNumber;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> db = admin.<span class=\"title function_\">database</span>(); <span class=\"comment\">// 引入Realtime Database</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> numberRef = db.<span class=\"title function_\">ref</span>(<span class=\"string\">`number`</span>); <span class=\"comment\">// 定義寫入路徑</span></span><br><span class=\"line\">    <span class=\"keyword\">await</span> numberRef.<span class=\"title function_\">set</span>(result); <span class=\"comment\">// 寫入Realtime Database</span></span><br><span class=\"line\">    res.<span class=\"title function_\">status</span>(<span class=\"number\">200</span>).<span class=\"title function_\">send</span>(&#123;result&#125;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>修改完成後，再使用Postman進行調用，會發現資料庫的數值確實被修改了</p>\n<p><img src=\"/2023/07/08/%E4%BD%BF%E7%94%A8-Firebase-Cloud-Functions-%E5%89%B5%E5%BB%BA%E7%B6%B2%E9%A0%81%E5%BE%8C%E7%AB%AFAPI/firebase10.png\"></p>\n<p><strong>※注意：由於Firebase經常在更新，所以有些內容可能會已過時，若有錯誤還煩請各位朋友告知！</strong></p>\n<p>以上就是這次的全部內容，感謝看到這裡的你！</p>\n<p>參考資料：<br><a href=\"https://firebase.google.com/docs/functions\">官方文件</a></p>\n","site":{"data":{}},"excerpt":"<p><img src=\"/2023/07/08/%E4%BD%BF%E7%94%A8-Firebase-Cloud-Functions-%E5%89%B5%E5%BB%BA%E7%B6%B2%E9%A0%81%E5%BE%8C%E7%AB%AFAPI/cover.jpg\"></p>\n<h2 id=\"Firebase-Cloud-Functions-介紹\"><a href=\"#Firebase-Cloud-Functions-介紹\" class=\"headerlink\" title=\"Firebase Cloud Functions 介紹\"></a>Firebase Cloud Functions 介紹</h2><p><strong>Firebase Cloud Functions</strong> 是 Firebase 的一項服務，能夠讓使用者在不需要考慮伺服器的情況下，建立可以在雲端執行的程式碼，並使用HTTPS或其他Firebase的服務進行調用，","more":"但是若要使用這項服務，必須將專案升級成<a href=\"https://firebase.google.com/pricing\">Blaze Plan</a>才能夠使用，並且調用是需要費用的，但是每個月的免費額度對一般的開發者來說應該是相當夠用了(一個月200萬次呼叫)，費用詳情可以參考<a href=\"https://firebase.google.com/pricing\">這裡</a>，針對請求數、儲存空間、執行時間等都有詳細的價格說明。</p>\n<h2 id=\"開始使用-Firebase-Cloud-Functions\"><a href=\"#開始使用-Firebase-Cloud-Functions\" class=\"headerlink\" title=\"開始使用 Firebase Cloud Functions\"></a>開始使用 Firebase Cloud Functions</h2><p>在使用任何 Firebase 相關的服務時，需要先建立一個專案和網頁應用程式，選擇”新增專案”後，請按照流程往下走把專案建立起來。<br><br><img src=\"/2023/07/08/%E4%BD%BF%E7%94%A8-Firebase-Cloud-Functions-%E5%89%B5%E5%BB%BA%E7%B6%B2%E9%A0%81%E5%BE%8C%E7%AB%AFAPI/firebase1.png\"></p>\n<p>接著，點選網頁建立網頁應用程式，接著輸入應用程式名稱，依照流程跑完。<br><img src=\"/2023/07/08/%E4%BD%BF%E7%94%A8-Firebase-Cloud-Functions-%E5%89%B5%E5%BB%BA%E7%B6%B2%E9%A0%81%E5%BE%8C%E7%AB%AFAPI/firebase5.png\"></p>\n<p>請記得將專案升級至Blaze Plan<br><img src=\"/2023/07/08/%E4%BD%BF%E7%94%A8-Firebase-Cloud-Functions-%E5%89%B5%E5%BB%BA%E7%B6%B2%E9%A0%81%E5%BE%8C%E7%AB%AFAPI/firebase6.png\"></p>\n<h2 id=\"安裝-Firebase-CLI\"><a href=\"#安裝-Firebase-CLI\" class=\"headerlink\" title=\"安裝 Firebase CLI\"></a>安裝 Firebase CLI</h2><p>要使用Firebase Functions還需要在本地安裝 Firebase CLI ，這裡使用NPM的形式做安裝。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g firebase-tools</span><br></pre></td></tr></table></figure>\n\n<p>安裝成功後，需要做身分驗證，請透過以下指令登入</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">firebase login</span><br></pre></td></tr></table></figure>\n\n<p>登入成功之後，請使用以下指令確認帳戶內是否有一開始創建的專案，若沒有請先將專案建立起來並確定專案是否為「<strong>Blaze Plan</strong>」</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">firebase projects:list</span><br></pre></td></tr></table></figure>\n\n<p>確認完專案存在後，需要進行初始化</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">firebase init</span><br></pre></td></tr></table></figure>\n\n<p>輸入指令後，會出現許多問題，請在選擇Firebase服務的問題內，選擇Functions和Realtime Database(本範例會稍微介紹如何使用在Cloud Functions，不一定需要裝)，如下圖</p>\n<p><img src=\"/2023/07/08/%E4%BD%BF%E7%94%A8-Firebase-Cloud-Functions-%E5%89%B5%E5%BB%BA%E7%B6%B2%E9%A0%81%E5%BE%8C%E7%AB%AFAPI/firebase2.png\"></p>\n<p>請選擇Use an existing project並選擇已創建的專案，其他選項則是可以直接一路enter帶過</p>\n<p><img src=\"/2023/07/08/%E4%BD%BF%E7%94%A8-Firebase-Cloud-Functions-%E5%89%B5%E5%BB%BA%E7%B6%B2%E9%A0%81%E5%BE%8C%E7%AB%AFAPI/firebase3.png\"></p>\n<p>這樣一來就把整個環境建立起來了，詳細的專案設定以及Realtime Database的使用方式請查閱<a href=\"https://firebase.google.com/docs/build?authuser=0&hl=zh-tw\">官方文件</a>，由於這些內容不在本篇討論範圍所以就不詳細說明。</p>\n<p>建立專案之後，可以看到資料夾內有一個functions的資料夾，資料夾內有一支名為index.js的檔案，這支檔案就是function撰寫的地方。</p>\n<p><img src=\"/2023/07/08/%E4%BD%BF%E7%94%A8-Firebase-Cloud-Functions-%E5%89%B5%E5%BB%BA%E7%B6%B2%E9%A0%81%E5%BE%8C%E7%AB%AFAPI/firebase4.png\"></p>\n<h2 id=\"開始撰寫function\"><a href=\"#開始撰寫function\" class=\"headerlink\" title=\"開始撰寫function\"></a>開始撰寫function</h2><p>在index.js中，我們可以看到他有提供一些範例程式碼如下，當中需要注意的是筆者使用的版本是v2也就是第二代，跟第一代的寫法會略有不同。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Import function triggers from their respective submodules:</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * const &#123;onCall&#125; = require(&quot;firebase-functions/v2/https&quot;);</span></span><br><span class=\"line\"><span class=\"comment\"> * const &#123;onDocumentWritten&#125; = require(&quot;firebase-functions/v2/firestore&quot;);</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * See a full list of supported triggers at https://firebase.google.com/docs/functions</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> &#123;onRequest&#125; = <span class=\"built_in\">require</span>(<span class=\"string\">&quot;firebase-functions/v2/https&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> logger = <span class=\"built_in\">require</span>(<span class=\"string\">&quot;firebase-functions/logger&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Create and deploy your first functions</span></span><br><span class=\"line\"><span class=\"comment\">// https://firebase.google.com/docs/functions/get-started</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// exports.helloWorld = onRequest((request, response) =&gt; &#123;</span></span><br><span class=\"line\"><span class=\"comment\">//   logger.info(&quot;Hello logs!&quot;, &#123;structuredData: true&#125;);</span></span><br><span class=\"line\"><span class=\"comment\">//   response.send(&quot;Hello from Firebase!&quot;);</span></span><br><span class=\"line\"><span class=\"comment\">// &#125;);</span></span><br></pre></td></tr></table></figure>\n\n<p>其中我們會發現到exports.helloWorld的內容就是建立function的方式，也等於之後我們會用來調用的後端API，而為了能夠被ajax所調用，我們需要使用<strong>onRequest</strong>這個函式，使用方法如下</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> &#123;onRequest, onCall&#125; = <span class=\"built_in\">require</span>(<span class=\"string\">&quot;firebase-functions/v2/https&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> &#123;setGlobalOptions&#125; = <span class=\"built_in\">require</span>(<span class=\"string\">&quot;firebase-functions/v2&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> logger = <span class=\"built_in\">require</span>(<span class=\"string\">&quot;firebase-functions/logger&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">setGlobalOptions</span>(&#123;<span class=\"attr\">region</span>: <span class=\"string\">&quot;asia-east1&quot;</span>&#125;); <span class=\"comment\">// 設定資料中心</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 將數字加上隨機數字1-1000</span></span><br><span class=\"line\"><span class=\"built_in\">exports</span>.<span class=\"property\">addRandomNumber</span> = <span class=\"title function_\">onRequest</span>(&#123;</span><br><span class=\"line\">    <span class=\"attr\">cors</span>: <span class=\"literal\">true</span>, <span class=\"comment\">// 允許跨域</span></span><br><span class=\"line\">  &#125;, <span class=\"function\">(<span class=\"params\">req, res</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> &#123;number&#125; = req.<span class=\"property\">body</span>;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> randomNumber = <span class=\"title class_\">Math</span>.<span class=\"title function_\">floor</span>(<span class=\"title class_\">Math</span>.<span class=\"title function_\">random</span>() * <span class=\"number\">1000</span>) + <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> result = <span class=\"built_in\">parseInt</span>(number, <span class=\"number\">10</span>) + randomNumber;</span><br><span class=\"line\">    res.<span class=\"title function_\">status</span>(<span class=\"number\">200</span>).<span class=\"title function_\">send</span>(&#123;result&#125;); <span class=\"comment\">// 將結果回傳給使用者</span></span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>functions因為儲存在google的雲端運算中心，所以為了得到最好的響應速度，建議設定離自己或是客戶較為接近的資料中心，筆者這裡是設定為 <strong>asia-east1(台灣)</strong> ，若想使用其他的資料中心<a href=\"https://firebase.google.com/docs/functions/locations\"><strong>請參考</strong></a>。<br>上面的程式裡簡單寫了一個function，功能是只要帶數字進來，就會隨機加上一個1-1000的數字並回傳。</p>\n<p>寫完function後，需要將function部署到雲端，請使用以下指令</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">firebase deploy --only <span class=\"built_in\">functions</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/2023/07/08/%E4%BD%BF%E7%94%A8-Firebase-Cloud-Functions-%E5%89%B5%E5%BB%BA%E7%B6%B2%E9%A0%81%E5%BE%8C%E7%AB%AFAPI/firebase7.png\"></p>\n<p>部署成功之後，回到Firebase後台會發現以下的畫面，內容包含了請求所需的網址</p>\n<p><img src=\"/2023/07/08/%E4%BD%BF%E7%94%A8-Firebase-Cloud-Functions-%E5%89%B5%E5%BB%BA%E7%B6%B2%E9%A0%81%E5%BE%8C%E7%AB%AFAPI/firebase8.png\"></p>\n<p>這個網址可以使用 <strong>GET</strong> 、 <strong>POST</strong> 、 <strong>PUT</strong> 、 <strong>DELETE</strong> 和 <strong>OPTIONS</strong> 的HTTP方法進行調用，由於這個function使用req.body接收資料，所以這裡筆者選用POST的方式進行測試。</p>\n<p><img src=\"/2023/07/08/%E4%BD%BF%E7%94%A8-Firebase-Cloud-Functions-%E5%89%B5%E5%BB%BA%E7%B6%B2%E9%A0%81%E5%BE%8C%E7%AB%AFAPI/firebase9.png\"></p>\n<p>使用Postman測試可以發現確實回傳給我隨機的數字，這樣就代表成功了！</p>\n<h2 id=\"補充：如何搭配Realtime-Database\"><a href=\"#補充：如何搭配Realtime-Database\" class=\"headerlink\" title=\"補充：如何搭配Realtime Database\"></a>補充：如何搭配Realtime Database</h2><p>若希望在function內使用Realtime Database做資料的存取，可以使用firebase-admin來協助將資料寫入資料庫</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> &#123;onCall, <span class=\"title class_\">HttpsError</span>&#125; = <span class=\"built_in\">require</span>(<span class=\"string\">&quot;firebase-functions/v2/https&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> &#123;setGlobalOptions&#125; = <span class=\"built_in\">require</span>(<span class=\"string\">&quot;firebase-functions/v2&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> logger = <span class=\"built_in\">require</span>(<span class=\"string\">&quot;firebase-functions/logger&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> admin = <span class=\"built_in\">require</span>(<span class=\"string\">&quot;firebase-admin&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Initialize the app</span></span><br><span class=\"line\">admin.<span class=\"title function_\">initializeApp</span>();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">setGlobalOptions</span>(&#123;<span class=\"attr\">region</span>: <span class=\"string\">&quot;asia-east1&quot;</span>&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>這裡將先前的function修改成會將結果寫入資料庫，主要就是使用 <strong>const db &#x3D; admin.database();</strong> 來將資料庫引入，再執行寫入。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 將數字加上隨機數字1-1000，並存入資料庫</span></span><br><span class=\"line\"><span class=\"built_in\">exports</span>.<span class=\"property\">addRandomNumber</span> = <span class=\"title function_\">onRequest</span>(&#123;</span><br><span class=\"line\">    <span class=\"attr\">cors</span>: <span class=\"literal\">true</span>, <span class=\"comment\">// 允許跨域</span></span><br><span class=\"line\">  &#125;, <span class=\"title function_\">async</span>(req, res) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> &#123;number&#125; = req.<span class=\"property\">body</span>;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> randomNumber = <span class=\"title class_\">Math</span>.<span class=\"title function_\">floor</span>(<span class=\"title class_\">Math</span>.<span class=\"title function_\">random</span>() * <span class=\"number\">1000</span>) + <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> result = <span class=\"built_in\">parseInt</span>(number, <span class=\"number\">10</span>) + randomNumber;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> db = admin.<span class=\"title function_\">database</span>(); <span class=\"comment\">// 引入Realtime Database</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> numberRef = db.<span class=\"title function_\">ref</span>(<span class=\"string\">`number`</span>); <span class=\"comment\">// 定義寫入路徑</span></span><br><span class=\"line\">    <span class=\"keyword\">await</span> numberRef.<span class=\"title function_\">set</span>(result); <span class=\"comment\">// 寫入Realtime Database</span></span><br><span class=\"line\">    res.<span class=\"title function_\">status</span>(<span class=\"number\">200</span>).<span class=\"title function_\">send</span>(&#123;result&#125;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>修改完成後，再使用Postman進行調用，會發現資料庫的數值確實被修改了</p>\n<p><img src=\"/2023/07/08/%E4%BD%BF%E7%94%A8-Firebase-Cloud-Functions-%E5%89%B5%E5%BB%BA%E7%B6%B2%E9%A0%81%E5%BE%8C%E7%AB%AFAPI/firebase10.png\"></p>\n<p><strong>※注意：由於Firebase經常在更新，所以有些內容可能會已過時，若有錯誤還煩請各位朋友告知！</strong></p>\n<p>以上就是這次的全部內容，感謝看到這裡的你！</p>\n<p>參考資料：<br><a href=\"https://firebase.google.com/docs/functions\">官方文件</a></p>"},{"title":"什麼是 GPT Function calling?","date":"2023-10-02T14:56:16.000Z","_content":"\n![](cover.jpg)\n\n## 先了解 OpenAI API\n\n在了解 **GPT Function calling** 之前我們先來談談什麼是 OpenAI API ，OpenAI API是一個由OpenAI所提供便於開發者串接他們的服務(例如GPT-4、whisper等)的API，需要透過OpenAI申請API密鑰後才能夠使用<!-- more -->，並且會根據用量收取費用，詳情可以參考[這裡](https://openai.com/pricing)，而本篇要討論的內容則是OpenAI API 底下的 Chat completions API 內的 Function calling 這個功能，以下統一稱為Function calling。\n\n## Function calling 有什麼特別的\n\n我們在使用一般的 GPT API 時，可能會用來開發一些應用程式，這些應用程式通常都會希望能夠將 GPT API 回傳的內容維持在一定的主題或格式，以避免因為使用者輸入無關的內容導致 GPT API 偏離主題，進而導致程式不可預期的錯誤，而Open AI為此提供的解決方案就是 **Function calling**。\n\nFunction calling 能夠讓 GPT API 回傳我們開發的應用程式看得懂的內容，也就是JSON，它可以大幅度降低因為 GPT API 非預期回傳內容所導致的錯誤。\n\n## 在開始使用 Function calling 前\n\nFunction calling 需要使用到 Chat completions API，而使用這個API可以透過官方提供的現成API網址直接請求，也可以透過Node.js集成至自己的應用程式，這裡為了方便使用所以會直接使用官方提供的現成API網址。\n\n在使用Function calling前，我們可以先使用 https://api.openai.com/v1/chat/completion 這個網址使用POST方法夾帶JSON，並在Authorization中使用Bearer Token帶上從API後台產生的金鑰，發送一個簡易的 Chat completions API 請求，通常會長得像這樣：\n\n```JSON\n{\n    \"model\": \"gpt-3.5-turbo\",\n    \"messages\": [{\"role\": \"system\", \"content\": \"You are a helpful assistant.\"},\n        {\"role\": \"user\", \"content\": \"Who won the world series in 2020?\"},\n        {\"role\": \"assistant\", \"content\": \"The Los Angeles Dodgers won the World Series in 2020.\"},\n        {\"role\": \"user\", \"content\": \"Where was it played?\"}],\n}\n```\n這個請求參數是用來與模型產生對話，model是使用的模型的名稱，messages則是一個陣列，裡面包含了角色與提供給角色的訊息，像是system表示給模型預設的情境、user代表由使用者向模型發問、assistant表示模型回答的內容，user和assistant可以用來將對話紀錄餵給模型。請求送出之後，會得到像這樣的回傳內容：\n\n```JSON\n{\n  \"id\": \"chatcmpl-123\",\n  \"object\": \"chat.completion\",\n  \"created\": 1677652288,\n  \"model\": \"gpt-3.5-turbo-0613\",\n  \"choices\": [{\n    \"index\": 0,\n    \"message\": {\n      \"role\": \"assistant\",\n      \"content\": \"\\n\\nHello there, how may I assist you today?\",\n    },\n    \"finish_reason\": \"stop\"\n  }],\n  \"usage\": {\n    \"prompt_tokens\": 9,\n    \"completion_tokens\": 12,\n    \"total_tokens\": 21\n  }\n}\n```\n\n在message中會回傳模型根據請求所得到的結果，其他參數不在本文討論範圍有興趣可以參考[官方的API文件](https://platform.openai.com/docs/api-reference/chat)。\n\n## 開始使用 Function calling\n\n介紹完 Chat completions API 的使用方法後，我們可以根據上面的請求，做一些修改來完成 Function calling ，如以下所示：\n\n```JSON\n{\n  \"model\": \"gpt-4-0613\",\n  \"messages\": [\n    {\n      \"role\": \"user\",\n      \"content\": \"What is the weather like in Boston?\"\n    }\n  ],\n  \"functions\": [\n    {\n      \"name\": \"get_current_weather\",\n      \"description\": \"Get the current weather in a given location\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"location\": {\n            \"type\": \"string\",\n            \"description\": \"The city and state, e.g. San Francisco, CA\"\n          },\n          \"unit\": {\n            \"type\": \"string\",\n            \"enum\": [\"celsius\", \"fahrenheit\"]\n          }\n        },\n        \"required\": [\"location\"]\n      }\n    }\n  ],\n  \"function_call\": \"auto\"\n}\n```\n\n在使用Function calling的時候首先需要注意的是，至作者撰寫本文當下，Function calling只支援 **gpt-3.5-turbo-0613** 和 **gpt-4-0613** 兩種模型，這兩個模型是官方針對現有的GPT模型進行功能加強的版本。\n與一般請求不同，Function calling 的請求多了functions的參數，這個functions主要的功能是，開發者可以根據自己定義的function，向GPT描述這個functions的功能、參數以及期望GPT給予這個functions的資訊，這樣一來GPT就可以根據這些資訊，產生出符合開發者預期的格式和內容。\n\n上文JSON中的範例，定義了一個名為get_current_weather，這個function的內容，會由開發者自行定義取得天氣的方式，可能是由外部API或其他管道取得，參數的部分，一個是location另一個是unit，其中location是必填的，並且詳細描述了location參數的資料的情境是\"**城市或是州，例如:加利福尼亞洲舊金山**\"，而function_call:auto這個屬性是代表是否調用function由GPT自行決定。\n\n這樣一來GPT就會根據使用者口語的提示詞，來決定要帶怎樣的參數給予get_current_weather這個function，上文JSON中使用者的提示詞為**What is the weather like in Boston?** ，使用者詢問了**Boston**這個城市的天氣，GPT在了解使用者的提示詞以及開發者定義的function後，就會將**Boston**作為location的參數，回傳給應用程式，讓應用程式再去調用天氣API取得**Boston**的天氣，並回傳給使用者，詳細GPT回傳的資料可能會像這樣：\n\n```JSON\n{\n  \"id\": \"chatcmpl-86Cpgi5EZ7rFvEauUnzl65I1X7v1Q\",\n  \"object\": \"chat.completion\",\n  \"created\": 1696489988,\n  \"model\": \"gpt-4-0613\",\n  \"choices\": [\n    {\n      \"index\": 0,\n      \"message\": {\n        \"role\": \"assistant\",\n        \"content\": null,\n        \"function_call\": {\n          \"name\": \"get_current_weather\",\n          \"arguments\": \"{\\n  \\\"location\\\": \\\"Boston\\\"\\n}\"\n        }\n      },\n      \"finish_reason\": \"function_call\"\n    }\n  ],\n  \"usage\": {\n    \"prompt_tokens\": 82,\n    \"completion_tokens\": 16,\n    \"total_tokens\": 98\n  }\n}\n```\n\n這裡再做一個流程總結整理：\n\n1. 定義一個需要GPT提供參數的function\n2. 向GPT描述function的功能、參數、調用情況等\n3. 使用者向GPT提問\n4. GPT根據使用者提示詞、function的資料產生出符合function格式的資料\n5. 開發者將GPT回傳的資料餵給function\n6. function根據參數執行程式\n\n以上為OpenAI的GPT Function calling的使用方式，但是OpenAI目前的更新頻繁，本文僅供參考，若以不符合實際現況，請多見諒，也請各位讀者告知，我會盡量去修改符合最新的使用方式，謝謝！\n\n使用Function calling製作的應用：\n\n**[AI Component](https://6yuwei.com/components)**: 讓你簡易、快速產生出獨一無二的css樣式","source":"_posts/2023-10-02-什麼是-GPT-Function-calling.md","raw":"---\ntitle: 什麼是 GPT Function calling?\ndate: 2023-10-02 22:56:16\ntags: \n- GPT\n- Node.js\n- AI\n---\n\n![](cover.jpg)\n\n## 先了解 OpenAI API\n\n在了解 **GPT Function calling** 之前我們先來談談什麼是 OpenAI API ，OpenAI API是一個由OpenAI所提供便於開發者串接他們的服務(例如GPT-4、whisper等)的API，需要透過OpenAI申請API密鑰後才能夠使用<!-- more -->，並且會根據用量收取費用，詳情可以參考[這裡](https://openai.com/pricing)，而本篇要討論的內容則是OpenAI API 底下的 Chat completions API 內的 Function calling 這個功能，以下統一稱為Function calling。\n\n## Function calling 有什麼特別的\n\n我們在使用一般的 GPT API 時，可能會用來開發一些應用程式，這些應用程式通常都會希望能夠將 GPT API 回傳的內容維持在一定的主題或格式，以避免因為使用者輸入無關的內容導致 GPT API 偏離主題，進而導致程式不可預期的錯誤，而Open AI為此提供的解決方案就是 **Function calling**。\n\nFunction calling 能夠讓 GPT API 回傳我們開發的應用程式看得懂的內容，也就是JSON，它可以大幅度降低因為 GPT API 非預期回傳內容所導致的錯誤。\n\n## 在開始使用 Function calling 前\n\nFunction calling 需要使用到 Chat completions API，而使用這個API可以透過官方提供的現成API網址直接請求，也可以透過Node.js集成至自己的應用程式，這裡為了方便使用所以會直接使用官方提供的現成API網址。\n\n在使用Function calling前，我們可以先使用 https://api.openai.com/v1/chat/completion 這個網址使用POST方法夾帶JSON，並在Authorization中使用Bearer Token帶上從API後台產生的金鑰，發送一個簡易的 Chat completions API 請求，通常會長得像這樣：\n\n```JSON\n{\n    \"model\": \"gpt-3.5-turbo\",\n    \"messages\": [{\"role\": \"system\", \"content\": \"You are a helpful assistant.\"},\n        {\"role\": \"user\", \"content\": \"Who won the world series in 2020?\"},\n        {\"role\": \"assistant\", \"content\": \"The Los Angeles Dodgers won the World Series in 2020.\"},\n        {\"role\": \"user\", \"content\": \"Where was it played?\"}],\n}\n```\n這個請求參數是用來與模型產生對話，model是使用的模型的名稱，messages則是一個陣列，裡面包含了角色與提供給角色的訊息，像是system表示給模型預設的情境、user代表由使用者向模型發問、assistant表示模型回答的內容，user和assistant可以用來將對話紀錄餵給模型。請求送出之後，會得到像這樣的回傳內容：\n\n```JSON\n{\n  \"id\": \"chatcmpl-123\",\n  \"object\": \"chat.completion\",\n  \"created\": 1677652288,\n  \"model\": \"gpt-3.5-turbo-0613\",\n  \"choices\": [{\n    \"index\": 0,\n    \"message\": {\n      \"role\": \"assistant\",\n      \"content\": \"\\n\\nHello there, how may I assist you today?\",\n    },\n    \"finish_reason\": \"stop\"\n  }],\n  \"usage\": {\n    \"prompt_tokens\": 9,\n    \"completion_tokens\": 12,\n    \"total_tokens\": 21\n  }\n}\n```\n\n在message中會回傳模型根據請求所得到的結果，其他參數不在本文討論範圍有興趣可以參考[官方的API文件](https://platform.openai.com/docs/api-reference/chat)。\n\n## 開始使用 Function calling\n\n介紹完 Chat completions API 的使用方法後，我們可以根據上面的請求，做一些修改來完成 Function calling ，如以下所示：\n\n```JSON\n{\n  \"model\": \"gpt-4-0613\",\n  \"messages\": [\n    {\n      \"role\": \"user\",\n      \"content\": \"What is the weather like in Boston?\"\n    }\n  ],\n  \"functions\": [\n    {\n      \"name\": \"get_current_weather\",\n      \"description\": \"Get the current weather in a given location\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"location\": {\n            \"type\": \"string\",\n            \"description\": \"The city and state, e.g. San Francisco, CA\"\n          },\n          \"unit\": {\n            \"type\": \"string\",\n            \"enum\": [\"celsius\", \"fahrenheit\"]\n          }\n        },\n        \"required\": [\"location\"]\n      }\n    }\n  ],\n  \"function_call\": \"auto\"\n}\n```\n\n在使用Function calling的時候首先需要注意的是，至作者撰寫本文當下，Function calling只支援 **gpt-3.5-turbo-0613** 和 **gpt-4-0613** 兩種模型，這兩個模型是官方針對現有的GPT模型進行功能加強的版本。\n與一般請求不同，Function calling 的請求多了functions的參數，這個functions主要的功能是，開發者可以根據自己定義的function，向GPT描述這個functions的功能、參數以及期望GPT給予這個functions的資訊，這樣一來GPT就可以根據這些資訊，產生出符合開發者預期的格式和內容。\n\n上文JSON中的範例，定義了一個名為get_current_weather，這個function的內容，會由開發者自行定義取得天氣的方式，可能是由外部API或其他管道取得，參數的部分，一個是location另一個是unit，其中location是必填的，並且詳細描述了location參數的資料的情境是\"**城市或是州，例如:加利福尼亞洲舊金山**\"，而function_call:auto這個屬性是代表是否調用function由GPT自行決定。\n\n這樣一來GPT就會根據使用者口語的提示詞，來決定要帶怎樣的參數給予get_current_weather這個function，上文JSON中使用者的提示詞為**What is the weather like in Boston?** ，使用者詢問了**Boston**這個城市的天氣，GPT在了解使用者的提示詞以及開發者定義的function後，就會將**Boston**作為location的參數，回傳給應用程式，讓應用程式再去調用天氣API取得**Boston**的天氣，並回傳給使用者，詳細GPT回傳的資料可能會像這樣：\n\n```JSON\n{\n  \"id\": \"chatcmpl-86Cpgi5EZ7rFvEauUnzl65I1X7v1Q\",\n  \"object\": \"chat.completion\",\n  \"created\": 1696489988,\n  \"model\": \"gpt-4-0613\",\n  \"choices\": [\n    {\n      \"index\": 0,\n      \"message\": {\n        \"role\": \"assistant\",\n        \"content\": null,\n        \"function_call\": {\n          \"name\": \"get_current_weather\",\n          \"arguments\": \"{\\n  \\\"location\\\": \\\"Boston\\\"\\n}\"\n        }\n      },\n      \"finish_reason\": \"function_call\"\n    }\n  ],\n  \"usage\": {\n    \"prompt_tokens\": 82,\n    \"completion_tokens\": 16,\n    \"total_tokens\": 98\n  }\n}\n```\n\n這裡再做一個流程總結整理：\n\n1. 定義一個需要GPT提供參數的function\n2. 向GPT描述function的功能、參數、調用情況等\n3. 使用者向GPT提問\n4. GPT根據使用者提示詞、function的資料產生出符合function格式的資料\n5. 開發者將GPT回傳的資料餵給function\n6. function根據參數執行程式\n\n以上為OpenAI的GPT Function calling的使用方式，但是OpenAI目前的更新頻繁，本文僅供參考，若以不符合實際現況，請多見諒，也請各位讀者告知，我會盡量去修改符合最新的使用方式，謝謝！\n\n使用Function calling製作的應用：\n\n**[AI Component](https://6yuwei.com/components)**: 讓你簡易、快速產生出獨一無二的css樣式","slug":"什麼是-GPT-Function-calling","published":1,"updated":"2023-10-05T07:29:56.821Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clok3v81700231wvab137d1wq","content":"<p><img src=\"/2023/10/02/%E4%BB%80%E9%BA%BC%E6%98%AF-GPT-Function-calling/cover.jpg\"></p>\n<h2 id=\"先了解-OpenAI-API\"><a href=\"#先了解-OpenAI-API\" class=\"headerlink\" title=\"先了解 OpenAI API\"></a>先了解 OpenAI API</h2><p>在了解 <strong>GPT Function calling</strong> 之前我們先來談談什麼是 OpenAI API ，OpenAI API是一個由OpenAI所提供便於開發者串接他們的服務(例如GPT-4、whisper等)的API，需要透過OpenAI申請API密鑰後才能夠使用<span id=\"more\"></span>，並且會根據用量收取費用，詳情可以參考<a href=\"https://openai.com/pricing\">這裡</a>，而本篇要討論的內容則是OpenAI API 底下的 Chat completions API 內的 Function calling 這個功能，以下統一稱為Function calling。</p>\n<h2 id=\"Function-calling-有什麼特別的\"><a href=\"#Function-calling-有什麼特別的\" class=\"headerlink\" title=\"Function calling 有什麼特別的\"></a>Function calling 有什麼特別的</h2><p>我們在使用一般的 GPT API 時，可能會用來開發一些應用程式，這些應用程式通常都會希望能夠將 GPT API 回傳的內容維持在一定的主題或格式，以避免因為使用者輸入無關的內容導致 GPT API 偏離主題，進而導致程式不可預期的錯誤，而Open AI為此提供的解決方案就是 <strong>Function calling</strong>。</p>\n<p>Function calling 能夠讓 GPT API 回傳我們開發的應用程式看得懂的內容，也就是JSON，它可以大幅度降低因為 GPT API 非預期回傳內容所導致的錯誤。</p>\n<h2 id=\"在開始使用-Function-calling-前\"><a href=\"#在開始使用-Function-calling-前\" class=\"headerlink\" title=\"在開始使用 Function calling 前\"></a>在開始使用 Function calling 前</h2><p>Function calling 需要使用到 Chat completions API，而使用這個API可以透過官方提供的現成API網址直接請求，也可以透過Node.js集成至自己的應用程式，這裡為了方便使用所以會直接使用官方提供的現成API網址。</p>\n<p>在使用Function calling前，我們可以先使用 <a href=\"https://api.openai.com/v1/chat/completion\">https://api.openai.com/v1/chat/completion</a> 這個網址使用POST方法夾帶JSON，並在Authorization中使用Bearer Token帶上從API後台產生的金鑰，發送一個簡易的 Chat completions API 請求，通常會長得像這樣：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;model&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;gpt-3.5-turbo&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;messages&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span><span class=\"punctuation\">&#123;</span><span class=\"attr\">&quot;role&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;system&quot;</span><span class=\"punctuation\">,</span> <span class=\"attr\">&quot;content&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;You are a helpful assistant.&quot;</span><span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">        <span class=\"punctuation\">&#123;</span><span class=\"attr\">&quot;role&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;user&quot;</span><span class=\"punctuation\">,</span> <span class=\"attr\">&quot;content&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;Who won the world series in 2020?&quot;</span><span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">        <span class=\"punctuation\">&#123;</span><span class=\"attr\">&quot;role&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;assistant&quot;</span><span class=\"punctuation\">,</span> <span class=\"attr\">&quot;content&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;The Los Angeles Dodgers won the World Series in 2020.&quot;</span><span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">        <span class=\"punctuation\">&#123;</span><span class=\"attr\">&quot;role&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;user&quot;</span><span class=\"punctuation\">,</span> <span class=\"attr\">&quot;content&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;Where was it played?&quot;</span><span class=\"punctuation\">&#125;</span><span class=\"punctuation\">]</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n<p>這個請求參數是用來與模型產生對話，model是使用的模型的名稱，messages則是一個陣列，裡面包含了角色與提供給角色的訊息，像是system表示給模型預設的情境、user代表由使用者向模型發問、assistant表示模型回答的內容，user和assistant可以用來將對話紀錄餵給模型。請求送出之後，會得到像這樣的回傳內容：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;id&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;chatcmpl-123&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;object&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;chat.completion&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;created&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">1677652288</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;model&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;gpt-3.5-turbo-0613&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;choices&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;index&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">0</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;message&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;role&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;assistant&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;content&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;\\n\\nHello there, how may I assist you today?&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;finish_reason&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;stop&quot;</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">]</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;usage&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;prompt_tokens&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">9</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;completion_tokens&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">12</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;total_tokens&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">21</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p>在message中會回傳模型根據請求所得到的結果，其他參數不在本文討論範圍有興趣可以參考<a href=\"https://platform.openai.com/docs/api-reference/chat\">官方的API文件</a>。</p>\n<h2 id=\"開始使用-Function-calling\"><a href=\"#開始使用-Function-calling\" class=\"headerlink\" title=\"開始使用 Function calling\"></a>開始使用 Function calling</h2><p>介紹完 Chat completions API 的使用方法後，我們可以根據上面的請求，做一些修改來完成 Function calling ，如以下所示：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;model&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;gpt-4-0613&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;messages&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;role&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;user&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;content&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;What is the weather like in Boston?&quot;</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">  <span class=\"punctuation\">]</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;functions&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;name&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;get_current_weather&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;description&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;Get the current weather in a given location&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;parameters&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;type&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;object&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;properties&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">          <span class=\"attr\">&quot;location&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">            <span class=\"attr\">&quot;type&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;string&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">            <span class=\"attr\">&quot;description&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;The city and state, e.g. San Francisco, CA&quot;</span></span><br><span class=\"line\">          <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">          <span class=\"attr\">&quot;unit&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">            <span class=\"attr\">&quot;type&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;string&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">            <span class=\"attr\">&quot;enum&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span><span class=\"string\">&quot;celsius&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;fahrenheit&quot;</span><span class=\"punctuation\">]</span></span><br><span class=\"line\">          <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">        <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;required&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span><span class=\"string\">&quot;location&quot;</span><span class=\"punctuation\">]</span></span><br><span class=\"line\">      <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">  <span class=\"punctuation\">]</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;function_call&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;auto&quot;</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p>在使用Function calling的時候首先需要注意的是，至作者撰寫本文當下，Function calling只支援 <strong>gpt-3.5-turbo-0613</strong> 和 <strong>gpt-4-0613</strong> 兩種模型，這兩個模型是官方針對現有的GPT模型進行功能加強的版本。<br>與一般請求不同，Function calling 的請求多了functions的參數，這個functions主要的功能是，開發者可以根據自己定義的function，向GPT描述這個functions的功能、參數以及期望GPT給予這個functions的資訊，這樣一來GPT就可以根據這些資訊，產生出符合開發者預期的格式和內容。</p>\n<p>上文JSON中的範例，定義了一個名為get_current_weather，這個function的內容，會由開發者自行定義取得天氣的方式，可能是由外部API或其他管道取得，參數的部分，一個是location另一個是unit，其中location是必填的，並且詳細描述了location參數的資料的情境是”<strong>城市或是州，例如:加利福尼亞洲舊金山</strong>“，而function_call:auto這個屬性是代表是否調用function由GPT自行決定。</p>\n<p>這樣一來GPT就會根據使用者口語的提示詞，來決定要帶怎樣的參數給予get_current_weather這個function，上文JSON中使用者的提示詞為<strong>What is the weather like in Boston?</strong> ，使用者詢問了<strong>Boston</strong>這個城市的天氣，GPT在了解使用者的提示詞以及開發者定義的function後，就會將<strong>Boston</strong>作為location的參數，回傳給應用程式，讓應用程式再去調用天氣API取得<strong>Boston</strong>的天氣，並回傳給使用者，詳細GPT回傳的資料可能會像這樣：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;id&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;chatcmpl-86Cpgi5EZ7rFvEauUnzl65I1X7v1Q&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;object&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;chat.completion&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;created&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">1696489988</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;model&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;gpt-4-0613&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;choices&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;index&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">0</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;message&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;role&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;assistant&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;content&quot;</span><span class=\"punctuation\">:</span> <span class=\"keyword\">null</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;function_call&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">          <span class=\"attr\">&quot;name&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;get_current_weather&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">          <span class=\"attr\">&quot;arguments&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;&#123;\\n  \\&quot;location\\&quot;: \\&quot;Boston\\&quot;\\n&#125;&quot;</span></span><br><span class=\"line\">        <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">      <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;finish_reason&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;function_call&quot;</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">  <span class=\"punctuation\">]</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;usage&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;prompt_tokens&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">82</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;completion_tokens&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">16</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;total_tokens&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">98</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p>這裡再做一個流程總結整理：</p>\n<ol>\n<li>定義一個需要GPT提供參數的function</li>\n<li>向GPT描述function的功能、參數、調用情況等</li>\n<li>使用者向GPT提問</li>\n<li>GPT根據使用者提示詞、function的資料產生出符合function格式的資料</li>\n<li>開發者將GPT回傳的資料餵給function</li>\n<li>function根據參數執行程式</li>\n</ol>\n<p>以上為OpenAI的GPT Function calling的使用方式，但是OpenAI目前的更新頻繁，本文僅供參考，若以不符合實際現況，請多見諒，也請各位讀者告知，我會盡量去修改符合最新的使用方式，謝謝！</p>\n<p>使用Function calling製作的應用：</p>\n<p><strong><a href=\"https://6yuwei.com/components\">AI Component</a></strong>: 讓你簡易、快速產生出獨一無二的css樣式</p>\n","site":{"data":{}},"excerpt":"<p><img src=\"/2023/10/02/%E4%BB%80%E9%BA%BC%E6%98%AF-GPT-Function-calling/cover.jpg\"></p>\n<h2 id=\"先了解-OpenAI-API\"><a href=\"#先了解-OpenAI-API\" class=\"headerlink\" title=\"先了解 OpenAI API\"></a>先了解 OpenAI API</h2><p>在了解 <strong>GPT Function calling</strong> 之前我們先來談談什麼是 OpenAI API ，OpenAI API是一個由OpenAI所提供便於開發者串接他們的服務(例如GPT-4、whisper等)的API，需要透過OpenAI申請API密鑰後才能夠使用","more":"，並且會根據用量收取費用，詳情可以參考<a href=\"https://openai.com/pricing\">這裡</a>，而本篇要討論的內容則是OpenAI API 底下的 Chat completions API 內的 Function calling 這個功能，以下統一稱為Function calling。</p>\n<h2 id=\"Function-calling-有什麼特別的\"><a href=\"#Function-calling-有什麼特別的\" class=\"headerlink\" title=\"Function calling 有什麼特別的\"></a>Function calling 有什麼特別的</h2><p>我們在使用一般的 GPT API 時，可能會用來開發一些應用程式，這些應用程式通常都會希望能夠將 GPT API 回傳的內容維持在一定的主題或格式，以避免因為使用者輸入無關的內容導致 GPT API 偏離主題，進而導致程式不可預期的錯誤，而Open AI為此提供的解決方案就是 <strong>Function calling</strong>。</p>\n<p>Function calling 能夠讓 GPT API 回傳我們開發的應用程式看得懂的內容，也就是JSON，它可以大幅度降低因為 GPT API 非預期回傳內容所導致的錯誤。</p>\n<h2 id=\"在開始使用-Function-calling-前\"><a href=\"#在開始使用-Function-calling-前\" class=\"headerlink\" title=\"在開始使用 Function calling 前\"></a>在開始使用 Function calling 前</h2><p>Function calling 需要使用到 Chat completions API，而使用這個API可以透過官方提供的現成API網址直接請求，也可以透過Node.js集成至自己的應用程式，這裡為了方便使用所以會直接使用官方提供的現成API網址。</p>\n<p>在使用Function calling前，我們可以先使用 <a href=\"https://api.openai.com/v1/chat/completion\">https://api.openai.com/v1/chat/completion</a> 這個網址使用POST方法夾帶JSON，並在Authorization中使用Bearer Token帶上從API後台產生的金鑰，發送一個簡易的 Chat completions API 請求，通常會長得像這樣：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;model&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;gpt-3.5-turbo&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;messages&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span><span class=\"punctuation\">&#123;</span><span class=\"attr\">&quot;role&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;system&quot;</span><span class=\"punctuation\">,</span> <span class=\"attr\">&quot;content&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;You are a helpful assistant.&quot;</span><span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">        <span class=\"punctuation\">&#123;</span><span class=\"attr\">&quot;role&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;user&quot;</span><span class=\"punctuation\">,</span> <span class=\"attr\">&quot;content&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;Who won the world series in 2020?&quot;</span><span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">        <span class=\"punctuation\">&#123;</span><span class=\"attr\">&quot;role&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;assistant&quot;</span><span class=\"punctuation\">,</span> <span class=\"attr\">&quot;content&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;The Los Angeles Dodgers won the World Series in 2020.&quot;</span><span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">        <span class=\"punctuation\">&#123;</span><span class=\"attr\">&quot;role&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;user&quot;</span><span class=\"punctuation\">,</span> <span class=\"attr\">&quot;content&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;Where was it played?&quot;</span><span class=\"punctuation\">&#125;</span><span class=\"punctuation\">]</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n<p>這個請求參數是用來與模型產生對話，model是使用的模型的名稱，messages則是一個陣列，裡面包含了角色與提供給角色的訊息，像是system表示給模型預設的情境、user代表由使用者向模型發問、assistant表示模型回答的內容，user和assistant可以用來將對話紀錄餵給模型。請求送出之後，會得到像這樣的回傳內容：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;id&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;chatcmpl-123&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;object&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;chat.completion&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;created&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">1677652288</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;model&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;gpt-3.5-turbo-0613&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;choices&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;index&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">0</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;message&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;role&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;assistant&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;content&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;\\n\\nHello there, how may I assist you today?&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;finish_reason&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;stop&quot;</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">]</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;usage&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;prompt_tokens&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">9</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;completion_tokens&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">12</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;total_tokens&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">21</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p>在message中會回傳模型根據請求所得到的結果，其他參數不在本文討論範圍有興趣可以參考<a href=\"https://platform.openai.com/docs/api-reference/chat\">官方的API文件</a>。</p>\n<h2 id=\"開始使用-Function-calling\"><a href=\"#開始使用-Function-calling\" class=\"headerlink\" title=\"開始使用 Function calling\"></a>開始使用 Function calling</h2><p>介紹完 Chat completions API 的使用方法後，我們可以根據上面的請求，做一些修改來完成 Function calling ，如以下所示：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;model&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;gpt-4-0613&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;messages&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;role&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;user&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;content&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;What is the weather like in Boston?&quot;</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">  <span class=\"punctuation\">]</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;functions&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;name&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;get_current_weather&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;description&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;Get the current weather in a given location&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;parameters&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;type&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;object&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;properties&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">          <span class=\"attr\">&quot;location&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">            <span class=\"attr\">&quot;type&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;string&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">            <span class=\"attr\">&quot;description&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;The city and state, e.g. San Francisco, CA&quot;</span></span><br><span class=\"line\">          <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">          <span class=\"attr\">&quot;unit&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">            <span class=\"attr\">&quot;type&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;string&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">            <span class=\"attr\">&quot;enum&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span><span class=\"string\">&quot;celsius&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;fahrenheit&quot;</span><span class=\"punctuation\">]</span></span><br><span class=\"line\">          <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">        <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;required&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span><span class=\"string\">&quot;location&quot;</span><span class=\"punctuation\">]</span></span><br><span class=\"line\">      <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">  <span class=\"punctuation\">]</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;function_call&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;auto&quot;</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p>在使用Function calling的時候首先需要注意的是，至作者撰寫本文當下，Function calling只支援 <strong>gpt-3.5-turbo-0613</strong> 和 <strong>gpt-4-0613</strong> 兩種模型，這兩個模型是官方針對現有的GPT模型進行功能加強的版本。<br>與一般請求不同，Function calling 的請求多了functions的參數，這個functions主要的功能是，開發者可以根據自己定義的function，向GPT描述這個functions的功能、參數以及期望GPT給予這個functions的資訊，這樣一來GPT就可以根據這些資訊，產生出符合開發者預期的格式和內容。</p>\n<p>上文JSON中的範例，定義了一個名為get_current_weather，這個function的內容，會由開發者自行定義取得天氣的方式，可能是由外部API或其他管道取得，參數的部分，一個是location另一個是unit，其中location是必填的，並且詳細描述了location參數的資料的情境是”<strong>城市或是州，例如:加利福尼亞洲舊金山</strong>“，而function_call:auto這個屬性是代表是否調用function由GPT自行決定。</p>\n<p>這樣一來GPT就會根據使用者口語的提示詞，來決定要帶怎樣的參數給予get_current_weather這個function，上文JSON中使用者的提示詞為<strong>What is the weather like in Boston?</strong> ，使用者詢問了<strong>Boston</strong>這個城市的天氣，GPT在了解使用者的提示詞以及開發者定義的function後，就會將<strong>Boston</strong>作為location的參數，回傳給應用程式，讓應用程式再去調用天氣API取得<strong>Boston</strong>的天氣，並回傳給使用者，詳細GPT回傳的資料可能會像這樣：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;id&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;chatcmpl-86Cpgi5EZ7rFvEauUnzl65I1X7v1Q&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;object&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;chat.completion&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;created&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">1696489988</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;model&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;gpt-4-0613&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;choices&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;index&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">0</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;message&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;role&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;assistant&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;content&quot;</span><span class=\"punctuation\">:</span> <span class=\"keyword\">null</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;function_call&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">          <span class=\"attr\">&quot;name&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;get_current_weather&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">          <span class=\"attr\">&quot;arguments&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;&#123;\\n  \\&quot;location\\&quot;: \\&quot;Boston\\&quot;\\n&#125;&quot;</span></span><br><span class=\"line\">        <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">      <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;finish_reason&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;function_call&quot;</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">  <span class=\"punctuation\">]</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;usage&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;prompt_tokens&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">82</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;completion_tokens&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">16</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;total_tokens&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">98</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p>這裡再做一個流程總結整理：</p>\n<ol>\n<li>定義一個需要GPT提供參數的function</li>\n<li>向GPT描述function的功能、參數、調用情況等</li>\n<li>使用者向GPT提問</li>\n<li>GPT根據使用者提示詞、function的資料產生出符合function格式的資料</li>\n<li>開發者將GPT回傳的資料餵給function</li>\n<li>function根據參數執行程式</li>\n</ol>\n<p>以上為OpenAI的GPT Function calling的使用方式，但是OpenAI目前的更新頻繁，本文僅供參考，若以不符合實際現況，請多見諒，也請各位讀者告知，我會盡量去修改符合最新的使用方式，謝謝！</p>\n<p>使用Function calling製作的應用：</p>\n<p><strong><a href=\"https://6yuwei.com/components\">AI Component</a></strong>: 讓你簡易、快速產生出獨一無二的css樣式</p>"},{"title":"日語自學也能高效，精選七款AI學習工具大公開","date":"2023-11-07T15:34:17.000Z","_content":"\n![](cover.jpg)\n\n## 前言\n在ChatGPT等先進人工智能技術的崛起下，人們對於AI在日常生活中應用的關注持續上升。其中，AI家教的出現對於語言學習尤其獲得了重大突破，它極大地改變了傳統學習外語的途徑與經濟負擔。以學習日語為例，學習者不再依賴於高昂的學費與地理位置的限制來接觸到母語為日語的老師或語言交換伙伴。AI技術提供了一種新的經濟、高效的學習方式，使得無論在何時何地，學習者都能夠與AI進行互動，獲得即時反饋，並透過個性化學習計劃來加強語言能力。\n\n<!-- more -->\n\n那就讓我直入正題，介紹七款引人注目的日文AI學習工具。我將迅速帶你認識這些工具的關鍵優勢，幫助你快速找到適合你的工具。\n\n## [**1. 今話したい**](https://apps.apple.com/tw/app/%E4%BB%8A%E8%A9%B1%E3%81%97%E3%81%9F%E3%81%84-%E4%BE%86%E8%AA%AA%E6%97%A5%E6%96%87%E8%88%87%E8%8B%B1%E6%96%87%E5%90%A7/id1439727086?platform=ipad)\n\n![](imahanashitai.webp)\n\n今話したい是一款幫助使用者練習口說的APP，它能夠透過AI語音辨識技術來判斷使用者的發音是否準確，並為使用者評分。\n使用者可以設定目標，並透過每日的練習來達成目標。\n此外，這個APP還提供了類似RPG的等級系統，使用者可以透過口說的評價，來獲得經驗值，讓使用者在升級的過程中，逐漸提升自己的口說能力。\n我自己也經常使用這個APP，我認為這款APP對我的日語口說能力有很大的幫助，讓我確實感受到自己的進步。\n\n**價格： <span style=\"color:#c13232\">免費 | 70元新台幣(買斷)</span>**\n<br>\n\n## [**2. Voice Contaol for ChatGPT**](https://chrome.google.com/webstore/detail/voice-control-for-chatgpt/eollffkcakegifhacjnlnegohfdlidhn)\n\n![](voice_control.png)\n\nVoice Control for ChatGPT是一款基於ChatGPT的Chrome擴充插件，它能夠透過語音辨識技術，將使用者的語音轉換為文字，並透過ChatGPT回應的文字轉換為語音，讓使用者與ChatGPT進行語音對話。\n也就是說，我可以在沒有日文的環境中，透過這款擴充插件來與ChatGPT進行日文對話，並且完全免費。\n這款擴充插件的使用方式非常簡單，只需要在Chrome瀏覽器中安裝這款擴充插件，然後在ChatGPT的網頁中就會出現相對應的介面，讓你可以開始與ChatGPT進行語音對話。\n但是如果你想要同時使用兩種語言，例如中文與日文，那麼你需要將介面切換到你想說的語言，才能夠識別你的語音，並且有時候AI回應的內容會偏向其中一種語言，導致你如果看不懂AI回應的內容，會需要額外的翻譯工具來幫助你。\n\n**價格： <span style=\"color:#c13232\">免費 | 20美金(ChatGPT PLUS)</span>**\n<br>\n\n## [**3. TalkBerry**](https://www.talkberry.ai/)\n\n![](app.talkberry.ai.png)\n\nTalkBerry是一個網頁應用程式，它提供了許多個性鮮明的AI角色以及各式各樣的對話場景，讓使用者可以透過這些AI角色來進行日文對話練習。除了日文，它還支援了英文、韓文、中文等多種語言。\n在對話的過程中，如果不知道對話該如何繼續下去，使用者可以透過AI提供的多個提示來獲得靈感，幫助使用者繼續對話。如果想知道自己的對話是否符合日文的文法，使用者可以透過AI提供的文法檢查功能來檢查自己的對話是否符合日文的文法。\n此外，我認為TalkBarry最大的優勢就是它的價格，它不僅提供了每天免費的對話次數，還提供了低廉的月費方案，讓使用者可以在不花費太多金錢的情況下，享受到高品質的日文對話練習。\n\n**價格： <span style=\"color:#c13232\">免費每天10個對話 | 8美金/月 | 60 美金/年</span>**\n<br>\n\n## [**4. SpeakAI**](https://https://speakai.cc/)\n\n![](speakai.cc.png)\n\nSpeakAI是一款支援多種語言的AI學習APP，它跟我先前提到的TalkBerry有異曲同工之妙，它也提供了許多個性鮮明的AI角色以及各式各樣的對話場景，讓使用者可以透過這些AI角色來進行日文對話練習。除此之外，SpeakAI還有一個非常特別的功能，那就是他可以模擬通電話的情境，進入這個模式後，手機的畫面就會變成通話的畫面，使用者可以像是在跟日本人通電話一樣，進行日文對話練習，而且並不會有太多的延遲。\n\n\n**價格： <span style=\"color:#c13232\">免費有限次數 | 200新台幣/月 | 390新台幣/季 | 1290新台幣/年 | 2990新台幣/買斷</span>**\n<br>\n\n## [**5. 日文口說老師Aoi：日文口說會話智慧學習**](https://apps.apple.com/tw/app/%E6%97%A5%E6%96%87%E5%8F%A3%E8%AA%AA%E8%80%81%E5%B8%ABaoi-%E6%97%A5%E6%96%87%E5%8F%A3%E8%AA%AA%E6%9C%83%E8%A9%B1%E6%99%BA%E6%85%A7%E5%AD%B8%E7%BF%92/id1639964534)\n\n![](aoi.png)\n\n日文口說老師Aoi是一款專業的AI日文學習APP，它提供了不同的生活情境，使用AI模擬，並且為使用者設定在這個情境中需要達成的目標，在與AI的對話完成後，AI會根據對話內容判斷使用者是否達成目標，並且給予使用者相對應的評價。\n我認為這是非常有效的學習方式，因為它很接近真實的使用情境，所以如果長時間的使用這款APP，我相信日文口說能力一定會有很大的進步。\n這個APP還提供了影片學習的功能，根據社交網路上常見的影片，逐字翻譯成日文之外還會根據影片內容出一些小測驗，讓使用者可以透過影片來學習日文。\n\n**價格： <span style=\"color:#c13232\">免費 | 影片會員 90新台幣/月 | 智能口說會員 590新台幣/月 | 智能口說會員 2490新台幣/年</span>**\n<br>\n\n## [**6. Talkio AI**](https://talkio.ai/)\n\n![](talkio.ai.png)\n\nTalkio AI是一款語言學習的網頁應用程式，它提供了許多個性鮮明的AI角色可以與之對話，並且支援100種以上的語言，除此之外它提供了三種模式來幫助使用者學習，分別是自由交談模式、角色扮演模式以及主題對話模式。整體來看跟先前的TalkBerry相似，但是在付費方案上有些許的不同，Talkio AI提供了7天的免費試用期外，每個方案都是以月為單位計算，方案之間的差別只有在使用量，所以使用者可以根據自己的練習量來選擇適合自己的方案。\n\n**價格： <span style=\"color:#c13232\">9美金/月(300,000 spoken characters) | 19美金/月(700,000 spoken characters) | 49美金/月(2,000,000 spoken characters)</span>**\n<br>\n\n## [**7. Langotalk**](https://www.langotalk.org/)\n\n![](www.langotalk.org_Lobby.png)\n\nLangotalk是一款專業的AI語言學習網頁應用程式，這款應用程式相較於先前的AI工具，它給人的感覺更為專業，擁有易用且美觀的介面之外，學習的課程也較為系統性，像是它也包含了單字及文法的教學，所以彌補了一般AI具的短板。而比較需要注意的是，雖然它的系統有支援中文，但是中文是使用Google翻譯來協助翻譯，所以翻譯的品質可能不是很好，但是如果你想要一個專業的AI語言學習工具，那麼Langotalk絕對是不容錯過的。\n\n**價格： <span style=\"color:#c13232\">19.99美金/月 | 79.99美金/年</span>**\n<br>\n\n## 整理七種工具的比較表格\n\n| 工具名稱 | AI角色 | 語音對話 | 文法檢查 | 價格 | 有免費方案 |\n| -------- | ------ | -------- | -------- | -------- | ---- | \n| 今話したい | ❌ | ✅ | ❌ | **<span style=\"color:#c13232\">免費、70元新台幣(買斷)</span>** | ✅ |\n| Voice Contaol for ChatGPT | ❌ | ✅ | ✅ | **<span style=\"color:#c13232\">免費、20美金(ChatGPT PLUS)</span>** | ✅ |\n| TalkBerry | ✅ | ✅ | ✅ | **<span style=\"color:#c13232\">免費10個對話、8美金/月、60 美金/年</span>** | ❌ |\n| SpeakAI | ✅ | ✅ | ✅ | **<span style=\"color:#c13232\">style=\"color:#c13232\">免費有限次數、200新台幣/月、390新台幣/季、1290新台幣/年、2990新台幣/買斷</span>** | ❌ |\n| 日文口說老師Aoi | ✅ | ✅ | ✅ | **<span style=\"color:#c13232\">style=\"color:#c13232\">免費、影片會員 90新台幣/月、智能口說會員 590新台幣/月、智能口說會員 2490新台幣/年</span>** | ✅ |\n| Talkio AI | ✅ | ✅ | ✅ | **<span style=\"color:#c13232\">9美金/月(300,000 spoken characters)、19美金/月(700,000 spoken characters)、49美金/月(2,000,000 spoken characters)</span>** | ❌ |\n| Langotalk | ✅ | ✅ | ✅ | **<span style=\"color:#c13232\">19.99美金/月、79.99美金/年</span>** | ❌ |\n","source":"_posts/2023-11-07-日語自學也能高效，精選七款AI學習工具大公開.md","raw":"---\ntitle: 日語自學也能高效，精選七款AI學習工具大公開\ndate: 2023-11-07 23:34:17\ntags:\n- Japanese\n- AI\n---\n\n![](cover.jpg)\n\n## 前言\n在ChatGPT等先進人工智能技術的崛起下，人們對於AI在日常生活中應用的關注持續上升。其中，AI家教的出現對於語言學習尤其獲得了重大突破，它極大地改變了傳統學習外語的途徑與經濟負擔。以學習日語為例，學習者不再依賴於高昂的學費與地理位置的限制來接觸到母語為日語的老師或語言交換伙伴。AI技術提供了一種新的經濟、高效的學習方式，使得無論在何時何地，學習者都能夠與AI進行互動，獲得即時反饋，並透過個性化學習計劃來加強語言能力。\n\n<!-- more -->\n\n那就讓我直入正題，介紹七款引人注目的日文AI學習工具。我將迅速帶你認識這些工具的關鍵優勢，幫助你快速找到適合你的工具。\n\n## [**1. 今話したい**](https://apps.apple.com/tw/app/%E4%BB%8A%E8%A9%B1%E3%81%97%E3%81%9F%E3%81%84-%E4%BE%86%E8%AA%AA%E6%97%A5%E6%96%87%E8%88%87%E8%8B%B1%E6%96%87%E5%90%A7/id1439727086?platform=ipad)\n\n![](imahanashitai.webp)\n\n今話したい是一款幫助使用者練習口說的APP，它能夠透過AI語音辨識技術來判斷使用者的發音是否準確，並為使用者評分。\n使用者可以設定目標，並透過每日的練習來達成目標。\n此外，這個APP還提供了類似RPG的等級系統，使用者可以透過口說的評價，來獲得經驗值，讓使用者在升級的過程中，逐漸提升自己的口說能力。\n我自己也經常使用這個APP，我認為這款APP對我的日語口說能力有很大的幫助，讓我確實感受到自己的進步。\n\n**價格： <span style=\"color:#c13232\">免費 | 70元新台幣(買斷)</span>**\n<br>\n\n## [**2. Voice Contaol for ChatGPT**](https://chrome.google.com/webstore/detail/voice-control-for-chatgpt/eollffkcakegifhacjnlnegohfdlidhn)\n\n![](voice_control.png)\n\nVoice Control for ChatGPT是一款基於ChatGPT的Chrome擴充插件，它能夠透過語音辨識技術，將使用者的語音轉換為文字，並透過ChatGPT回應的文字轉換為語音，讓使用者與ChatGPT進行語音對話。\n也就是說，我可以在沒有日文的環境中，透過這款擴充插件來與ChatGPT進行日文對話，並且完全免費。\n這款擴充插件的使用方式非常簡單，只需要在Chrome瀏覽器中安裝這款擴充插件，然後在ChatGPT的網頁中就會出現相對應的介面，讓你可以開始與ChatGPT進行語音對話。\n但是如果你想要同時使用兩種語言，例如中文與日文，那麼你需要將介面切換到你想說的語言，才能夠識別你的語音，並且有時候AI回應的內容會偏向其中一種語言，導致你如果看不懂AI回應的內容，會需要額外的翻譯工具來幫助你。\n\n**價格： <span style=\"color:#c13232\">免費 | 20美金(ChatGPT PLUS)</span>**\n<br>\n\n## [**3. TalkBerry**](https://www.talkberry.ai/)\n\n![](app.talkberry.ai.png)\n\nTalkBerry是一個網頁應用程式，它提供了許多個性鮮明的AI角色以及各式各樣的對話場景，讓使用者可以透過這些AI角色來進行日文對話練習。除了日文，它還支援了英文、韓文、中文等多種語言。\n在對話的過程中，如果不知道對話該如何繼續下去，使用者可以透過AI提供的多個提示來獲得靈感，幫助使用者繼續對話。如果想知道自己的對話是否符合日文的文法，使用者可以透過AI提供的文法檢查功能來檢查自己的對話是否符合日文的文法。\n此外，我認為TalkBarry最大的優勢就是它的價格，它不僅提供了每天免費的對話次數，還提供了低廉的月費方案，讓使用者可以在不花費太多金錢的情況下，享受到高品質的日文對話練習。\n\n**價格： <span style=\"color:#c13232\">免費每天10個對話 | 8美金/月 | 60 美金/年</span>**\n<br>\n\n## [**4. SpeakAI**](https://https://speakai.cc/)\n\n![](speakai.cc.png)\n\nSpeakAI是一款支援多種語言的AI學習APP，它跟我先前提到的TalkBerry有異曲同工之妙，它也提供了許多個性鮮明的AI角色以及各式各樣的對話場景，讓使用者可以透過這些AI角色來進行日文對話練習。除此之外，SpeakAI還有一個非常特別的功能，那就是他可以模擬通電話的情境，進入這個模式後，手機的畫面就會變成通話的畫面，使用者可以像是在跟日本人通電話一樣，進行日文對話練習，而且並不會有太多的延遲。\n\n\n**價格： <span style=\"color:#c13232\">免費有限次數 | 200新台幣/月 | 390新台幣/季 | 1290新台幣/年 | 2990新台幣/買斷</span>**\n<br>\n\n## [**5. 日文口說老師Aoi：日文口說會話智慧學習**](https://apps.apple.com/tw/app/%E6%97%A5%E6%96%87%E5%8F%A3%E8%AA%AA%E8%80%81%E5%B8%ABaoi-%E6%97%A5%E6%96%87%E5%8F%A3%E8%AA%AA%E6%9C%83%E8%A9%B1%E6%99%BA%E6%85%A7%E5%AD%B8%E7%BF%92/id1639964534)\n\n![](aoi.png)\n\n日文口說老師Aoi是一款專業的AI日文學習APP，它提供了不同的生活情境，使用AI模擬，並且為使用者設定在這個情境中需要達成的目標，在與AI的對話完成後，AI會根據對話內容判斷使用者是否達成目標，並且給予使用者相對應的評價。\n我認為這是非常有效的學習方式，因為它很接近真實的使用情境，所以如果長時間的使用這款APP，我相信日文口說能力一定會有很大的進步。\n這個APP還提供了影片學習的功能，根據社交網路上常見的影片，逐字翻譯成日文之外還會根據影片內容出一些小測驗，讓使用者可以透過影片來學習日文。\n\n**價格： <span style=\"color:#c13232\">免費 | 影片會員 90新台幣/月 | 智能口說會員 590新台幣/月 | 智能口說會員 2490新台幣/年</span>**\n<br>\n\n## [**6. Talkio AI**](https://talkio.ai/)\n\n![](talkio.ai.png)\n\nTalkio AI是一款語言學習的網頁應用程式，它提供了許多個性鮮明的AI角色可以與之對話，並且支援100種以上的語言，除此之外它提供了三種模式來幫助使用者學習，分別是自由交談模式、角色扮演模式以及主題對話模式。整體來看跟先前的TalkBerry相似，但是在付費方案上有些許的不同，Talkio AI提供了7天的免費試用期外，每個方案都是以月為單位計算，方案之間的差別只有在使用量，所以使用者可以根據自己的練習量來選擇適合自己的方案。\n\n**價格： <span style=\"color:#c13232\">9美金/月(300,000 spoken characters) | 19美金/月(700,000 spoken characters) | 49美金/月(2,000,000 spoken characters)</span>**\n<br>\n\n## [**7. Langotalk**](https://www.langotalk.org/)\n\n![](www.langotalk.org_Lobby.png)\n\nLangotalk是一款專業的AI語言學習網頁應用程式，這款應用程式相較於先前的AI工具，它給人的感覺更為專業，擁有易用且美觀的介面之外，學習的課程也較為系統性，像是它也包含了單字及文法的教學，所以彌補了一般AI具的短板。而比較需要注意的是，雖然它的系統有支援中文，但是中文是使用Google翻譯來協助翻譯，所以翻譯的品質可能不是很好，但是如果你想要一個專業的AI語言學習工具，那麼Langotalk絕對是不容錯過的。\n\n**價格： <span style=\"color:#c13232\">19.99美金/月 | 79.99美金/年</span>**\n<br>\n\n## 整理七種工具的比較表格\n\n| 工具名稱 | AI角色 | 語音對話 | 文法檢查 | 價格 | 有免費方案 |\n| -------- | ------ | -------- | -------- | -------- | ---- | \n| 今話したい | ❌ | ✅ | ❌ | **<span style=\"color:#c13232\">免費、70元新台幣(買斷)</span>** | ✅ |\n| Voice Contaol for ChatGPT | ❌ | ✅ | ✅ | **<span style=\"color:#c13232\">免費、20美金(ChatGPT PLUS)</span>** | ✅ |\n| TalkBerry | ✅ | ✅ | ✅ | **<span style=\"color:#c13232\">免費10個對話、8美金/月、60 美金/年</span>** | ❌ |\n| SpeakAI | ✅ | ✅ | ✅ | **<span style=\"color:#c13232\">style=\"color:#c13232\">免費有限次數、200新台幣/月、390新台幣/季、1290新台幣/年、2990新台幣/買斷</span>** | ❌ |\n| 日文口說老師Aoi | ✅ | ✅ | ✅ | **<span style=\"color:#c13232\">style=\"color:#c13232\">免費、影片會員 90新台幣/月、智能口說會員 590新台幣/月、智能口說會員 2490新台幣/年</span>** | ✅ |\n| Talkio AI | ✅ | ✅ | ✅ | **<span style=\"color:#c13232\">9美金/月(300,000 spoken characters)、19美金/月(700,000 spoken characters)、49美金/月(2,000,000 spoken characters)</span>** | ❌ |\n| Langotalk | ✅ | ✅ | ✅ | **<span style=\"color:#c13232\">19.99美金/月、79.99美金/年</span>** | ❌ |\n","slug":"日語自學也能高效，精選七款AI學習工具大公開","published":1,"updated":"2023-11-12T10:01:37.973Z","_id":"clooif6d00000kcvafimvbtn6","comments":1,"layout":"post","photos":[],"link":"","content":"<p><img src=\"/2023/11/07/%E6%97%A5%E8%AA%9E%E8%87%AA%E5%AD%B8%E4%B9%9F%E8%83%BD%E9%AB%98%E6%95%88%EF%BC%8C%E7%B2%BE%E9%81%B8%E4%B8%83%E6%AC%BEAI%E5%AD%B8%E7%BF%92%E5%B7%A5%E5%85%B7%E5%A4%A7%E5%85%AC%E9%96%8B/cover.jpg\"></p>\n<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>在ChatGPT等先進人工智能技術的崛起下，人們對於AI在日常生活中應用的關注持續上升。其中，AI家教的出現對於語言學習尤其獲得了重大突破，它極大地改變了傳統學習外語的途徑與經濟負擔。以學習日語為例，學習者不再依賴於高昂的學費與地理位置的限制來接觸到母語為日語的老師或語言交換伙伴。AI技術提供了一種新的經濟、高效的學習方式，使得無論在何時何地，學習者都能夠與AI進行互動，獲得即時反饋，並透過個性化學習計劃來加強語言能力。</p>\n<span id=\"more\"></span>\n\n<p>那就讓我直入正題，介紹七款引人注目的日文AI學習工具。我將迅速帶你認識這些工具的關鍵優勢，幫助你快速找到適合你的工具。</p>\n<h2 id=\"1-今話したい\"><a href=\"#1-今話したい\" class=\"headerlink\" title=\"1. 今話したい\"></a><a href=\"https://apps.apple.com/tw/app/%E4%BB%8A%E8%A9%B1%E3%81%97%E3%81%9F%E3%81%84-%E4%BE%86%E8%AA%AA%E6%97%A5%E6%96%87%E8%88%87%E8%8B%B1%E6%96%87%E5%90%A7/id1439727086?platform=ipad\"><strong>1. 今話したい</strong></a></h2><p><img src=\"/2023/11/07/%E6%97%A5%E8%AA%9E%E8%87%AA%E5%AD%B8%E4%B9%9F%E8%83%BD%E9%AB%98%E6%95%88%EF%BC%8C%E7%B2%BE%E9%81%B8%E4%B8%83%E6%AC%BEAI%E5%AD%B8%E7%BF%92%E5%B7%A5%E5%85%B7%E5%A4%A7%E5%85%AC%E9%96%8B/imahanashitai.webp\"></p>\n<p>今話したい是一款幫助使用者練習口說的APP，它能夠透過AI語音辨識技術來判斷使用者的發音是否準確，並為使用者評分。<br>使用者可以設定目標，並透過每日的練習來達成目標。<br>此外，這個APP還提供了類似RPG的等級系統，使用者可以透過口說的評價，來獲得經驗值，讓使用者在升級的過程中，逐漸提升自己的口說能力。<br>我自己也經常使用這個APP，我認為這款APP對我的日語口說能力有很大的幫助，讓我確實感受到自己的進步。</p>\n<p><strong>價格： <span style=\"color:#c13232\">免費 | 70元新台幣(買斷)</span></strong><br><br></p>\n<h2 id=\"2-Voice-Contaol-for-ChatGPT\"><a href=\"#2-Voice-Contaol-for-ChatGPT\" class=\"headerlink\" title=\"2. Voice Contaol for ChatGPT\"></a><a href=\"https://chrome.google.com/webstore/detail/voice-control-for-chatgpt/eollffkcakegifhacjnlnegohfdlidhn\"><strong>2. Voice Contaol for ChatGPT</strong></a></h2><p><img src=\"/2023/11/07/%E6%97%A5%E8%AA%9E%E8%87%AA%E5%AD%B8%E4%B9%9F%E8%83%BD%E9%AB%98%E6%95%88%EF%BC%8C%E7%B2%BE%E9%81%B8%E4%B8%83%E6%AC%BEAI%E5%AD%B8%E7%BF%92%E5%B7%A5%E5%85%B7%E5%A4%A7%E5%85%AC%E9%96%8B/voice_control.png\"></p>\n<p>Voice Control for ChatGPT是一款基於ChatGPT的Chrome擴充插件，它能夠透過語音辨識技術，將使用者的語音轉換為文字，並透過ChatGPT回應的文字轉換為語音，讓使用者與ChatGPT進行語音對話。<br>也就是說，我可以在沒有日文的環境中，透過這款擴充插件來與ChatGPT進行日文對話，並且完全免費。<br>這款擴充插件的使用方式非常簡單，只需要在Chrome瀏覽器中安裝這款擴充插件，然後在ChatGPT的網頁中就會出現相對應的介面，讓你可以開始與ChatGPT進行語音對話。<br>但是如果你想要同時使用兩種語言，例如中文與日文，那麼你需要將介面切換到你想說的語言，才能夠識別你的語音，並且有時候AI回應的內容會偏向其中一種語言，導致你如果看不懂AI回應的內容，會需要額外的翻譯工具來幫助你。</p>\n<p><strong>價格： <span style=\"color:#c13232\">免費 | 20美金(ChatGPT PLUS)</span></strong><br><br></p>\n<h2 id=\"3-TalkBerry\"><a href=\"#3-TalkBerry\" class=\"headerlink\" title=\"3. TalkBerry\"></a><a href=\"https://www.talkberry.ai/\"><strong>3. TalkBerry</strong></a></h2><p><img src=\"/2023/11/07/%E6%97%A5%E8%AA%9E%E8%87%AA%E5%AD%B8%E4%B9%9F%E8%83%BD%E9%AB%98%E6%95%88%EF%BC%8C%E7%B2%BE%E9%81%B8%E4%B8%83%E6%AC%BEAI%E5%AD%B8%E7%BF%92%E5%B7%A5%E5%85%B7%E5%A4%A7%E5%85%AC%E9%96%8B/app.talkberry.ai.png\"></p>\n<p>TalkBerry是一個網頁應用程式，它提供了許多個性鮮明的AI角色以及各式各樣的對話場景，讓使用者可以透過這些AI角色來進行日文對話練習。除了日文，它還支援了英文、韓文、中文等多種語言。<br>在對話的過程中，如果不知道對話該如何繼續下去，使用者可以透過AI提供的多個提示來獲得靈感，幫助使用者繼續對話。如果想知道自己的對話是否符合日文的文法，使用者可以透過AI提供的文法檢查功能來檢查自己的對話是否符合日文的文法。<br>此外，我認為TalkBarry最大的優勢就是它的價格，它不僅提供了每天免費的對話次數，還提供了低廉的月費方案，讓使用者可以在不花費太多金錢的情況下，享受到高品質的日文對話練習。</p>\n<p><strong>價格： <span style=\"color:#c13232\">免費每天10個對話 | 8美金&#x2F;月 | 60 美金&#x2F;年</span></strong><br><br></p>\n<h2 id=\"4-SpeakAI\"><a href=\"#4-SpeakAI\" class=\"headerlink\" title=\"4. SpeakAI\"></a><a href=\"https://https//speakai.cc/\"><strong>4. SpeakAI</strong></a></h2><p><img src=\"/2023/11/07/%E6%97%A5%E8%AA%9E%E8%87%AA%E5%AD%B8%E4%B9%9F%E8%83%BD%E9%AB%98%E6%95%88%EF%BC%8C%E7%B2%BE%E9%81%B8%E4%B8%83%E6%AC%BEAI%E5%AD%B8%E7%BF%92%E5%B7%A5%E5%85%B7%E5%A4%A7%E5%85%AC%E9%96%8B/speakai.cc.png\"></p>\n<p>SpeakAI是一款支援多種語言的AI學習APP，它跟我先前提到的TalkBerry有異曲同工之妙，它也提供了許多個性鮮明的AI角色以及各式各樣的對話場景，讓使用者可以透過這些AI角色來進行日文對話練習。除此之外，SpeakAI還有一個非常特別的功能，那就是他可以模擬通電話的情境，進入這個模式後，手機的畫面就會變成通話的畫面，使用者可以像是在跟日本人通電話一樣，進行日文對話練習，而且並不會有太多的延遲。</p>\n<p><strong>價格： <span style=\"color:#c13232\">免費有限次數 | 200新台幣&#x2F;月 | 390新台幣&#x2F;季 | 1290新台幣&#x2F;年 | 2990新台幣&#x2F;買斷</span></strong><br><br></p>\n<h2 id=\"5-日文口說老師Aoi：日文口說會話智慧學習\"><a href=\"#5-日文口說老師Aoi：日文口說會話智慧學習\" class=\"headerlink\" title=\"5. 日文口說老師Aoi：日文口說會話智慧學習\"></a><a href=\"https://apps.apple.com/tw/app/%E6%97%A5%E6%96%87%E5%8F%A3%E8%AA%AA%E8%80%81%E5%B8%ABaoi-%E6%97%A5%E6%96%87%E5%8F%A3%E8%AA%AA%E6%9C%83%E8%A9%B1%E6%99%BA%E6%85%A7%E5%AD%B8%E7%BF%92/id1639964534\"><strong>5. 日文口說老師Aoi：日文口說會話智慧學習</strong></a></h2><p><img src=\"/2023/11/07/%E6%97%A5%E8%AA%9E%E8%87%AA%E5%AD%B8%E4%B9%9F%E8%83%BD%E9%AB%98%E6%95%88%EF%BC%8C%E7%B2%BE%E9%81%B8%E4%B8%83%E6%AC%BEAI%E5%AD%B8%E7%BF%92%E5%B7%A5%E5%85%B7%E5%A4%A7%E5%85%AC%E9%96%8B/aoi.png\"></p>\n<p>日文口說老師Aoi是一款專業的AI日文學習APP，它提供了不同的生活情境，使用AI模擬，並且為使用者設定在這個情境中需要達成的目標，在與AI的對話完成後，AI會根據對話內容判斷使用者是否達成目標，並且給予使用者相對應的評價。<br>我認為這是非常有效的學習方式，因為它很接近真實的使用情境，所以如果長時間的使用這款APP，我相信日文口說能力一定會有很大的進步。<br>這個APP還提供了影片學習的功能，根據社交網路上常見的影片，逐字翻譯成日文之外還會根據影片內容出一些小測驗，讓使用者可以透過影片來學習日文。</p>\n<p><strong>價格： <span style=\"color:#c13232\">免費 | 影片會員 90新台幣&#x2F;月 | 智能口說會員 590新台幣&#x2F;月 | 智能口說會員 2490新台幣&#x2F;年</span></strong><br><br></p>\n<h2 id=\"6-Talkio-AI\"><a href=\"#6-Talkio-AI\" class=\"headerlink\" title=\"6. Talkio AI\"></a><a href=\"https://talkio.ai/\"><strong>6. Talkio AI</strong></a></h2><p><img src=\"/2023/11/07/%E6%97%A5%E8%AA%9E%E8%87%AA%E5%AD%B8%E4%B9%9F%E8%83%BD%E9%AB%98%E6%95%88%EF%BC%8C%E7%B2%BE%E9%81%B8%E4%B8%83%E6%AC%BEAI%E5%AD%B8%E7%BF%92%E5%B7%A5%E5%85%B7%E5%A4%A7%E5%85%AC%E9%96%8B/talkio.ai.png\"></p>\n<p>Talkio AI是一款語言學習的網頁應用程式，它提供了許多個性鮮明的AI角色可以與之對話，並且支援100種以上的語言，除此之外它提供了三種模式來幫助使用者學習，分別是自由交談模式、角色扮演模式以及主題對話模式。整體來看跟先前的TalkBerry相似，但是在付費方案上有些許的不同，Talkio AI提供了7天的免費試用期外，每個方案都是以月為單位計算，方案之間的差別只有在使用量，所以使用者可以根據自己的練習量來選擇適合自己的方案。</p>\n<p><strong>價格： <span style=\"color:#c13232\">9美金&#x2F;月(300,000 spoken characters) | 19美金&#x2F;月(700,000 spoken characters) | 49美金&#x2F;月(2,000,000 spoken characters)</span></strong><br><br></p>\n<h2 id=\"7-Langotalk\"><a href=\"#7-Langotalk\" class=\"headerlink\" title=\"7. Langotalk\"></a><a href=\"https://www.langotalk.org/\"><strong>7. Langotalk</strong></a></h2><p><img src=\"/2023/11/07/%E6%97%A5%E8%AA%9E%E8%87%AA%E5%AD%B8%E4%B9%9F%E8%83%BD%E9%AB%98%E6%95%88%EF%BC%8C%E7%B2%BE%E9%81%B8%E4%B8%83%E6%AC%BEAI%E5%AD%B8%E7%BF%92%E5%B7%A5%E5%85%B7%E5%A4%A7%E5%85%AC%E9%96%8B/www.langotalk.org_Lobby.png\"></p>\n<p>Langotalk是一款專業的AI語言學習網頁應用程式，這款應用程式相較於先前的AI工具，它給人的感覺更為專業，擁有易用且美觀的介面之外，學習的課程也較為系統性，像是它也包含了單字及文法的教學，所以彌補了一般AI具的短板。而比較需要注意的是，雖然它的系統有支援中文，但是中文是使用Google翻譯來協助翻譯，所以翻譯的品質可能不是很好，但是如果你想要一個專業的AI語言學習工具，那麼Langotalk絕對是不容錯過的。</p>\n<p><strong>價格： <span style=\"color:#c13232\">19.99美金&#x2F;月 | 79.99美金&#x2F;年</span></strong><br><br></p>\n<h2 id=\"整理七種工具的比較表格\"><a href=\"#整理七種工具的比較表格\" class=\"headerlink\" title=\"整理七種工具的比較表格\"></a>整理七種工具的比較表格</h2><table>\n<thead>\n<tr>\n<th>工具名稱</th>\n<th>AI角色</th>\n<th>語音對話</th>\n<th>文法檢查</th>\n<th>價格</th>\n<th>有免費方案</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>今話したい</td>\n<td>❌</td>\n<td>✅</td>\n<td>❌</td>\n<td><strong><span style=\"color:#c13232\">免費、70元新台幣(買斷)</span></strong></td>\n<td>✅</td>\n</tr>\n<tr>\n<td>Voice Contaol for ChatGPT</td>\n<td>❌</td>\n<td>✅</td>\n<td>✅</td>\n<td><strong><span style=\"color:#c13232\">免費、20美金(ChatGPT PLUS)</span></strong></td>\n<td>✅</td>\n</tr>\n<tr>\n<td>TalkBerry</td>\n<td>✅</td>\n<td>✅</td>\n<td>✅</td>\n<td><strong><span style=\"color:#c13232\">免費10個對話、8美金&#x2F;月、60 美金&#x2F;年</span></strong></td>\n<td>❌</td>\n</tr>\n<tr>\n<td>SpeakAI</td>\n<td>✅</td>\n<td>✅</td>\n<td>✅</td>\n<td><strong><span style=\"color:#c13232\">style&#x3D;”color:#c13232”&gt;免費有限次數、200新台幣&#x2F;月、390新台幣&#x2F;季、1290新台幣&#x2F;年、2990新台幣&#x2F;買斷</span></strong></td>\n<td>❌</td>\n</tr>\n<tr>\n<td>日文口說老師Aoi</td>\n<td>✅</td>\n<td>✅</td>\n<td>✅</td>\n<td><strong><span style=\"color:#c13232\">style&#x3D;”color:#c13232”&gt;免費、影片會員 90新台幣&#x2F;月、智能口說會員 590新台幣&#x2F;月、智能口說會員 2490新台幣&#x2F;年</span></strong></td>\n<td>✅</td>\n</tr>\n<tr>\n<td>Talkio AI</td>\n<td>✅</td>\n<td>✅</td>\n<td>✅</td>\n<td><strong><span style=\"color:#c13232\">9美金&#x2F;月(300,000 spoken characters)、19美金&#x2F;月(700,000 spoken characters)、49美金&#x2F;月(2,000,000 spoken characters)</span></strong></td>\n<td>❌</td>\n</tr>\n<tr>\n<td>Langotalk</td>\n<td>✅</td>\n<td>✅</td>\n<td>✅</td>\n<td><strong><span style=\"color:#c13232\">19.99美金&#x2F;月、79.99美金&#x2F;年</span></strong></td>\n<td>❌</td>\n</tr>\n</tbody></table>\n","site":{"data":{}},"excerpt":"<p><img src=\"/2023/11/07/%E6%97%A5%E8%AA%9E%E8%87%AA%E5%AD%B8%E4%B9%9F%E8%83%BD%E9%AB%98%E6%95%88%EF%BC%8C%E7%B2%BE%E9%81%B8%E4%B8%83%E6%AC%BEAI%E5%AD%B8%E7%BF%92%E5%B7%A5%E5%85%B7%E5%A4%A7%E5%85%AC%E9%96%8B/cover.jpg\"></p>\n<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>在ChatGPT等先進人工智能技術的崛起下，人們對於AI在日常生活中應用的關注持續上升。其中，AI家教的出現對於語言學習尤其獲得了重大突破，它極大地改變了傳統學習外語的途徑與經濟負擔。以學習日語為例，學習者不再依賴於高昂的學費與地理位置的限制來接觸到母語為日語的老師或語言交換伙伴。AI技術提供了一種新的經濟、高效的學習方式，使得無論在何時何地，學習者都能夠與AI進行互動，獲得即時反饋，並透過個性化學習計劃來加強語言能力。</p>","more":"<p>那就讓我直入正題，介紹七款引人注目的日文AI學習工具。我將迅速帶你認識這些工具的關鍵優勢，幫助你快速找到適合你的工具。</p>\n<h2 id=\"1-今話したい\"><a href=\"#1-今話したい\" class=\"headerlink\" title=\"1. 今話したい\"></a><a href=\"https://apps.apple.com/tw/app/%E4%BB%8A%E8%A9%B1%E3%81%97%E3%81%9F%E3%81%84-%E4%BE%86%E8%AA%AA%E6%97%A5%E6%96%87%E8%88%87%E8%8B%B1%E6%96%87%E5%90%A7/id1439727086?platform=ipad\"><strong>1. 今話したい</strong></a></h2><p><img src=\"/2023/11/07/%E6%97%A5%E8%AA%9E%E8%87%AA%E5%AD%B8%E4%B9%9F%E8%83%BD%E9%AB%98%E6%95%88%EF%BC%8C%E7%B2%BE%E9%81%B8%E4%B8%83%E6%AC%BEAI%E5%AD%B8%E7%BF%92%E5%B7%A5%E5%85%B7%E5%A4%A7%E5%85%AC%E9%96%8B/imahanashitai.webp\"></p>\n<p>今話したい是一款幫助使用者練習口說的APP，它能夠透過AI語音辨識技術來判斷使用者的發音是否準確，並為使用者評分。<br>使用者可以設定目標，並透過每日的練習來達成目標。<br>此外，這個APP還提供了類似RPG的等級系統，使用者可以透過口說的評價，來獲得經驗值，讓使用者在升級的過程中，逐漸提升自己的口說能力。<br>我自己也經常使用這個APP，我認為這款APP對我的日語口說能力有很大的幫助，讓我確實感受到自己的進步。</p>\n<p><strong>價格： <span style=\"color:#c13232\">免費 | 70元新台幣(買斷)</span></strong><br><br></p>\n<h2 id=\"2-Voice-Contaol-for-ChatGPT\"><a href=\"#2-Voice-Contaol-for-ChatGPT\" class=\"headerlink\" title=\"2. Voice Contaol for ChatGPT\"></a><a href=\"https://chrome.google.com/webstore/detail/voice-control-for-chatgpt/eollffkcakegifhacjnlnegohfdlidhn\"><strong>2. Voice Contaol for ChatGPT</strong></a></h2><p><img src=\"/2023/11/07/%E6%97%A5%E8%AA%9E%E8%87%AA%E5%AD%B8%E4%B9%9F%E8%83%BD%E9%AB%98%E6%95%88%EF%BC%8C%E7%B2%BE%E9%81%B8%E4%B8%83%E6%AC%BEAI%E5%AD%B8%E7%BF%92%E5%B7%A5%E5%85%B7%E5%A4%A7%E5%85%AC%E9%96%8B/voice_control.png\"></p>\n<p>Voice Control for ChatGPT是一款基於ChatGPT的Chrome擴充插件，它能夠透過語音辨識技術，將使用者的語音轉換為文字，並透過ChatGPT回應的文字轉換為語音，讓使用者與ChatGPT進行語音對話。<br>也就是說，我可以在沒有日文的環境中，透過這款擴充插件來與ChatGPT進行日文對話，並且完全免費。<br>這款擴充插件的使用方式非常簡單，只需要在Chrome瀏覽器中安裝這款擴充插件，然後在ChatGPT的網頁中就會出現相對應的介面，讓你可以開始與ChatGPT進行語音對話。<br>但是如果你想要同時使用兩種語言，例如中文與日文，那麼你需要將介面切換到你想說的語言，才能夠識別你的語音，並且有時候AI回應的內容會偏向其中一種語言，導致你如果看不懂AI回應的內容，會需要額外的翻譯工具來幫助你。</p>\n<p><strong>價格： <span style=\"color:#c13232\">免費 | 20美金(ChatGPT PLUS)</span></strong><br><br></p>\n<h2 id=\"3-TalkBerry\"><a href=\"#3-TalkBerry\" class=\"headerlink\" title=\"3. TalkBerry\"></a><a href=\"https://www.talkberry.ai/\"><strong>3. TalkBerry</strong></a></h2><p><img src=\"/2023/11/07/%E6%97%A5%E8%AA%9E%E8%87%AA%E5%AD%B8%E4%B9%9F%E8%83%BD%E9%AB%98%E6%95%88%EF%BC%8C%E7%B2%BE%E9%81%B8%E4%B8%83%E6%AC%BEAI%E5%AD%B8%E7%BF%92%E5%B7%A5%E5%85%B7%E5%A4%A7%E5%85%AC%E9%96%8B/app.talkberry.ai.png\"></p>\n<p>TalkBerry是一個網頁應用程式，它提供了許多個性鮮明的AI角色以及各式各樣的對話場景，讓使用者可以透過這些AI角色來進行日文對話練習。除了日文，它還支援了英文、韓文、中文等多種語言。<br>在對話的過程中，如果不知道對話該如何繼續下去，使用者可以透過AI提供的多個提示來獲得靈感，幫助使用者繼續對話。如果想知道自己的對話是否符合日文的文法，使用者可以透過AI提供的文法檢查功能來檢查自己的對話是否符合日文的文法。<br>此外，我認為TalkBarry最大的優勢就是它的價格，它不僅提供了每天免費的對話次數，還提供了低廉的月費方案，讓使用者可以在不花費太多金錢的情況下，享受到高品質的日文對話練習。</p>\n<p><strong>價格： <span style=\"color:#c13232\">免費每天10個對話 | 8美金&#x2F;月 | 60 美金&#x2F;年</span></strong><br><br></p>\n<h2 id=\"4-SpeakAI\"><a href=\"#4-SpeakAI\" class=\"headerlink\" title=\"4. SpeakAI\"></a><a href=\"https://https//speakai.cc/\"><strong>4. SpeakAI</strong></a></h2><p><img src=\"/2023/11/07/%E6%97%A5%E8%AA%9E%E8%87%AA%E5%AD%B8%E4%B9%9F%E8%83%BD%E9%AB%98%E6%95%88%EF%BC%8C%E7%B2%BE%E9%81%B8%E4%B8%83%E6%AC%BEAI%E5%AD%B8%E7%BF%92%E5%B7%A5%E5%85%B7%E5%A4%A7%E5%85%AC%E9%96%8B/speakai.cc.png\"></p>\n<p>SpeakAI是一款支援多種語言的AI學習APP，它跟我先前提到的TalkBerry有異曲同工之妙，它也提供了許多個性鮮明的AI角色以及各式各樣的對話場景，讓使用者可以透過這些AI角色來進行日文對話練習。除此之外，SpeakAI還有一個非常特別的功能，那就是他可以模擬通電話的情境，進入這個模式後，手機的畫面就會變成通話的畫面，使用者可以像是在跟日本人通電話一樣，進行日文對話練習，而且並不會有太多的延遲。</p>\n<p><strong>價格： <span style=\"color:#c13232\">免費有限次數 | 200新台幣&#x2F;月 | 390新台幣&#x2F;季 | 1290新台幣&#x2F;年 | 2990新台幣&#x2F;買斷</span></strong><br><br></p>\n<h2 id=\"5-日文口說老師Aoi：日文口說會話智慧學習\"><a href=\"#5-日文口說老師Aoi：日文口說會話智慧學習\" class=\"headerlink\" title=\"5. 日文口說老師Aoi：日文口說會話智慧學習\"></a><a href=\"https://apps.apple.com/tw/app/%E6%97%A5%E6%96%87%E5%8F%A3%E8%AA%AA%E8%80%81%E5%B8%ABaoi-%E6%97%A5%E6%96%87%E5%8F%A3%E8%AA%AA%E6%9C%83%E8%A9%B1%E6%99%BA%E6%85%A7%E5%AD%B8%E7%BF%92/id1639964534\"><strong>5. 日文口說老師Aoi：日文口說會話智慧學習</strong></a></h2><p><img src=\"/2023/11/07/%E6%97%A5%E8%AA%9E%E8%87%AA%E5%AD%B8%E4%B9%9F%E8%83%BD%E9%AB%98%E6%95%88%EF%BC%8C%E7%B2%BE%E9%81%B8%E4%B8%83%E6%AC%BEAI%E5%AD%B8%E7%BF%92%E5%B7%A5%E5%85%B7%E5%A4%A7%E5%85%AC%E9%96%8B/aoi.png\"></p>\n<p>日文口說老師Aoi是一款專業的AI日文學習APP，它提供了不同的生活情境，使用AI模擬，並且為使用者設定在這個情境中需要達成的目標，在與AI的對話完成後，AI會根據對話內容判斷使用者是否達成目標，並且給予使用者相對應的評價。<br>我認為這是非常有效的學習方式，因為它很接近真實的使用情境，所以如果長時間的使用這款APP，我相信日文口說能力一定會有很大的進步。<br>這個APP還提供了影片學習的功能，根據社交網路上常見的影片，逐字翻譯成日文之外還會根據影片內容出一些小測驗，讓使用者可以透過影片來學習日文。</p>\n<p><strong>價格： <span style=\"color:#c13232\">免費 | 影片會員 90新台幣&#x2F;月 | 智能口說會員 590新台幣&#x2F;月 | 智能口說會員 2490新台幣&#x2F;年</span></strong><br><br></p>\n<h2 id=\"6-Talkio-AI\"><a href=\"#6-Talkio-AI\" class=\"headerlink\" title=\"6. Talkio AI\"></a><a href=\"https://talkio.ai/\"><strong>6. Talkio AI</strong></a></h2><p><img src=\"/2023/11/07/%E6%97%A5%E8%AA%9E%E8%87%AA%E5%AD%B8%E4%B9%9F%E8%83%BD%E9%AB%98%E6%95%88%EF%BC%8C%E7%B2%BE%E9%81%B8%E4%B8%83%E6%AC%BEAI%E5%AD%B8%E7%BF%92%E5%B7%A5%E5%85%B7%E5%A4%A7%E5%85%AC%E9%96%8B/talkio.ai.png\"></p>\n<p>Talkio AI是一款語言學習的網頁應用程式，它提供了許多個性鮮明的AI角色可以與之對話，並且支援100種以上的語言，除此之外它提供了三種模式來幫助使用者學習，分別是自由交談模式、角色扮演模式以及主題對話模式。整體來看跟先前的TalkBerry相似，但是在付費方案上有些許的不同，Talkio AI提供了7天的免費試用期外，每個方案都是以月為單位計算，方案之間的差別只有在使用量，所以使用者可以根據自己的練習量來選擇適合自己的方案。</p>\n<p><strong>價格： <span style=\"color:#c13232\">9美金&#x2F;月(300,000 spoken characters) | 19美金&#x2F;月(700,000 spoken characters) | 49美金&#x2F;月(2,000,000 spoken characters)</span></strong><br><br></p>\n<h2 id=\"7-Langotalk\"><a href=\"#7-Langotalk\" class=\"headerlink\" title=\"7. Langotalk\"></a><a href=\"https://www.langotalk.org/\"><strong>7. Langotalk</strong></a></h2><p><img src=\"/2023/11/07/%E6%97%A5%E8%AA%9E%E8%87%AA%E5%AD%B8%E4%B9%9F%E8%83%BD%E9%AB%98%E6%95%88%EF%BC%8C%E7%B2%BE%E9%81%B8%E4%B8%83%E6%AC%BEAI%E5%AD%B8%E7%BF%92%E5%B7%A5%E5%85%B7%E5%A4%A7%E5%85%AC%E9%96%8B/www.langotalk.org_Lobby.png\"></p>\n<p>Langotalk是一款專業的AI語言學習網頁應用程式，這款應用程式相較於先前的AI工具，它給人的感覺更為專業，擁有易用且美觀的介面之外，學習的課程也較為系統性，像是它也包含了單字及文法的教學，所以彌補了一般AI具的短板。而比較需要注意的是，雖然它的系統有支援中文，但是中文是使用Google翻譯來協助翻譯，所以翻譯的品質可能不是很好，但是如果你想要一個專業的AI語言學習工具，那麼Langotalk絕對是不容錯過的。</p>\n<p><strong>價格： <span style=\"color:#c13232\">19.99美金&#x2F;月 | 79.99美金&#x2F;年</span></strong><br><br></p>\n<h2 id=\"整理七種工具的比較表格\"><a href=\"#整理七種工具的比較表格\" class=\"headerlink\" title=\"整理七種工具的比較表格\"></a>整理七種工具的比較表格</h2><table>\n<thead>\n<tr>\n<th>工具名稱</th>\n<th>AI角色</th>\n<th>語音對話</th>\n<th>文法檢查</th>\n<th>價格</th>\n<th>有免費方案</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>今話したい</td>\n<td>❌</td>\n<td>✅</td>\n<td>❌</td>\n<td><strong><span style=\"color:#c13232\">免費、70元新台幣(買斷)</span></strong></td>\n<td>✅</td>\n</tr>\n<tr>\n<td>Voice Contaol for ChatGPT</td>\n<td>❌</td>\n<td>✅</td>\n<td>✅</td>\n<td><strong><span style=\"color:#c13232\">免費、20美金(ChatGPT PLUS)</span></strong></td>\n<td>✅</td>\n</tr>\n<tr>\n<td>TalkBerry</td>\n<td>✅</td>\n<td>✅</td>\n<td>✅</td>\n<td><strong><span style=\"color:#c13232\">免費10個對話、8美金&#x2F;月、60 美金&#x2F;年</span></strong></td>\n<td>❌</td>\n</tr>\n<tr>\n<td>SpeakAI</td>\n<td>✅</td>\n<td>✅</td>\n<td>✅</td>\n<td><strong><span style=\"color:#c13232\">style&#x3D;”color:#c13232”&gt;免費有限次數、200新台幣&#x2F;月、390新台幣&#x2F;季、1290新台幣&#x2F;年、2990新台幣&#x2F;買斷</span></strong></td>\n<td>❌</td>\n</tr>\n<tr>\n<td>日文口說老師Aoi</td>\n<td>✅</td>\n<td>✅</td>\n<td>✅</td>\n<td><strong><span style=\"color:#c13232\">style&#x3D;”color:#c13232”&gt;免費、影片會員 90新台幣&#x2F;月、智能口說會員 590新台幣&#x2F;月、智能口說會員 2490新台幣&#x2F;年</span></strong></td>\n<td>✅</td>\n</tr>\n<tr>\n<td>Talkio AI</td>\n<td>✅</td>\n<td>✅</td>\n<td>✅</td>\n<td><strong><span style=\"color:#c13232\">9美金&#x2F;月(300,000 spoken characters)、19美金&#x2F;月(700,000 spoken characters)、49美金&#x2F;月(2,000,000 spoken characters)</span></strong></td>\n<td>❌</td>\n</tr>\n<tr>\n<td>Langotalk</td>\n<td>✅</td>\n<td>✅</td>\n<td>✅</td>\n<td><strong><span style=\"color:#c13232\">19.99美金&#x2F;月、79.99美金&#x2F;年</span></strong></td>\n<td>❌</td>\n</tr>\n</tbody></table>"}],"PostAsset":[{"_id":"source/_posts/2022-02-05-1/cover.jpg","slug":"cover.jpg","post":"clok3v80h00001wva7izn47wz","modified":0,"renderable":0},{"_id":"source/_posts/2022-02-05-3/cover.jpg","slug":"cover.jpg","post":"clok3v80p00031wva25yhf20x","modified":0,"renderable":0},{"_id":"source/_posts/2022-02-05-4/blender-1.jpg","slug":"blender-1.jpg","post":"clok3v80p00041wva3dm58f0x","modified":0,"renderable":0},{"_id":"source/_posts/2022-02-05-4/blender-2.jpg","slug":"blender-2.jpg","post":"clok3v80p00041wva3dm58f0x","modified":0,"renderable":0},{"_id":"source/_posts/2022-02-05-4/blender-3.jpg","slug":"blender-3.jpg","post":"clok3v80p00041wva3dm58f0x","modified":0,"renderable":0},{"_id":"source/_posts/2022-02-05-4/blender-4.jpg","slug":"blender-4.jpg","post":"clok3v80p00041wva3dm58f0x","modified":0,"renderable":0},{"_id":"source/_posts/2022-02-05-4/cover.jpg","slug":"cover.jpg","post":"clok3v80p00041wva3dm58f0x","modified":0,"renderable":0},{"_id":"source/_posts/2022-02-06-4/cover.jpg","slug":"cover.jpg","post":"clok3v80t000b1wva3sxud53p","modified":0,"renderable":0},{"_id":"source/_posts/2022-02-06-3/cover.jpg","slug":"cover.jpg","post":"clok3v80s00091wvaa2p2543d","modified":0,"renderable":0},{"_id":"source/_posts/2022-02-06-5/cover.jpg","slug":"cover.jpg","post":"clok3v80u000c1wva76z6b1s8","modified":0,"renderable":0},{"_id":"source/_posts/2022-03-01-1/cover.jpg","slug":"cover.jpg","post":"clok3v80v000e1wva6po65sy0","modified":0,"renderable":0},{"_id":"source/_posts/2022-03-02-1/cover.jpg","slug":"cover.jpg","post":"clok3v80v000f1wva7t4w0oqj","modified":0,"renderable":0},{"_id":"source/_posts/2023-03-05-TypeScript入門：什麼是TypeScript？/cover.jpg","slug":"cover.jpg","post":"clok3v80w000j1wvaen86gl75","modified":0,"renderable":0},{"_id":"source/_posts/2022-03-14-1/cover.jpg","slug":"cover.jpg","post":"clok3v80w000h1wvabvgefdxy","modified":0,"renderable":0},{"_id":"source/_posts/2023-10-02-什麼是-GPT-Function-calling/cover.jpg","slug":"cover.jpg","post":"clok3v81700231wvab137d1wq","modified":0,"renderable":0},{"_id":"source/_posts/2023-07-08-使用-Firebase-Cloud-Functions-創建網頁後端API/cover.jpg","slug":"cover.jpg","post":"clok3v81700221wvabfk8b4q8","modified":0,"renderable":0},{"_id":"source/_posts/2023-07-08-使用-Firebase-Cloud-Functions-創建網頁後端API/firebase1.png","slug":"firebase1.png","post":"clok3v81700221wvabfk8b4q8","modified":0,"renderable":0},{"_id":"source/_posts/2023-07-08-使用-Firebase-Cloud-Functions-創建網頁後端API/firebase10.png","slug":"firebase10.png","post":"clok3v81700221wvabfk8b4q8","modified":0,"renderable":0},{"_id":"source/_posts/2023-07-08-使用-Firebase-Cloud-Functions-創建網頁後端API/firebase2.png","slug":"firebase2.png","post":"clok3v81700221wvabfk8b4q8","modified":0,"renderable":0},{"_id":"source/_posts/2023-07-08-使用-Firebase-Cloud-Functions-創建網頁後端API/firebase3.png","slug":"firebase3.png","post":"clok3v81700221wvabfk8b4q8","modified":0,"renderable":0},{"_id":"source/_posts/2023-07-08-使用-Firebase-Cloud-Functions-創建網頁後端API/firebase4.png","slug":"firebase4.png","post":"clok3v81700221wvabfk8b4q8","modified":0,"renderable":0},{"_id":"source/_posts/2023-07-08-使用-Firebase-Cloud-Functions-創建網頁後端API/firebase5.png","slug":"firebase5.png","post":"clok3v81700221wvabfk8b4q8","modified":0,"renderable":0},{"_id":"source/_posts/2023-07-08-使用-Firebase-Cloud-Functions-創建網頁後端API/firebase6.png","slug":"firebase6.png","post":"clok3v81700221wvabfk8b4q8","modified":0,"renderable":0},{"_id":"source/_posts/2023-07-08-使用-Firebase-Cloud-Functions-創建網頁後端API/firebase7.png","slug":"firebase7.png","post":"clok3v81700221wvabfk8b4q8","modified":0,"renderable":0},{"_id":"source/_posts/2023-07-08-使用-Firebase-Cloud-Functions-創建網頁後端API/firebase8.png","slug":"firebase8.png","post":"clok3v81700221wvabfk8b4q8","modified":0,"renderable":0},{"_id":"source/_posts/2023-07-08-使用-Firebase-Cloud-Functions-創建網頁後端API/firebase9.png","slug":"firebase9.png","post":"clok3v81700221wvabfk8b4q8","modified":0,"renderable":0},{"_id":"source/_posts/2023-11-07-日語自學也能高效，精選七款AI學習工具大公開/cover.jpg","slug":"cover.jpg","post":"clooif6d00000kcvafimvbtn6","modified":0,"renderable":0},{"_id":"source/_posts/2023-11-07-日語自學也能高效，精選七款AI學習工具大公開/imahanashitai.webp","slug":"imahanashitai.webp","post":"clooif6d00000kcvafimvbtn6","modified":0,"renderable":0},{"_id":"source/_posts/2023-11-07-日語自學也能高效，精選七款AI學習工具大公開/voice_control.png","slug":"voice_control.png","post":"clooif6d00000kcvafimvbtn6","modified":0,"renderable":0},{"_id":"source/_posts/2023-11-07-日語自學也能高效，精選七款AI學習工具大公開/aoi.png","slug":"aoi.png","post":"clooif6d00000kcvafimvbtn6","modified":0,"renderable":0},{"_id":"source/_posts/2023-11-07-日語自學也能高效，精選七款AI學習工具大公開/app.talkberry.ai.png","slug":"app.talkberry.ai.png","post":"clooif6d00000kcvafimvbtn6","modified":0,"renderable":0},{"_id":"source/_posts/2023-11-07-日語自學也能高效，精選七款AI學習工具大公開/speakai.cc.png","slug":"speakai.cc.png","post":"clooif6d00000kcvafimvbtn6","modified":0,"renderable":0},{"_id":"source/_posts/2023-11-07-日語自學也能高效，精選七款AI學習工具大公開/talkio.ai.png","slug":"talkio.ai.png","post":"clooif6d00000kcvafimvbtn6","modified":0,"renderable":0},{"_id":"source/_posts/2023-11-07-日語自學也能高效，精選七款AI學習工具大公開/www.langotalk.org_Lobby.png","slug":"www.langotalk.org_Lobby.png","post":"clooif6d00000kcvafimvbtn6","modified":0,"renderable":0}],"PostCategory":[],"PostTag":[{"post_id":"clok3v80h00001wva7izn47wz","tag_id":"clok3v80n00021wvablpgf0h4","_id":"clok3v80r00071wva6u8n76fi"},{"post_id":"clok3v80l00011wvahy8vbhus","tag_id":"clok3v80r00061wva1z2db1ci","_id":"clok3v80w000i1wvahk2a83nk"},{"post_id":"clok3v80l00011wvahy8vbhus","tag_id":"clok3v80t000a1wvacjc8eca7","_id":"clok3v80x000k1wvaaz99a7pk"},{"post_id":"clok3v80l00011wvahy8vbhus","tag_id":"clok3v80u000d1wvaf0x5ewmx","_id":"clok3v80z000n1wva6chdgucj"},{"post_id":"clok3v80p00031wva25yhf20x","tag_id":"clok3v80w000g1wvabzep5hfj","_id":"clok3v80z000p1wvaalee4mv7"},{"post_id":"clok3v80p00031wva25yhf20x","tag_id":"clok3v80u000d1wvaf0x5ewmx","_id":"clok3v80z000q1wvaa84k6w2u"},{"post_id":"clok3v80p00041wva3dm58f0x","tag_id":"clok3v80z000o1wva7iinhz24","_id":"clok3v811000w1wva4c9chkv4"},{"post_id":"clok3v80p00041wva3dm58f0x","tag_id":"clok3v80w000g1wvabzep5hfj","_id":"clok3v811000x1wvaaknq54g7"},{"post_id":"clok3v80p00041wva3dm58f0x","tag_id":"clok3v810000s1wva3g865qhj","_id":"clok3v811000z1wva3jhebaww"},{"post_id":"clok3v80p00041wva3dm58f0x","tag_id":"clok3v80u000d1wvaf0x5ewmx","_id":"clok3v81100101wvacxr93q8m"},{"post_id":"clok3v80p00041wva3dm58f0x","tag_id":"clok3v810000u1wva8dfy66nf","_id":"clok3v81100121wva10fr50iz"},{"post_id":"clok3v80q00051wvagn8r5fh2","tag_id":"clok3v810000v1wvaapyjbco9","_id":"clok3v81100131wva0szdf30s"},{"post_id":"clok3v80r00081wvahgry1x1z","tag_id":"clok3v810000v1wvaapyjbco9","_id":"clok3v81100151wva15jo80sd"},{"post_id":"clok3v80s00091wvaa2p2543d","tag_id":"clok3v81100111wvaaz359dbh","_id":"clok3v81200181wva3iq35z8l"},{"post_id":"clok3v80s00091wvaa2p2543d","tag_id":"clok3v81100141wva87vx0xaw","_id":"clok3v81200191wva8jgub40h"},{"post_id":"clok3v80s00091wvaa2p2543d","tag_id":"clok3v81200161wvaghdw2itx","_id":"clok3v812001b1wvaf7vw77ch"},{"post_id":"clok3v80t000b1wva3sxud53p","tag_id":"clok3v81100111wvaaz359dbh","_id":"clok3v812001e1wva0gny70n4"},{"post_id":"clok3v80t000b1wva3sxud53p","tag_id":"clok3v81100141wva87vx0xaw","_id":"clok3v813001f1wvahlkt92xy"},{"post_id":"clok3v80t000b1wva3sxud53p","tag_id":"clok3v812001c1wva3mdm6ie2","_id":"clok3v813001h1wva2a8fejjn"},{"post_id":"clok3v80u000c1wva76z6b1s8","tag_id":"clok3v80w000g1wvabzep5hfj","_id":"clok3v813001j1wvadmsuae9i"},{"post_id":"clok3v80u000c1wva76z6b1s8","tag_id":"clok3v80u000d1wvaf0x5ewmx","_id":"clok3v813001k1wvadmvua6nw"},{"post_id":"clok3v80v000e1wva6po65sy0","tag_id":"clok3v80z000o1wva7iinhz24","_id":"clok3v814001n1wva5j852hiq"},{"post_id":"clok3v80v000e1wva6po65sy0","tag_id":"clok3v813001l1wva56i11nou","_id":"clok3v814001o1wvafvty9o9e"},{"post_id":"clok3v80v000f1wva7t4w0oqj","tag_id":"clok3v813001m1wva0x15891g","_id":"clok3v814001r1wvafrik1f96"},{"post_id":"clok3v80v000f1wva7t4w0oqj","tag_id":"clok3v81100111wvaaz359dbh","_id":"clok3v814001s1wvacwricsfh"},{"post_id":"clok3v80w000h1wvabvgefdxy","tag_id":"clok3v814001q1wvaa6frem9s","_id":"clok3v814001u1wvac89588sp"},{"post_id":"clok3v80w000h1wvabvgefdxy","tag_id":"clok3v80u000d1wvaf0x5ewmx","_id":"clok3v814001v1wvafge67fu2"},{"post_id":"clok3v80w000j1wvaen86gl75","tag_id":"clok3v814001t1wva1dmj1qkm","_id":"clok3v815001x1wva5o5w3o27"},{"post_id":"clok3v80w000j1wvaen86gl75","tag_id":"clok3v80u000d1wvaf0x5ewmx","_id":"clok3v815001y1wva0siv210z"},{"post_id":"clok3v80x000l1wvaa5gxcsfg","tag_id":"clok3v814001w1wva468ld5q7","_id":"clok3v81500201wva5074gqng"},{"post_id":"clok3v80x000l1wvaa5gxcsfg","tag_id":"clok3v815001z1wvahdpqgcek","_id":"clok3v81500211wva42ryfzbs"},{"post_id":"clok3v81700221wvabfk8b4q8","tag_id":"clok3v80u000d1wvaf0x5ewmx","_id":"clok3v81800261wva8849danz"},{"post_id":"clok3v81700221wvabfk8b4q8","tag_id":"clok3v81800241wvac9fffhmr","_id":"clok3v81800271wva3n0vgcv6"},{"post_id":"clok3v81700231wvab137d1wq","tag_id":"clok3v81800251wvaaiogapy6","_id":"clok3v819002a1wva96hbdf02"},{"post_id":"clok3v81700231wvab137d1wq","tag_id":"clok3v81800281wvah7ab3cj2","_id":"clok3v819002b1wvagr3o6ymu"},{"post_id":"clok3v81700231wvab137d1wq","tag_id":"clok3v81800291wvadeff0vl3","_id":"clok3v819002c1wvag48z8caq"},{"post_id":"clooif6d00000kcvafimvbtn6","tag_id":"clok3v813001m1wva0x15891g","_id":"clooif6d50001kcvabat4g3n2"},{"post_id":"clooif6d00000kcvafimvbtn6","tag_id":"clok3v81800291wvadeff0vl3","_id":"clooif6d50002kcvae9z8ajnh"}],"Tag":[{"name":"other","_id":"clok3v80n00021wvablpgf0h4"},{"name":"React","_id":"clok3v80r00061wva1z2db1ci"},{"name":"framework","_id":"clok3v80t000a1wvacjc8eca7"},{"name":"JavaScript","_id":"clok3v80u000d1wvaf0x5ewmx"},{"name":"plugin","_id":"clok3v80w000g1wvabzep5hfj"},{"name":"Three.js","_id":"clok3v80z000o1wva7iinhz24"},{"name":"3d","_id":"clok3v810000s1wva3g865qhj"},{"name":"Blender","_id":"clok3v810000u1wva8dfy66nf"},{"name":"scss","_id":"clok3v810000v1wvaapyjbco9"},{"name":"front end","_id":"clok3v81100111wvaaz359dbh"},{"name":"share","_id":"clok3v81100141wva87vx0xaw"},{"name":"design","_id":"clok3v81200161wvaghdw2itx"},{"name":"interview","_id":"clok3v812001c1wva3mdm6ie2"},{"name":"tween.js","_id":"clok3v813001l1wva56i11nou"},{"name":"Japanese","_id":"clok3v813001m1wva0x15891g"},{"name":"Google Map","_id":"clok3v814001q1wvaa6frem9s"},{"name":"TypeScript","_id":"clok3v814001t1wva1dmj1qkm"},{"name":"frontend","_id":"clok3v814001w1wva468ld5q7"},{"name":"tool","_id":"clok3v815001z1wvahdpqgcek"},{"name":"Firebase","_id":"clok3v81800241wvac9fffhmr"},{"name":"GPT","_id":"clok3v81800251wvaaiogapy6"},{"name":"Node.js","_id":"clok3v81800281wvah7ab3cj2"},{"name":"AI","_id":"clok3v81800291wvadeff0vl3"}]}}